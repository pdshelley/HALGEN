//
//  AVRModules.swift
//  XMLTest
//
//  Created by Paul Shelley on 11/4/23.
//

import Foundation
import XMLCoder

struct AVRModules: Codable {
    let module: [Module]

    struct Module: Codable {
        @Attribute var caption: Caption?
        @Attribute var name: Name
        let registerGroup: [RegisterGroup]
        let valueGroup: [ValueGroup]

        enum CodingKeys: String, CodingKey {
            case name
            case caption
            case registerGroup = "register-group"
            case valueGroup = "value-group"
        }
        
        enum Caption: String, Codable {
            case Fuses = "Fuses"
            case Lockbits = "Lockbits"
            case ioPort = "I/O Port"
            case JTAGInterface = "JTAG Interface"
            case SerialPeripheralInterface = "Serial Peripheral Interface"
            case TwoWireSerialInterface = "Two Wire Serial Interface"
            case USART = "USART"
            case CPURegisters = "CPU Registers"
            case Bootloader = "Bootloader"
            case ExternalInterrupts = "External Interrupts"
            case EEPROM = "EEPROM"
            case TimerCounter8bit = "Timer/Counter, 8-bit"
            case TimerCounter16bit = "Timer/Counter, 16-bit"
            case TimerCounter8bitAsync = "Timer/Counter, 8-bit Async"
            case WatchdogTimer = "Watchdog Timer"
            case AnalogToDigitalConverter = "Analog-to-Digital Converter"
            case AnalogToDigitalConverter2 = "Analog to Digital Converter"
            case AnalogComparator = "Analog Comparator"
            case ControllerAreaNetwork = "Controller Area Network"
            case PowerStageController = "Power Stage Controller"
            case ExtendedUSART = "Extended USART"
            case DigitalToAnalogConverter = "Digital-to-Analog Converter"
            case PhaseLockedLoop = "Phase Locked Loop"
            case USBDeviceRegisters = "USB Device Registers"
            case PS2Controller = "PS/2 Controller"
            case USBController = "USB Controller"
            case USBHostRegisters = "USB Host Registers"
            case Bandgap = "Bandgap"
            case FETControl = "FET Control"
            case BatteryProtection = "Battery Protection"
            case CoulombCounter = "Coulomb Counter"
            case VoltageRegulator = "Voltage Regulator"
            case CellBalancing = "Cell Balancing"
            case ChargerDetect = "Charger Detect"
            case LocalInterconnectNetwork = "Local Interconnect Network"
            case TimerCounter10bit = "Timer/Counter, 10-bit"
            case DeviceID = "Device ID"
            case OtherRegisters = "Other Registers"
            case WakeupTimer = "Wakeup Timer"
            case LowPower24GHzTransceiver = "Low-Power 2.4 GHz Transceiver"
            case MACSymbolCounter = "MAC Symbol Counter"
            case FLASHController = "FLASH Controller"
            case PowerController = "Power Controller"
            case UniversalSerialInterface = "Universal Serial Interface"
            case LiquidCrystalDisplay = "Liquid Crystal Display"
            case ClockFailureDetection = "Clock Failure Detection"
            case PeripheralTouchController = "Peripheral Touch Controller"
            case BodInterface = "Bod interface"
            case ConfigurableCustomLogic = "Configurable Custom Logic"
            case ClockController = "Clock controller"
            case CPU = "CPU"
            case InterruptController = "Interrupt Controller"
            case CRCSCAN = "CRCSCAN"
            case EventSystem = "Event System"
            case GeneralPurposeIO = "General Purpose IO"
            case Lockbit = "Lockbit"
            case NonVolatileMemoryController = "Non-volatile Memory Controller"
            case IOPorts = "I/O Ports"
            case PortMultiplexer = "Port Multiplexer"
            case ResetController = "Reset controller"
            case RealTimeCounter = "Real-Time Counter"
            case SignatureRow = "Signature row"
            case SleepController = "Sleep Controller"
            case SystemConfigurationRegisters = "System Configuration Registers"
            case sixteenBitTimerCounterTypeA = "16-bit Timer/Counter Type A"
            case sixteenBitTimerTypeB = "16-bit Timer Type B"
            case TwoWireInterface = "Two-Wire Interface"
            case UniversalSynchronousAndAsynchronousReceiverAndTransmitter = "Universal Synchronous and Asynchronous Receiver and Transmitter"
            case UserRow = "User Row"
            case VirtualPorts = "Virtual Ports"
            case VoltageReference = "Voltage reference"
            case WatchDogTimer = "Watch-Dog Timer"
        }
        
        enum Name: String, Codable { // I think this might be identical to other "Name" lists
            case fuse = "FUSE"
            case lockbit = "LOCKBIT"
            case port = "PORT"
            case jtag = "JTAG"
            case spi = "SPI"
            case twi = "TWI"
            case usart = "USART"
            case cpu = "CPU"
            case bootLoad = "BOOT_LOAD"
            case exInt = "EXINT"
            case eeprom = "EEPROM"
            case tc8 = "TC8"
            case tc8Async = "TC8_ASYNC"
            case tc10 = "TC10"
            case tc16 = "TC16"
            case tca = "TCA"
            case tcb = "TCB"
            case wdt = "WDT"
            case adc = "ADC"
            case ac = "AC"
            case can = "CAN"
            case psc = "PSC"
            case eusart = "EUSART"
            case dac = "DAC"
            case pll = "PLL"
            case usbDeivce = "USB_DEVICE"
            case ps2 = "PS2"
            case usbGlobal = "USB_GLOBAL"
            case usbHost = "USB_HOST"
            case bandgap = "BANDGAP"
            case fet = "FET"
            case batteryProtection = "BATTERY_PROTECTION"
            case coulombCounter = "COULOMB_COUNTER"
            case voltageRegulator = "VOLTAGE_REGULATOR"
            case cellBallancing = "CELL_BALANCING"
            case chargerDetect = "CHARGER_DETECT"
            case linUART = "LINUART"
            case deviceID = "DEVICEID"
            case misc = "MISC"
            case wakeupTimer = "WAKEUP_TIMER"
            case trx24 = "TRX24"
            case symcnt = "SYMCNT"
            case flash = "FLASH"
            case pwrctrl = "PWRCTRL"
            case usi = "USI"
            case lcd = "LCD"
            case cfd = "CFD"
            case ptc = "PTC"
            case bod = "BOD"
            case ccl = "CCL"
            case clkctrl = "CLKCTRL"
            case cpuInt = "CPUINT"
            case crcscan = "CRCSCAN"
            case evsys = "EVSYS"
            case gpio = "GPIO"
            case nvmctrl = "NVMCTRL"
            case portMUX = "PORTMUX"
            case rstctrl = "RSTCTRL"
            case rtc = "RTC"
            case sigrow = "SIGROW"
            case slpctrl = "SLPCTRL"
            case syscfg = "SYSCFG"
            case userrow = "USERROW"
            case vport = "VPORT"
            case vREF = "VREF"
        }

        struct RegisterGroup: Codable {
            @Attribute var name: Name
            @Attribute var caption: Caption?
            let register: [Register]
            
            enum Name: String, Codable { // Could be a duplicate list with another "Name"
                case PORT = "PORT"
                case portA = "PORTA"
                case portB = "PORTB"
                case portC = "PORTC"
                case portD = "PORTD"
                case portE = "PORTE"
                case portF = "PORTF"
                case portG = "PORTG"
                case PORTH = "PORTH"
                case PORTJ = "PORTJ"
                case PORTK = "PORTK"
                case PORTL = "PORTL"
                case TC0 = "TC0"
                case TC1 = "TC1"
                case TC2 = "TC2"
                case TC3 = "TC3"
                case TC4 = "TC4"
                case TC5 = "TC5"
                case JTAG = "JTAG"
                case SPI = "SPI"
                case TWI = "TWI"
                case USART0 = "USART0"
                case USART1 = "USART1"
                case CPU = "CPU"
                case BOOT_LOAD = "BOOT_LOAD"
                case EXINT = "EXINT"
                case EEPROM = "EEPROM"
                case WDT = "WDT"
                case ADC = "ADC"
                case AC = "AC"
                case CAN = "CAN"
                case PSC0 = "PSC0"
                case PSC2 = "PSC2"
                case PSC1 = "PSC1"
                case EUSART = "EUSART"
                case DAC = "DAC"
                case USART = "USART"
                case PLL = "PLL"
                case USB_DEVICE = "USB_DEVICE"
                case PS2 = "PS2"
                case USB_GLOBAL = "USB_GLOBAL"
                case USB_HOST = "USB_HOST"
                case BANDGAP = "BANDGAP"
                case FET = "FET"
                case batteryProtection = "BATTERY_PROTECTION"
                case coulombCounter = "COULOMB_COUNTER"
                case voltageRegulator = "VOLTAGE_REGULATOR"
                case cellBalancing = "CELL_BALANCING"
                case chargerDetect = "CHARGER_DETECT"
                case LINUART = "LINUART"
                case PSC = "PSC"
                case deviceID = "DEVICEID"
                case misc = "MISC"
                case WAKEUP_TIMER = "WAKEUP_TIMER"
                case USART0_SPI = "USART0_SPI"
                case USART1_SPI = "USART1_SPI"
                case TRX24 = "TRX24"
                case SYMCNT = "SYMCNT"
                case FLASH = "FLASH"
                case PWRCTRL = "PWRCTRL"
                case USI = "USI"
                case LCD = "LCD"
                case USART2 = "USART2"
                case SPI0 = "SPI0"
                case SPI1 = "SPI1"
                case TWI0 = "TWI0"
                case TWI1 = "TWI1"
                case CFD = "CFD"
                case USART3 = "USART3"
                case BOD = "BOD"
                case CCL = "CCL"
                case CLKCTRL = "CLKCTRL"
                case CPUINT = "CPUINT"
                case CRCSCAN = "CRCSCAN"
                case EVSYS = "EVSYS"
                case GPIO = "GPIO"
                case NVMCTRL = "NVMCTRL"
                case PORTMUX = "PORTMUX"
                case RSTCTRL = "RSTCTRL"
                case RTC = "RTC"
                case SIGROW = "SIGROW"
                case SLPCTRL = "SLPCTRL"
                case SYSCFG = "SYSCFG"
                case TCA = "TCA"
                case TCB = "TCB"
                case USERROW = "USERROW"
                case FUSE = "FUSE"
                case LOCKBIT = "LOCKBIT"
                case VPORT = "VPORT"
                case VREF = "VREF"
            }
            
            enum Caption: String, Codable { // Probably the same as other Caption lists.
                case Fuses = "Fuses"
                case Lockbits = "Lockbits"
                case IOPort = "I/O Port"
                case JTAGInterface = "JTAG Interface"
                case SerialPeripheralInterface = "Serial Peripheral Interface"
                case TwoWireSerialInterface = "Two Wire Serial Interface"
                case USART = "USART"
                case CPURegisters = "CPU Registers"
                case Bootloader = "Bootloader"
                case ExternalInterrupts = "External Interrupts"
                case EEPROM = "EEPROM"
                case TimerCounter8bit = "Timer/Counter, 8-bit"
                case TimerCounter16bit = "Timer/Counter, 16-bit"
                case TimerCounter8bitAsync = "Timer/Counter, 8-bit Async"
                case WatchdogTimer = "Watchdog Timer"
                case AnalogToDigitalConverter = "Analog-to-Digital Converter"
                case AnalogToDigitalConverter2 = "Analog to Digital Converter" // Duplicate
                case AnalogComparator = "Analog Comparator"
                case ControllerAreaNetwork = "Controller Area Network"
                case PowerStageController = "Power Stage Controller"
                case ExtendedUSART = "Extended USART"
                case DigitalToAnalogConverter = "Digital-to-Analog Converter"
                case PhaseLockedLoop = "Phase Locked Loop"
                case USBDeviceRegisters = "USB Device Registers"
                case PS2Controller = "PS/2 Controller"
                case USBController = "USB Controller"
                case USBHostRegisters = "USB Host Registers"
                case Bandgap = "Bandgap"
                case FETControl = "FET Control"
                case BatteryProtection = "Battery Protection"
                case CoulombCounter = "Coulomb Counter"
                case VoltageRegulator = "Voltage Regulator"
                case CellBalancing = "Cell Balancing"
                case ChargerDetect = "Charger Detect"
                case LocalInterconnectNetwork = "Local Interconnect Network"
                case TimerCounter10bit = "Timer/Counter, 10-bit"
                case DeviceID = "Device ID"
                case OtherRegisters = "Other Registers"
                case WakeupTimer = "Wakeup Timer"
                case LowPower24GHzTransceiver = "Low-Power 2.4 GHz Transceiver"
                case MACSymbolCounter = "MAC Symbol Counter"
                case FLASHController = "FLASH Controller"
                case PowerController = "Power Controller"
                case UniversalSerialInterface = "Universal Serial Interface"
                case LiquidCrystalDisplay = "Liquid Crystal Display"
                case ClockFailureDetection = "Clock Failure Detection"
                case BodInterface = "Bod interface"
                case ConfigurableCustomLogic = "Configurable Custom Logic"
                case ClockController = "Clock controller"
                case CPU = "CPU"
                case InterruptController = "Interrupt Controller"
                case CRCSCAN = "CRCSCAN"
                case EventSystem = "Event System"
                case GeneralPurposeIO = "General Purpose IO"
                case Lockbit = "Lockbit"
                case NonVolatileMemoryController = "Non-volatile Memory Controller"
                case IOPorts = "I/O Ports"
                case PortMultiplexer = "Port Multiplexer"
                case ResetController = "Reset controller"
                case RealTimeCounter = "Real-Time Counter"
                case SignatureRow = "Signature row"
                case SleepController = "Sleep Controller"
                case SystemConfigurationRegisters = "System Configuration Registers"
                case sixteenBitTimerCounterTypeA = "16-bit Timer/Counter Type A"
                case sixteenBitTimerTypeB = "16-bit Timer Type B"
                case TwoWireInterface = "Two-Wire Interface"
                case UniversalSynchronousAndAsynchronousReceiverAndTransmitter = "Universal Synchronous and Asynchronous Receiver and Transmitter"
                case UserRow = "User Row"
                case VirtualPorts = "Virtual Ports"
                case Voltagereference = "Voltage reference"
                case WatchDogTimer = "Watch-Dog Timer"
            }

            struct Register: Codable {
                @Attribute var name: Name
                @Attribute var offset: Offset
                @Attribute var size: Size
                @Attribute var initval: Initval?
                @Attribute var caption: Caption?
                @Attribute var mask: Mask?
                @Attribute var ocdRW: OCDRW?
                let bitfield: [Bitfield]
                
                enum CodingKeys: String, CodingKey {
                    case name
                    case offset
                    case size
                    case initval
                    case caption
                    case mask
                    case ocdRW = "ocd-rw"
                    case bitfield
                }
                
                enum Name: String, Codable {
                    case EXTENDED
                    case HIGH
                    case LOW
                    case LOCKBIT
                    case PORTA
                    case DDRA
                    case PINA
                    case PORTB
                    case DDRB
                    case PINB
                    case PORTC
                    case DDRC
                    case PINC
                    case PORTD
                    case DDRD
                    case PIND
                    case PORTE
                    case DDRE
                    case PINE
                    case PORTF
                    case DDRF
                    case PINF
                    case PORTG
                    case DDRG
                    case PING
                    case OCDR
                    case MCUCR
                    case MCUSR
                    case SPCR
                    case SPSR
                    case SPDR
                    case TWBR
                    case TWCR
                    case TWSR
                    case TWDR
                    case TWAR
                    case UDR0
                    case UCSR0A
                    case UCSR0B
                    case UCSR0C
                    case UBRR0
                    case UDR1
                    case UCSR1A
                    case UCSR1B
                    case UCSR1C
                    case UBRR1
                    case SREG
                    case SP
                    case XMCRA
                    case XMCRB
                    case OSCCAL
                    case CLKPR
                    case SMCR
                    case RAMPZ
                    case GPIOR2
                    case GPIOR1
                    case GPIOR0
                    case SPMCSR
                    case EICRA
                    case EICRB
                    case EIMSK
                    case EIFR
                    case EEAR
                    case EEDR
                    case EECR
                    case TCCR0A
                    case TCNT0
                    case OCR0A
                    case TIMSK0
                    case TIFR0
                    case GTCCR
                    case TCCR1A
                    case TCCR1B
                    case TCCR1C
                    case TCNT1
                    case OCR1A
                    case OCR1B
                    case OCR1C
                    case ICR1
                    case TIMSK1
                    case TIFR1
                    case TCCR3A
                    case TCCR3B
                    case TCCR3C
                    case TCNT3
                    case OCR3A
                    case OCR3B
                    case OCR3C
                    case ICR3
                    case TIMSK3
                    case TIFR3
                    case TCCR2A
                    case TCNT2
                    case OCR2A
                    case TIMSK2
                    case TIFR2
                    case ASSR
                    case WDTCR
                    case ADMUX
                    case ADCSRA
                    case ADC
                    case ADCSRB
                    case DIDR0
                    case ACSR
                    case DIDR1
                    case CANGCON
                    case CANGSTA
                    case CANGIT
                    case CANGIE
                    case CANEN2
                    case CANEN1
                    case CANIE2
                    case CANIE1
                    case CANSIT2
                    case CANSIT1
                    case CANBT1
                    case CANBT2
                    case CANBT3
                    case CANTCON
                    case CANTIM
                    case CANTTC
                    case CANTEC
                    case CANREC
                    case CANHPMOB
                    case CANPAGE
                    case CANSTMOB
                    case CANCDMOB
                    case CANIDT4
                    case CANIDT3
                    case CANIDT2
                    case CANIDT1
                    case CANIDM4
                    case CANIDM3
                    case CANIDM2
                    case CANIDM1
                    case CANSTM
                    case CANMSG
                    case PICR0
                    case PFRC0B
                    case PFRC0A
                    case PCTL0
                    case PCNF0
                    case OCR0RB
                    case OCR0SB
                    case OCR0RA
                    case OCR0SA
                    case PSOC0
                    case PIM0
                    case PIFR0
                    case PICR2
                    case PFRC2B
                    case PFRC2A
                    case PCTL2
                    case PCNF2
                    case OCR2RB
                    case OCR2SB
                    case OCR2RA
                    case OCR2SA
                    case POM2
                    case PSOC2
                    case PIM2
                    case PIFR2
                    case PICR1
                    case PFRC1B
                    case PFRC1A
                    case PCTL1
                    case PSOC1
                    case GPIOR3
                    case PLLCSR
                    case PRR
                    case TCCR0B
                    case OCR0B
                    case AMP0CSR
                    case AMP1CSR
                    case WDTCSR
                    case AC0CON
                    case AC2CON
                    case EUDR
                    case EUCSRA
                    case EUCSRB
                    case EUCSRC
                    case MUBRR
                    case AC1CON
                    case DAC
                    case DACON
                    case UDR
                    case UCSRA
                    case UCSRB
                    case UCSRC
                    case UBRR
                    case PCNF1
                    case OCR1RB
                    case OCR1SB
                    case OCR1RA
                    case OCR1SA
                    case PIM1
                    case PIFR1
                    case AC3CON
                    case AC3ECON
                    case AC2ECON
                    case AC1ECON
                    case CLKCSR
                    case CLKSELR
                    case BGCCR
                    case BGCRR
                    case PCNFE2
                    case PASDLY2
                    case DACH
                    case DACL
                    case PICR2H
                    case PICR2L
                    case MUBRRH
                    case MUBRRL
                    case UBRRH
                    case UBRRL
                    case UEINT
                    case UEBCLX
                    case UEDATX
                    case UEIENX
                    case UESTA1X
                    case UESTA0X
                    case UECFG1X
                    case UECFG0X
                    case UECONX
                    case UERST
                    case UENUM
                    case UEINTX
                    case UDMFN
                    case UDFNUM
                    case UDADDR
                    case UDIEN
                    case UDINT
                    case UDCON
                    case USBCON
                    case REGCR
                    case UPOE
                    case PS2CON
                    case EIND
                    case PRR1
                    case PRR0
                    case CLKSTA
                    case CLKSEL1
                    case CLKSEL0
                    case DWDR
                    case PCMSK0
                    case PCMSK1
                    case PCIFR
                    case PCICR
                    case UCSR1D
                    case WDTCKD
                    case TWAMR
                    case UEBCHX
                    case OTGINT
                    case OTGIEN
                    case OTGCON
                    case OTGTCON
                    case USBINT
                    case USBSTA
                    case UHWCON
                    case UPERRX
                    case UPINT
                    case UPBCHX
                    case UPBCLX
                    case UPDATX
                    case UPIENX
                    case UPCFG2X
                    case UPSTAX
                    case UPCFG1X
                    case UPCFG0X
                    case UPCONX
                    case UPRST
                    case UPNUM
                    case UPINTX
                    case UPINRQX
                    case UHFLEN
                    case UHFNUM
                    case UHADDR
                    case UHIEN
                    case UHINT
                    case UHCON
                    case TCCR2B
                    case OCR2B
                    case SFIOR
                    case GICR
                    case GIFR
                    case TIMSK
                    case TIFR
                    case TCCR0
                    case TCCR2
                    case OCR2
                    case MCUCSR
                    case SPMCR
                    case VADMUX
                    case VADC
                    case VADCSR
                    case FCSR
                    case FOSCCAL
                    case OSICSR
                    case BPPLR
                    case BPCR
                    case BPHCTR
                    case BPOCTR
                    case BPSCTR
                    case BPCHCD
                    case BPDHCD
                    case BPCOCD
                    case BPDOCD
                    case BPSCD
                    case BPIFR
                    case BPIMSK
                    case CADCSRA
                    case CADCSRB
                    case CADIC
                    case CADAC3
                    case CADAC2
                    case CADAC1
                    case CADAC0
                    case CADRC
                    case ROCR
                    case ACMUX
                    case OCR0
                    case CADCSRC
                    case CADRCC
                    case CADRDC
                    case TWBCSR
                    case CBCR
                    case CHGDCSR
                    case BGCSR
                    case AMP2CSR
                    case LINCR
                    case LINSIR
                    case LINENIR
                    case LINERR
                    case LINBTR
                    case LINBRR
                    case LINDLR
                    case LINIDR
                    case LINSEL
                    case LINDAT
                    case PCMSK3
                    case PCMSK2
                    case PIFR
                    case PIM
                    case PMIC2
                    case PMIC1
                    case PMIC0
                    case PCTL
                    case POC
                    case PCNF
                    case PSYNC
                    case POCR_RB
                    case POCR2SB
                    case POCR2RA
                    case POCR2SA
                    case POCR1SB
                    case POCR1RA
                    case POCR1SA
                    case POCR0SB
                    case POCR0RA
                    case POCR0SA
                    case TCCR4A
                    case TCCR4B
                    case TCCR4C
                    case TCCR4D
                    case TCCR4E
                    case TCNT4
                    case TC4H
                    case OCR4A
                    case OCR4B
                    case OCR4C
                    case OCR4D
                    case TIMSK4
                    case TIFR4
                    case DT4
                    case DIDR2
                    case RCCTRL
                    case PLLFRQ
                    case EEARL
                    case EEARH
                    case DEVID0
                    case DEVID1
                    case DEVID2
                    case DEVID3
                    case DEVID4
                    case DEVID5
                    case DEVID6
                    case DEVID7
                    case DEVID8
                    case UCSR0D
                    case ACSRB
                    case UBRR0H
                    case UBRR0L
                    case UBRR1H
                    case UBRR1L
                    case XDIV
                    case ETIMSK
                    case ETIFR
                    case CANTIML
                    case CANTIMH
                    case CANTTCL
                    case CANTTCH
                    case CANSTML
                    case CANSTMH
                    case LINBRRL
                    case LINBRRH
                    case PBOV
                    case ADSCSRA
                    case ADSCSRB
                    case ADCRA
                    case ADCRB
                    case ADCRC
                    case ADCRD
                    case ADCRE
                    case ADIFR
                    case ADIMR
                    case CADRCL
                    case VADIC
                    case VADAC3
                    case VADAC2
                    case VADAC1
                    case VADAC0
                    case BGCSRA
                    case BGCRA
                    case BGCRB
                    case BGLR
                    case SOSCCALA
                    case SOSCCALB
                    case WDTCLR
                    case WUTCSR
                    case TCCR5A
                    case TCCR5B
                    case TCCR5C
                    case TCNT5
                    case OCR5A
                    case OCR5B
                    case OCR5C
                    case ICR5
                    case TIMSK5
                    case TIFR5
                    case ICR4
                    case PARCR
                    case MAFSA0L
                    case MAFSA0H
                    case MAFPA0L
                    case MAFPA0H
                    case MAFSA1L
                    case MAFSA1H
                    case MAFPA1L
                    case MAFPA1H
                    case MAFSA2L
                    case MAFSA2H
                    case MAFPA2L
                    case MAFPA2H
                    case MAFSA3L
                    case MAFSA3H
                    case MAFPA3L
                    case MAFPA3H
                    case MAFCR0
                    case MAFCR1
                    case AES_CTRL
                    case AES_STATUS
                    case AES_STATE
                    case AES_KEY
                    case TRX_STATUS
                    case TRX_STATE
                    case TRX_CTRL_0
                    case TRX_CTRL_1
                    case PHY_TX_PWR
                    case PHY_RSSI
                    case PHY_ED_LEVEL
                    case PHY_CC_CCA
                    case CCA_THRES
                    case RX_CTRL
                    case SFD_VALUE
                    case TRX_CTRL_2
                    case ANT_DIV
                    case IRQ_MASK
                    case IRQ_STATUS
                    case IRQ_MASK1
                    case IRQ_STATUS1
                    case VREG_CTRL
                    case BATMON
                    case XOSC_CTRL
                    case CC_CTRL_0
                    case CC_CTRL_1
                    case RX_SYN
                    case TRX_RPC
                    case XAH_CTRL_1
                    case FTN_CTRL
                    case PLL_CF
                    case PLL_DCU
                    case PART_NUM
                    case VERSION_NUM
                    case MAN_ID_0
                    case MAN_ID_1
                    case SHORT_ADDR_0
                    case SHORT_ADDR_1
                    case PAN_ID_0
                    case PAN_ID_1
                    case IEEE_ADDR_0
                    case IEEE_ADDR_1
                    case IEEE_ADDR_2
                    case IEEE_ADDR_3
                    case IEEE_ADDR_4
                    case IEEE_ADDR_5
                    case IEEE_ADDR_6
                    case IEEE_ADDR_7
                    case XAH_CTRL_0
                    case CSMA_SEED_0
                    case CSMA_SEED_1
                    case CSMA_BE
                    case TST_CTRL_DIGI
                    case TST_RX_LENGTH
                    case TRXFBST
                    case TRXFBEND
                    case SCTSTRHH
                    case SCTSTRHL
                    case SCTSTRLH
                    case SCTSTRLL
                    case SCOCR1HH
                    case SCOCR1HL
                    case SCOCR1LH
                    case SCOCR1LL
                    case SCOCR2HH
                    case SCOCR2HL
                    case SCOCR2LH
                    case SCOCR2LL
                    case SCOCR3HH
                    case SCOCR3HL
                    case SCOCR3LH
                    case SCOCR3LL
                    case SCTSRHH
                    case SCTSRHL
                    case SCTSRLH
                    case SCTSRLL
                    case SCBTSRHH
                    case SCBTSRHL
                    case SCBTSRLH
                    case SCBTSRLL
                    case SCCNTHH
                    case SCCNTHL
                    case SCCNTLH
                    case SCCNTLL
                    case SCIRQS
                    case SCIRQM
                    case SCSR
                    case SCCR1
                    case SCCR0
                    case SCCSR
                    case SCRSTRHH
                    case SCRSTRHL
                    case SCRSTRLH
                    case SCRSTRLL
                    case ADCSRC
                    case PRR2
                    case NEMCR
                    case BGCR
                    case TRXPR
                    case DRTRAM0
                    case DRTRAM1
                    case DRTRAM2
                    case DRTRAM3
                    case LLDRL
                    case LLDRH
                    case LLCR
                    case DPDS0
                    case DPDS1
                    case EMCUCR
                    case SPDR0
                    case SPSR0
                    case SPCR0
                    case USIDR
                    case USISR
                    case USICR
                    case LCDCRA
                    case LCDCRB
                    case LCDFRR
                    case LCDCCR
                    case LCDDR18
                    case LCDDR17
                    case LCDDR16
                    case LCDDR15
                    case LCDDR13
                    case LCDDR12
                    case LCDDR11
                    case LCDDR10
                    case LCDDR8
                    case LCDDR7
                    case LCDDR6
                    case LCDDR5
                    case LCDDR3
                    case LCDDR2
                    case LCDDR1
                    case LCDDR0
                    case UDR2
                    case UCSR2A
                    case UCSR2B
                    case UCSR2C
                    case UCSR2D
                    case UBRR2
                    case PCMSK4
                    case SPDR1
                    case SPSR1
                    case SPCR1
                    case TWAMR0
                    case TWBR0
                    case TWCR0
                    case TWSR0
                    case TWDR0
                    case TWAR0
                    case TWAMR1
                    case TWBR1
                    case TWCR1
                    case TWSR1
                    case TWDR1
                    case TWAR1
                    case XFDCSR
                    case ACSRA
                    case LCDDR08
                    case LCDDR07
                    case LCDDR06
                    case LCDDR05
                    case LCDDR03
                    case LCDDR02
                    case LCDDR01
                    case LCDDR00
                    case OCR1AL
                    case OCR1AH
                    case CBPTR
                    case BPOCD
                    case BPDUV
                    case BPIR
                    case CCSR
                    case UDR3
                    case UCSR3A
                    case UCSR3B
                    case UCSR3C
                    case UBRR3
                    case PORTH
                    case DDRH
                    case PINH
                    case PORTJ
                    case DDRJ
                    case PINJ
                    case PORTK
                    case DDRK
                    case PINK
                    case PORTL
                    case DDRL
                    case PINL
                    case CTRLA
                    case MUXCTRLA
                    case DACREF
                    case INTCTRL
                    case STATUS
                    case CTRLB
                    case CTRLC
                    case CTRLD
                    case CTRLE
                    case SAMPCTRL
                    case MUXPOS
                    case COMMAND
                    case EVCTRL
                    case INTFLAGS
                    case DBGCTRL
                    case TEMP
                    case RES
                    case WINLT
                    case WINHT
                    case CALIB
                    case VLMCTRLA
                    case SEQCTRL0
                    case SEQCTRL1
                    case INTCTRL0
                    case LUT0CTRLA
                    case LUT0CTRLB
                    case LUT0CTRLC
                    case TRUTH0
                    case LUT1CTRLA
                    case LUT1CTRLB
                    case LUT1CTRLC
                    case TRUTH1
                    case LUT2CTRLA
                    case LUT2CTRLB
                    case LUT2CTRLC
                    case TRUTH2
                    case LUT3CTRLA
                    case LUT3CTRLB
                    case LUT3CTRLC
                    case TRUTH3
                    case MCLKCTRLA
                    case MCLKCTRLB
                    case MCLKLOCK
                    case MCLKSTATUS
                    case OSC20MCTRLA
                    case OSC20MCALIBA
                    case OSC20MCALIBB
                    case OSC32KCTRLA
                    case XOSC32KCTRLA
                    case CCP
                    case SPL
                    case SPH
                    case LVL0PRI
                    case LVL1VEC
                    case STROBE
                    case CHANNEL0
                    case CHANNEL1
                    case CHANNEL2
                    case CHANNEL3
                    case CHANNEL4
                    case CHANNEL5
                    case USERCCLLUT0A
                    case USERCCLLUT0B
                    case USERCCLLUT1A
                    case USERCCLLUT1B
                    case USERCCLLUT2A
                    case USERCCLLUT2B
                    case USERCCLLUT3A
                    case USERCCLLUT3B
                    case USERADC0
                    case USEREVOUTA
                    case USEREVOUTB
                    case USEREVOUTC
                    case USEREVOUTD
                    case USEREVOUTE
                    case USEREVOUTF
                    case USERUSART0
                    case USERUSART1
                    case USERUSART2
                    case USERUSART3
                    case USERTCA0
                    case USERTCB0
                    case USERTCB1
                    case USERTCB2
                    case USERTCB3
                    case WDTCFG
                    case BODCFG
                    case OSCCFG
                    case SYSCFG0
                    case SYSCFG1
                    case APPEND
                    case BOOTEND
                    case DATA
                    case ADDR
                    case DIR
                    case DIRSET
                    case DIRCLR
                    case DIRTGL
                    case OUT
                    case OUTSET
                    case OUTCLR
                    case OUTTGL
                    case IN
                    case PORTCTRL
                    case PIN0CTRL
                    case PIN1CTRL
                    case PIN2CTRL
                    case PIN3CTRL
                    case PIN4CTRL
                    case PIN5CTRL
                    case PIN6CTRL
                    case PIN7CTRL
                    case EVSYSROUTEA
                    case CCLROUTEA
                    case USARTROUTEA
                    case TWISPIROUTEA
                    case TCAROUTEA
                    case TCBROUTEA
                    case RSTFR
                    case SWRR
                    case CLKSEL
                    case CNT
                    case PER
                    case CMP
                    case PITCTRLA
                    case PITSTATUS
                    case PITINTCTRL
                    case PITINTFLAGS
                    case PITDBGCTRL
                    case DEVICEID0
                    case DEVICEID1
                    case DEVICEID2
                    case SERNUM0
                    case SERNUM1
                    case SERNUM2
                    case SERNUM3
                    case SERNUM4
                    case SERNUM5
                    case SERNUM6
                    case SERNUM7
                    case SERNUM8
                    case SERNUM9
                    case OSCCAL32K
                    case OSCCAL16M0
                    case OSCCAL16M1
                    case OSCCAL20M0
                    case OSCCAL20M1
                    case TEMPSENSE0
                    case TEMPSENSE1
                    case OSC16ERR3V
                    case OSC16ERR5V
                    case OSC20ERR3V
                    case OSC20ERR5V
                    case CHECKSUM1
                    case REVID
                    case EXTBRK
                    case OCDM
                    case OCDMS
                    case CTRLECLR
                    case CTRLESET
                    case CTRLFCLR
                    case CTRLFSET
                    case CMP0
                    case CMP1
                    case CMP2
                    case PERBUF
                    case CMP0BUF
                    case CMP1BUF
                    case CMP2BUF
                    case LCNT
                    case HCNT
                    case LPER
                    case HPER
                    case LCMP0
                    case HCMP0
                    case LCMP1
                    case HCMP1
                    case LCMP2
                    case HCMP2
                    case CCMP
                    case DUALCTRL
                    case MCTRLA
                    case MCTRLB
                    case MSTATUS
                    case MBAUD
                    case MADDR
                    case MDATA
                    case SCTRLA
                    case SCTRLB
                    case SSTATUS
                    case SADDR
                    case SDATA
                    case SADDRMASK
                    case RXDATAL
                    case RXDATAH
                    case TXDATAL
                    case TXDATAH
                    case BAUD
                    case TXPLCTRL
                    case RXPLCTRL
                    case USERROW0
                    case USERROW1
                    case USERROW2
                    case USERROW3
                    case USERROW4
                    case USERROW5
                    case USERROW6
                    case USERROW7
                    case USERROW8
                    case USERROW9
                    case USERROW10
                    case USERROW11
                    case USERROW12
                    case USERROW13
                    case USERROW14
                    case USERROW15
                    case USERROW16
                    case USERROW17
                    case USERROW18
                    case USERROW19
                    case USERROW20
                    case USERROW21
                    case USERROW22
                    case USERROW23
                    case USERROW24
                    case USERROW25
                    case USERROW26
                    case USERROW27
                    case USERROW28
                    case USERROW29
                    case USERROW30
                    case USERROW31
                    case USERROW32
                    case USERROW33
                    case USERROW34
                    case USERROW35
                    case USERROW36
                    case USERROW37
                    case USERROW38
                    case USERROW39
                    case USERROW40
                    case USERROW41
                    case USERROW42
                    case USERROW43
                    case USERROW44
                    case USERROW45
                    case USERROW46
                    case USERROW47
                    case USERROW48
                    case USERROW49
                    case USERROW50
                    case USERROW51
                    case USERROW52
                    case USERROW53
                    case USERROW54
                    case USERROW55
                    case USERROW56
                    case USERROW57
                    case USERROW58
                    case USERROW59
                    case USERROW60
                    case USERROW61
                    case USERROW62
                    case USERROW63
                    case CHANNEL6
                    case CHANNEL7
                    case LCDDR19
                    case LCDDR14
                    case LCDDR09
                    case LCDDR04
                    case LCDDR9
                    case LCDDR4
                    case GIMSK 
                    case PCMSK
                    case BODCR
                }
                
                
                enum Offset: String, Codable {
                    // TODO: convert HEX to Int?
                    case zeroX02 = "0x02"
                    case zeroX01 = "0x01"
                    case zeroX00 = "0x00"
                    case zeroX22 = "0x22"
                    case zeroX21 = "0x21"
                    case zeroX20 = "0x20"
                    case zeroX25 = "0x25"
                    case zeroX24 = "0x24"
                    case zeroX23 = "0x23"
                    case zeroX28 = "0x28"
                    case zeroX27 = "0x27"
                    case zeroX26 = "0x26"
                    case zeroX2B = "0x2B"
                    case zeroX2A = "0x2A"
                    case zeroX29 = "0x29"
                    case zeroX2E = "0x2E"
                    case zeroX2D = "0x2D"
                    case zeroX2C = "0x2C"
                    case zeroX31 = "0x31"
                    case zeroX30 = "0x30"
                    case zeroX2F = "0x2F"
                    case zeroX34 = "0x34"
                    case zeroX33 = "0x33"
                    case zeroX32 = "0x32"
                    case zeroX51 = "0x51"
                    case zeroX55 = "0x55"
                    case zeroX54 = "0x54"
                    case zeroX4C = "0x4C"
                    case zeroX4D = "0x4D"
                    case zeroX4E = "0x4E"
                    case zeroXB8 = "0xB8"
                    case zeroXBC = "0xBC"
                    case zeroXB9 = "0xB9"
                    case zeroXBB = "0xBB"
                    case zeroXBA = "0xBA"
                    case zeroXC6 = "0xC6"
                    case zeroXC0 = "0xC0"
                    case zeroXC1 = "0xC1"
                    case zeroXC2 = "0xC2"
                    case zeroXC4 = "0xC4"
                    case zeroXCE = "0xCE"
                    case zeroXC8 = "0xC8"
                    case zeroXC9 = "0xC9"
                    case zeroXCA = "0xCA"
                    case zeroXCC = "0xCC"
                    case zeroX5F = "0x5F"
                    case zeroX5D = "0x5D"
                    case zeroX74 = "0x74"
                    case zeroX75 = "0x75"
                    case zeroX66 = "0x66"
                    case zeroX61 = "0x61"
                    case zeroX53 = "0x53"
                    case zeroX5B = "0x5B"
                    case zeroX4B = "0x4B"
                    case zeroX4A = "0x4A"
                    case zeroX3E = "0x3E"
                    case zeroX57 = "0x57"
                    case zeroX69 = "0x69"
                    case zeroX6A = "0x6A"
                    case zeroX3D = "0x3D"
                    case zeroX3C = "0x3C"
                    case zeroX41 = "0x41"
                    case zeroX40 = "0x40"
                    case zeroX3F = "0x3F"
                    case zeroX44 = "0x44"
                    case zeroX46 = "0x46"
                    case zeroX47 = "0x47"
                    case zeroX6E = "0x6E"
                    case zeroX35 = "0x35"
                    case zeroX43 = "0x43"
                    case zeroX80 = "0x80"
                    case zeroX81 = "0x81"
                    case zeroX82 = "0x82"
                    case zeroX84 = "0x84"
                    case zeroX88 = "0x88"
                    case zeroX8A = "0x8A"
                    case zeroX8C = "0x8C"
                    case zeroX86 = "0x86"
                    case zeroX6F = "0x6F"
                    case zeroX36 = "0x36"
                    case zeroX90 = "0x90"
                    case zeroX91 = "0x91"
                    case zeroX92 = "0x92"
                    case zeroX94 = "0x94"
                    case zeroX98 = "0x98"
                    case zeroX9A = "0x9A"
                    case zeroX9C = "0x9C"
                    case zeroX96 = "0x96"
                    case zeroX71 = "0x71"
                    case zeroX38 = "0x38"
                    case zeroXB0 = "0xB0"
                    case zeroXB2 = "0xB2"
                    case zeroXB3 = "0xB3"
                    case zeroX70 = "0x70"
                    case zeroX37 = "0x37"
                    case zeroXB6 = "0xB6"
                    case zeroX60 = "0x60"
                    case zeroX7C = "0x7C"
                    case zeroX7A = "0x7A"
                    case zeroX78 = "0x78"
                    case zeroX7B = "0x7B"
                    case zeroX7E = "0x7E"
                    case zeroX50 = "0x50"
                    case zeroX7F = "0x7F"
                    case zeroXD8 = "0xD8"
                    case zeroXD9 = "0xD9"
                    case zeroXDA = "0xDA"
                    case zeroXDB = "0xDB"
                    case zeroXDC = "0xDC"
                    case zeroXDD = "0xDD"
                    case zeroXDE = "0xDE"
                    case zeroXDF = "0xDF"
                    case zeroXE0 = "0xE0"
                    case zeroXE1 = "0xE1"
                    case zeroXE2 = "0xE2"
                    case zeroXE3 = "0xE3"
                    case zeroXE4 = "0xE4"
                    case zeroXE5 = "0xE5"
                    case zeroXE6 = "0xE6"
                    case zeroXE8 = "0xE8"
                    case zeroXEA = "0xEA"
                    case zeroXEB = "0xEB"
                    case zeroXEC = "0xEC"
                    case zeroXED = "0xED"
                    case zeroXEE = "0xEE"
                    case zeroXEF = "0xEF"
                    case zeroXF0 = "0xF0"
                    case zeroXF1 = "0xF1"
                    case zeroXF2 = "0xF2"
                    case zeroXF3 = "0xF3"
                    case zeroXF4 = "0xF4"
                    case zeroXF5 = "0xF5"
                    case zeroXF6 = "0xF6"
                    case zeroXF7 = "0xF7"
                    case zeroXF8 = "0xF8"
                    case zeroXFA = "0xFA"
                    case zeroXD6 = "0xD6"
                    case zeroXD4 = "0xD4"
                    case zeroXD2 = "0xD2"
                    case zeroXD0 = "0xD0"
                    case zeroXA1 = "0xA1"
                    case zeroXA0 = "0xA0"
                    case zeroXFE = "0xFE"
                    case zeroXFD = "0xFD"
                    case zeroXFC = "0xFC"
                    case zeroXFB = "0xFB"
                    case zeroXA5 = "0xA5"
                    case zeroXA4 = "0xA4"
                    case zeroX3B = "0x3B"
                    case zeroX3A = "0x3A"
                    case zeroX39 = "0x39"
                    case zeroX49 = "0x49"
                    case zeroX64 = "0x64"
                    case zeroX45 = "0x45"
                    case zeroX48 = "0x48"
                    case zeroX76 = "0x76"
                    case zeroX77 = "0x77"
                    case zeroXAD = "0xAD"
                    case zeroXAF = "0xAF"
                    case zeroXAE = "0xAE"
                    case zeroXAB = "0xAB"
                    case zeroXAA = "0xAA"
                    case zeroXA3 = "0xA3"
                    case zeroXA2 = "0xA2"
                    case zeroX58 = "0x58"
                    case zeroX56 = "0x56"
                    case zeroX89 = "0x89"
                    case zeroX79 = "0x79"
                    case zeroX7D = "0x7D"
                    case zeroX83 = "0x83"
                    case zeroX87 = "0x87"
                    case zeroX85 = "0x85"
                    case zeroX68 = "0x68"
                    case zeroX63 = "0x63"
                    case zeroX62 = "0x62"
                    case zeroX42 = "0x42"
                    case zeroX6C = "0x6C"
                    case zeroX67 = "0x67"
                    case zeroX5A = "0x5A"
                    case zeroX59 = "0x59"
                    case zeroX6D = "0x6D"
                    case zeroXCD = "0xCD"
                    case zeroXC5 = "0xC5"
                    case zeroXE9 = "0xE9"
                    case zeroX5C = "0x5C"
                    case zeroX65 = "0x65"
                    case zeroXD1 = "0xD1"
                    case zeroX6B = "0x6B"
                    case zeroXCB = "0xCB"
                    case zeroXBD = "0xBD"
                    case zeroXF9 = "0xF9"
                    case zeroXD7 = "0xD7"
                    case zeroXAC = "0xAC"
                    case zeroXA9 = "0xA9"
                    case zeroXA8 = "0xA8"
                    case zeroXA7 = "0xA7"
                    case zeroXA6 = "0xA6"
                    case zeroX9F = "0x9F"
                    case zeroX9E = "0x9E"
                    case zeroXB1 = "0xB1"
                    case zeroXB4 = "0xB4"
                    case zeroX52 = "0x52"
                    case zeroX4F = "0x4F"
                    case zeroX4c = "0x4c"
                    case zeroX4d = "0x4d"
                    case zeroX4e = "0x4e"
                    case zeroXE7 = "0xE7"
                    case zeroXBE = "0xBE"
                    case zeroX95 = "0x95"
                    case zeroX97 = "0x97"
                    case zeroXCF = "0xCF"
                    case zeroXB7 = "0xB7"
                    case zeroXB5 = "0xB5"
                    case zeroXC3 = "0xC3"
                    case zeroXBF = "0xBF"
                    case zeroX72 = "0x72"
                    case zeroXC7 = "0xC7"
                    case zeroX8E = "0x8E"
                    case zeroX73 = "0x73"
                    case zeroX9B = "0x9B"
                    case zeroX9D = "0x9D"
                    case zeroX99 = "0x99"
                    case zeroX8B = "0x8B"
                    case zeroXdc = "0xdc"
                    case zeroXe0 = "0xe0"
                    case zeroXe1 = "0xe1"
                    case zeroXe2 = "0xe2"
                    case zeroXe3 = "0xe3"
                    case zeroXe4 = "0xe4"
                    case zeroXe5 = "0xe5"
                    case zeroXe6 = "0xe6"
                    case zeroXe7 = "0xe7"
                    case zeroXe8 = "0xe8"
                    case zeroXe9 = "0xe9"
                    case zeroXf1 = "0xf1"
                    case zeroXf6 = "0xf6"
                    case zeroXf5 = "0xf5"
                    case zeroXf4 = "0xf4"
                    case zeroXf3 = "0xf3"
                    case zeroXeb = "0xeb"
                    case zeroXf0 = "0xf0"
                    case zeroXef = "0xef"
                    case zeroXee = "0xee"
                    case zeroXed = "0xed"
                    case zeroXd1 = "0xd1"
                    case zeroXd3 = "0xd3"
                    case zeroXd2 = "0xd2"
                    case zeroXd4 = "0xd4"
                    case zeroXc0 = "0xc0"
                    case zeroXc1 = "0xc1"
                    case zeroXc2 = "0xc2"
                    case zeroXc3 = "0xc3"
                    case zeroXc4 = "0xc4"
                    case zeroXc5 = "0xc5"
                    case zeroXc6 = "0xc6"
                    case zeroXc7 = "0xc7"
                    case zeroXc8 = "0xc8"
                    case zeroXc9 = "0xc9"
                    case zeroXcA = "0xcA"
                    case zeroXd8 = "0xd8"
                    case zeroX120 = "0x120"
                    case zeroX121 = "0x121"
                    case zeroX122 = "0x122"
                    case zeroX124 = "0x124"
                    case zeroX128 = "0x128"
                    case zeroX12A = "0x12A"
                    case zeroX12C = "0x12C"
                    case zeroX126 = "0x126"
                    case zeroX138 = "0x138"
                    case zeroX10E = "0x10E"
                    case zeroX10F = "0x10F"
                    case zeroX110 = "0x110"
                    case zeroX111 = "0x111"
                    case zeroX112 = "0x112"
                    case zeroX113 = "0x113"
                    case zeroX114 = "0x114"
                    case zeroX115 = "0x115"
                    case zeroX116 = "0x116"
                    case zeroX117 = "0x117"
                    case zeroX118 = "0x118"
                    case zeroX119 = "0x119"
                    case zeroX11A = "0x11A"
                    case zeroX11B = "0x11B"
                    case zeroX11C = "0x11C"
                    case zeroX11D = "0x11D"
                    case zeroX10C = "0x10C"
                    case zeroX10D = "0x10D"
                    case zeroX13C = "0x13C"
                    case zeroX13D = "0x13D"
                    case zeroX13E = "0x13E"
                    case zeroX13F = "0x13F"
                    case zeroX141 = "0x141"
                    case zeroX142 = "0x142"
                    case zeroX143 = "0x143"
                    case zeroX144 = "0x144"
                    case zeroX145 = "0x145"
                    case zeroX146 = "0x146"
                    case zeroX147 = "0x147"
                    case zeroX148 = "0x148"
                    case zeroX149 = "0x149"
                    case zeroX14A = "0x14A"
                    case zeroX14B = "0x14B"
                    case zeroX14C = "0x14C"
                    case zeroX14D = "0x14D"
                    case zeroX14E = "0x14E"
                    case zeroX14F = "0x14F"
                    case zeroX150 = "0x150"
                    case zeroX151 = "0x151"
                    case zeroX152 = "0x152"
                    case zeroX153 = "0x153"
                    case zeroX154 = "0x154"
                    case zeroX155 = "0x155"
                    case zeroX156 = "0x156"
                    case zeroX157 = "0x157"
                    case zeroX158 = "0x158"
                    case zeroX15A = "0x15A"
                    case zeroX15B = "0x15B"
                    case zeroX15C = "0x15C"
                    case zeroX15D = "0x15D"
                    case zeroX15E = "0x15E"
                    case zeroX15F = "0x15F"
                    case zeroX160 = "0x160"
                    case zeroX161 = "0x161"
                    case zeroX162 = "0x162"
                    case zeroX163 = "0x163"
                    case zeroX164 = "0x164"
                    case zeroX165 = "0x165"
                    case zeroX166 = "0x166"
                    case zeroX167 = "0x167"
                    case zeroX168 = "0x168"
                    case zeroX169 = "0x169"
                    case zeroX16A = "0x16A"
                    case zeroX16B = "0x16B"
                    case zeroX16C = "0x16C"
                    case zeroX16D = "0x16D"
                    case zeroX16E = "0x16E"
                    case zeroX16F = "0x16F"
                    case zeroX176 = "0x176"
                    case zeroX17B = "0x17B"
                    case zeroX180 = "0x180"
                    case zeroX1FF = "0x1FF"
                    case zeroX139 = "0x139"
                    case zeroX135 = "0x135"
                    case zeroX134 = "0x134"
                    case zeroX133 = "0x133"
                    case zeroX132 = "0x132"
                    case zeroX130 = "0x130"
                    case zeroX131 = "0x131"
                    case zeroX12F = "0x12F"
                    case zeroX136 = "0x136"
                    case zeroX137 = "0x137"
                    case zeroXD3 = "0xD3"
                    case zeroX102 = "0x102"
                    case zeroX101 = "0x101"
                    case zeroX100 = "0x100"
                    case zeroX105 = "0x105"
                    case zeroX104 = "0x104"
                    case zeroX103 = "0x103"
                    case zeroX108 = "0x108"
                    case zeroX107 = "0x107"
                    case zeroX106 = "0x106"
                    case zeroX10B = "0x10B"
                    case zeroX10A = "0x10A"
                    case zeroX109 = "0x109"
                    case zeroX0 = "0x0"
                    case zeroX2 = "0x2"
                    case zeroX4 = "0x4"
                    case zeroX6 = "0x6"
                    case zeroX7 = "0x7"
                    case zeroX03 = "0x03"
                    case zeroX04 = "0x04"
                    case zeroX05 = "0x05"
                    case zeroX06 = "0x06"
                    case zeroX08 = "0x08"
                    case zeroX09 = "0x09"
                    case zeroX0A = "0x0A"
                    case zeroX0B = "0x0B"
                    case zeroX0C = "0x0C"
                    case zeroX0D = "0x0D"
                    case zeroX10 = "0x10"
                    case zeroX12 = "0x12"
                    case zeroX14 = "0x14"
                    case zeroX16 = "0x16"
                    case zeroX1 = "0x1"
                    case zeroX8 = "0x8"
                    case zeroX9 = "0x9"
                    case zeroXA = "0xA"
                    case zeroXB = "0xB"
                    case zeroX07 = "0x07"
                    case zeroX0E = "0x0E"
                    case zeroX0F = "0x0F"
                    case zeroX11 = "0x11"
                    case zeroX13 = "0x13"
                    case zeroX15 = "0x15"
                    case zeroX17 = "0x17"
                    case zeroX18 = "0x18"
                    case zeroX = "0x1C"
                    case zeroXD = "0xD"
                    case zeroXE = "0xE"
                    case zeroXF = "0xF"
                    case zeroX3 = "0x3"
                    case zeroX5 = "0x5"
                    case zeroX19 = "0x19"
                    case zeroX1A = "0x1A"
                    case zeroX1B = "0x1B"
                    case zeroXC = "0xC"
                    case zeroX1D = "0x1D"
                    case zeroX1E = "0x1E"
                    case zeroX1F = "0x1F"
                    case zeroXFF = "0xFF"
                }
                
                enum Size: String, Codable { // TODO: I think this is the same as another location. // Guessing that this is one or two registers, basically 8 bit or 16 bit value?
                    case one = "1"
                    case two = "2"
                }
                
                enum Initval: String, Codable {
                    case zeroXFF = "0xFF"
                    case zeroX99 = "0x99"
                    case zeroX62 = "0x62"
                    case zeroXF9 = "0xF9"
                    case zeroXDF = "0xDF"
                    case zeroXFD = "0xFD"
                    case zeroXD9 = "0xD9"
                    case zeroXF4 = "0xF4"
                    case zeroX5E = "0x5E"
                    case zeroXF3 = "0xF3"
                    case zeroX9B = "0x9B"
                    case zeroXE1 = "0xE1"
                    case zeroXDD = "0xDD"
                    case zeroXE9 = "0xE9"
                    case zeroXFB = "0xFB"
                    case zeroX52 = "0x52"
                    case zeroXD7 = "0xD7"
                    case zeroXFE = "0xFE"
                    case zeroX07 = "0x07"
                    case zeroXF7 = "0xF7"
                    case zeroXCD = "0xCD"
                    case zeroX00 = "0x00"
                    case zeroX01 = "0x01"
                    case zeroX05 = "0x05"
                    case zeroX11 = "0x11"
                    case zeroX02 = "0x02"
                    case zeroX7E = "0x7E"
                    case zeroXF6 = "0xF6"
                    case zeroXC5 = "0xC5"
                    case zeroXFFFF = "0xFFFF"
                    case zeroX0000 = "0x0000"
                    case zeroX03 = "0x03"
                    case zeroX6A = "0x6A"
                }
                
                enum Caption: String, Codable {
                    case BODControlRegister = "BOD Control Register"
                    case DebugWireDataRegister = "Debug Wire Data Register"
                    case OscillatorCalibrationRegister = "Oscillator Calibration Register"
                    case MCUStatusRegister2 = "MCU Status register"
                    case StackPointerLowByte = "Stack Pointer Low Byte"
                    case GeneralTimerConuterRegister = "General Timer Conuter Register"
                    case GeneralInterruptFlagRegister2 = "General Interrupt Flag register"
                    case GeneralInterruptMaskRegister = "General Interrupt Mask Register"
                    case PortADataRegister = "Port A Data Register"
                    case PortADataDirectionRegister = "Port A Data Direction Register"
                    case PortAInputPins = "Port A Input Pins"
                    case PortBDataRegister = "Port B Data Register"
                    case PortBDataDirectionRegister = "Port B Data Direction Register"
                    case PortBInputPins = "Port B Input Pins"
                    case PortCDataRegister = "Port C Data Register"
                    case PortCDataDirectionRegister = "Port C Data Direction Register"
                    case PortCInputPins = "Port C Input Pins"
                    case PortDDataRegister = "Port D Data Register"
                    case PortDDataDirectionRegister = "Port D Data Direction Register"
                    case PortDInputPins = "Port D Input Pins"
                    case DataRegisterPortE = "Data Register, Port E"
                    case DataDirectionRegisterPortE = "Data Direction Register, Port E"
                    case InputPinsPortE = "Input Pins, Port E"
                    case DataRegisterPortF = "Data Register, Port F"
                    case DataDirectionRegisterPortF = "Data Direction Register, Port F"
                    case InputPinsPortF = "Input Pins, Port F"
                    case DataRegisterPortG = "Data Register, Port G"
                    case DataDirectionRegisterPortG = "Data Direction Register, Port G"
                    case InputPinsPortG = "Input Pins, Port G"
                    case OnChipDebugRelatedRegisterInIOMemory = "On-Chip Debug Related Register in I/O Memory"
                    case MCUControlRegister = "MCU Control Register"
                    case MCUStatusRegister = "MCU Status Register"
                    case SPIControlRegister = "SPI Control Register"
                    case SPIStatusRegister = "SPI Status Register"
                    case SPIDataRegister = "SPI Data Register"
                    case TWIBitRateRegister = "TWI Bit Rate Register"
                    case TWIBitRateRegister2 = "TWI Bit Rate register" // Duplicate
                    case TWIControlRegister = "TWI Control Register"
                    case TWIStatusRegister = "TWI Status Register"
                    case TWIDataRegister = "TWI Data Register"
                    case TWIDataRegister2 = "TWI Data register" // Duplicate
                    case TWISlaveAddressregister = "TWI (Slave) Address register"
                    case USARTIODataRegister = "USART I/O Data Register"
                    case USARTControlAndStatusRegisterA = "USART Control and Status Register A"
                    case USARTControlAndStatusRegisterA2 = "USART Control and Status register A" // Duplicate
                    case USARTControlAndStatusRegisterB = "USART Control and Status Register B"
                    case USARTControlAndStatusRegisterC = "USART Control and Status Register C"
                    case USARTBaudRateRegisterTBytes = "USART Baud Rate Register t Bytes"
                    case StatusRegister = "Status Register"
                    case StackPointer = "Stack Pointer"
                    case StackPointer2 = "Stack Pointer " // Duplicate
                    case ExternalMemoryControlRegisterA = "External Memory Control Register A"
                    case ExternalMemoryControlRegisterB = "External Memory Control Register B"
                    case OscillatorCalibrationValue = "Oscillator Calibration Value"
                    case ClockPrescaleRegister = "Clock Prescale Register"
                    case ClockPrescaleRegister2 = "Clock prescale register" // Duplicate
                    case SleepModeControlRegister = "Sleep Mode Control Register"
                    case RAMPageZSelectRegisterNotUsed = "RAM Page Z Select Register - Not used."
                    case GeneralPurposeIORegister2 = "General Purpose I/O Register 2"
                    case GeneralPurposeIORegister22 = "General Purpose IO Register 2" // Duplicate
                    case GeneralPurposeIORegister1 = "General Purpose I/O Register 1"
                    case GeneralPurposeIORegister12 = "General Purpose IO Register 1" // Duplicate
                    case GeneralPurposeIORegister0 = "General Purpose I/O Register 0"
                    case GeneralPurposeIORegister02 = "General Purpose IO Register 0" // Duplicate
                    case StoreProgramMemoryControlRegister = "Store Program Memory Control Register"
                    case ExternalInterruptControlRegisterA = "External Interrupt Control Register A"
                    case ExternalInterruptControlRegisterB = "External Interrupt Control Register B"
                    case ExternalInterruptMaskRegister = "External Interrupt Mask Register"
                    case ExternalInterruptFlagRegister = "External Interrupt Flag Register"
                    case EEPROMReadWriteAccessBytes = "EEPROM Read/Write Access Bytes"
                    case EEPROMReadWriteAccessBytes2 = "EEPROM Read/Write Access  Bytes" // Duplicate
                    case EEPROMDataRegister = "EEPROM Data Register"
                    case EEPROMControlRegister = "EEPROM Control Register"
                    case TimerCounter0ControlRegister = "Timer/Counter 0 Control Register"
                    case TimerCounter0ControlRegister2 = "Timer/Counter0 Control Register" // Duplicate
                    case TimerCounter0 = "Timer/Counter0"
                    case TimerCounter02 = "Timer Counter 0" // Duplicate
                    case TimerCounter0OutputCompareRegister = "Timer/Counter 0 Output Compare Register"
                    case TimerCounter0OutputCompareRegister2 = "Timer/Counter0 Output Compare Register" // Duplicate
                    case TimerCounter0InterruptMaskRegister = "Timer/Counter0 Interrupt Mask Register"
                    case TimerCounter0InterruptFlagRegister = "Timer/Counter0 Interrupt Flag Register"
                    case TimerCounter0InterruptFlagRegister2 = "Timer/Counter0 Interrupt Flag register" // Duplicate
                    case GeneralTimerControlRegister = "General Timer/Control Register"
                    case TimerCounter1ControlRegisterA = "Timer/Counter1 Control Register A"
                    case TimerCounter1ControlRegisterA2 = "Timer/Counter 1 Control Register A" // Duplciate
                    case TimerCounter1ControlRegisterB = "Timer/Counter1 Control Register B"
                    case TimerCounter1ControlRegisterC = "Timer/Counter 1 Control Register C"
                    case TimerCounter1ControlRegisterC2 = "Timer/Counter1 Control Register C" // Duplicate
                    case TimerCounter1Bytes = "Timer/Counter1 Bytes"
                    case TimerCounter1Bytes2 = "Timer/Counter1  Bytes" // Duplicate
                    case TimerCounter1Bytes3 = "Timer Counter 1 Bytes" // Duplicate
                    case TimerCounter1Bytes4 = "Timer Counter 1  Bytes" // Duplicate
                    case TimerCounter1OutputCompareRegisterBytes = "Timer/Counter1 Output Compare Register Bytes"
                    case TimerCounter1OutputCompareRegisterBytes2 = "Timer/Counter1 Output Compare Register  Bytes" // Duplicate
                    case TimerCounter1InputCaptureRegisterBytes = "Timer/Counter1 Input Capture Register Bytes"
                    case TimerCounter1InputCaptureRegisterBytes2 = "Timer/Counter1 Input Capture Register  Bytes" // Duplicate
                    case TimerCounterInterruptMaskRegister = "Timer/Counter Interrupt Mask Register"
                    case TimerCounterInterruptMaskRegister2 = "Timer/Counter Interrupt Mask register" // Duplicate
                    case TimerCounterInterruptFlagRegister = "Timer/Counter Interrupt Flag Register"
                    case TimerCounterInterruptFlagRegister2 = "Timer/Counter Interrupt Flag register" // Duplicate
                    case TimerCounter3ControlRegisterA = "Timer/Counter3 Control Register A"
                    case TimerCounter3ControlRegisterB = "Timer/Counter3 Control Register B"
                    case TimerCounter3ControlRegisterC = "Timer/Counter 3 Control Register C"
                    case TimerCounter3ControlRegisterC2 = "Timer/Counter3 Control Register C" // Duplicate
                    case TimerCounter3Bytes = "Timer/Counter3 Bytes"
                    case TimerCounter3Bytes2 = "Timer/Counter3  Bytes"
                    case TimerCounter3OutputCompareRegisterBytes = "Timer/Counter3 Output Compare Register  Bytes"
                    case TimerCounter3OutputCompareRegisterBytes2 = "Timer/Counter3 Output Compare Register Bytes"
                    case TimerCounter3InputCaptureRegisterBytes = "Timer/Counter3 Input Capture Register Bytes"
                    case TimerCounter3InputCaptureRegisterBytes2 = "Timer/Counter3 Input Capture Register  Bytes" // Duplicate
                    case TimerCounter2ControlRegister = "Timer/Counter2 Control Register"
                    case TimerCounter2 = "Timer/Counter2"
                    case TimerCounter2OutputCompareRegister = "Timer/Counter2 Output Compare Register"
                    case GeneralTimerCounterControlRegister = "General Timer/Counter Control Register"
                    case GeneralTimerCounterControlRegister2 = "General Timer Counter Control register"  // Duplicate
                    case AsynchronousStatusRegister = "Asynchronous Status Register"
                    case WatchdogTimerControlRegister = "Watchdog Timer Control Register"
                    case TheADCMultiplexerSelectionRegister = "The ADC Multiplexer Selection Register"
                    case TheADCMultiplexerSelectionRegister2 = "The ADC multiplexer Selection Register" // Duplicate
                    case TheADCControlAndStatusRegister = "The ADC Control and Status register"
                    case ADCDataRegisterBytes = "ADC Data Register Bytes"
                    case ADCDataRegisterBytes2 = "ADC Data Register  Bytes" // Duplicate
                    case ADCControlAndStatusRegisterB = "ADC Control and Status Register B"
                    case ADCControlAndStatusRegisterB2 = "ADC Control and Status register B" // Duplicate
                    case DigitalInputDisableRegister1 = "Digital Input Disable Register 1"
                    case AnalogComparatorControlAndStatusRegister = "Analog Comparator Control And Status Register"
                    case CANGeneralControlRegister = "CAN General Control Register"
                    case CANGeneralStatusRegister = "CAN General Status Register"
                    case CANGeneralInterruptRegister = "CAN General Interrupt Register"
                    case CANGeneralInterruptEnableRegister = "CAN General Interrupt Enable Register"
                    case EnableMObRegister = "Enable MOb Register"
                    case EnableInterruptMObRegister = "Enable Interrupt MOb Register"
                    case CANStatusInterruptMObRegister = "CAN Status Interrupt MOb Register"
                    case BitTimingRegister1 = "Bit Timing Register 1"
                    case BitTimingRegister2 = "Bit Timing Register 2"
                    case BitTimingRegister3 = "Bit Timing Register 3"
                    case TimerControlRegister = "Timer Control Register"
                    case TimerRegister = "Timer Register"
                    case TTCTimerRegister = "TTC Timer Register"
                    case TransmitErrorCounterRegister = "Transmit Error Counter Register"
                    case ReceiveErrorCounterRegister = "Receive Error Counter Register"
                    case HighestPriorityMObRegister = "Highest Priority MOb Register"
                    case PageMObRegister = "Page MOb Register"
                    case MObStatusRegister = "MOb Status Register"
                    case MObControlAndDLCRegister = "MOb Control and DLC Register"
                    case IdentifierTagRegister4 = "Identifier Tag Register 4"
                    case IdentifierTagRegister3 = "Identifier Tag Register 3"
                    case IdentifierTagRegister2 = "Identifier Tag Register 2"
                    case IdentifierTagRegister1 = "Identifier Tag Register 1"
                    case IdentifierMaskRegister4 = "Identifier Mask Register 4"
                    case IdentifierMaskRegister3 = "Identifier Mask Register 3"
                    case IdentifierMaskRegister2 = "Identifier Mask Register 2"
                    case IdentifierMaskRegister1 = "Identifier Mask Register 1"
                    case TimeStampRegister = "Time Stamp Register"
                    case MessageDataRegister = "Message Data Register"
                    case EEPROMReadWriteAccessBytesOnlyBit108AreUsedInAT90CAN64OnlyBit98AreUsedInAT90CAN32 = "EEPROM Read/Write Access Bytes - Only bit 10..8 are used in AT90CAN64 - Only bit 9..8 are used in AT90CAN32"
                    case RAMPageZSelectRegister = "RAM Page Z Select Register"
                    case PortEDataRegister = "Port E Data Register"
                    case PortEDataDirectionRegister = "Port E Data Direction Register"
                    case PortEInputPins = "Port E Input Pins"
                    case PSC0InputCaptureRegister = "PSC 0 Input Capture Register"
                    case PSC0InputCaptureRegister2 = "PSC 0 Input Capture Register " // Duplicate
                    case PSC0InputBControl = "PSC 0 Input B Control"
                    case PSC0InputAControl = "PSC 0 Input A Control"
                    case PSC0ControlRegister = "PSC 0 Control Register"
                    case PSC0ConfigurationRegister = "PSC 0 Configuration Register"
                    case OutputCompareRBRegister = "Output Compare RB Register "
                    case OutputCompareSBRegister = "Output Compare SB Register "
                    case OutputCompareRARegister = "Output Compare RA Register "
                    case OutputCompareSARegister = "Output Compare SA Register "
                    case PSC0SynchroAndOutputConfiguration = "PSC0 Synchro and Output Configuration"
                    case PSC0InterruptMaskRegister = "PSC0 Interrupt Mask Register"
                    case PSC0InterruptFlagRegister = "PSC0 Interrupt Flag Register"
                    case PSC2InputCaptureRegister = "PSC 2 Input Capture Register"
                    case PSC2InputCaptureRegister2 = "PSC 2 Input Capture Register " // Duplicate
                    case PSC2InputBControl = "PSC 2 Input B Control"
                    case PSC2ControlRegister = "PSC 2 Control Register"
                    case PSC2ConfigurationRegister = "PSC 2 Configuration Register"
                    case PSC2OutputMatrix = "PSC 2 Output Matrix"
                    case PSC2SynchroAndOutputConfiguration = "PSC2 Synchro and Output Configuration"
                    case PSC2InterruptMaskRegister = "PSC2 Interrupt Mask Register"
                    case PSC2InterruptFlagRegister = "PSC2 Interrupt Flag Register"
                    case PSC1InputCaptureRegister = "PSC 1 Input Capture Register "
                    case PSC1InputBControl = "PSC 1 Input B Control"
                    case PSC1ControlRegister = "PSC 1 Control Register"
                    case PSC1SynchroAndOutputConfiguration = "PSC1 Synchro and Output Configuration"
                    case GeneralPurposeIORegister3 = "General Purpose IO Register 3"
                    case PLLControlAndStatusRegister = "PLL Control And Status Register"
                    case PLLControlAndStatusRegister2 = "PLL Control and Status Register" // Duplicate
                    case PowerReductionRegister = "Power Reduction Register"
                    case TimerCounterControlRegisterA = "Timer/Counter Control Register A"
                    case TimerCounterControlRegisterA2 = "Timer/Counter  Control Register A" // Duplicate
                    case TimerCounterControlRegisterB = "Timer/Counter Control Register B"
                    case DigitalInputDisableRegister0 = "Digital Input Disable Register 0"
                    case AnalogComparator0ControlRegister = "Analog Comparator 0 Control Register"
                    case AnalogComparator2ControlRegister = "Analog Comparator 2 Control Register"
                    case AnalogComparatorStatusRegister = "Analog Comparator Status Register"
                    case EUSARTIODataRegister = "EUSART I/O Data Register"
                    case EUSARTControlAndStatusRegisterA = "EUSART Control and Status Register A"
                    case EUSARTControlRegisterB = "EUSART Control Register B"
                    case EUSARTStatusRegisterC = "EUSART Status Register C"
                    case ManchesterReceiverBaudRateRegister = "Manchester Receiver Baud Rate Register"
                    case AnalogComparator1ControlRegister = "Analog Comparator 1 Control Register"
                    case DACDataRegister = "DAC Data Register"
                    case DACControlRegister = "DAC Control Register"
                    case USARTControlAnStatusRegisterB = "USART Control an Status register B"
                    case SARTControlAnStatusRegisterC = "USART Control an Status register C"
                    case USARTBaudRateRegister = "USART Baud Rate Register"
                    case OutputCompare0RBRegister = "Output Compare 0 RB Register"
                    case OutputCompare0SBRegister = "Output Compare 0 SB Register"
                    case OutputCompare0RARegister = "Output Compare 0 RA Register"
                    case OutputCompare0SARegister = "Output Compare 0 SA Register"
                    case OutputCompare2RBRegister = "Output Compare 2 RB Register"
                    case OutputCompare2SBRegister = "Output Compare 2 SB Register"
                    case OutputCompare2RARegister = "Output Compare 2 RA Register"
                    case OutputCompare2SARegister = "Output Compare 2 SA Register"
                    case PSC1ConfigurationRegister = "PSC 1 Configuration Register"
                    case PSC1InterruptMaskRegister = "PSC1 Interrupt Mask Register"
                    case PSC1InterruptFlagRegister = "PSC1 Interrupt Flag Register"
                    case AnalogComparator3ControlRegister = "Analog Comparator 3 Control Register"
                    case AnalogComparator3ControlRegister2 = "Analog Comparator3 Control Register"  // Duplicate
                    case BandGapCurrentCalibrationRegister = "BandGap Current Calibration Register"
                    case BandGapResistorCalibrationRegister = "BandGap Resistor Calibration Register"
                    case PSC2EnhancedConfigurationRegister = "PSC 2 Enhanced Configuration Register"
                    case AnalogSynchronizationDelayRegister = "Analog Synchronization Delay Register"
                    case DACDataRegisterHighByte = "DAC Data Register High Byte"
                    case DACDataRegisterLowByte = "DAC Data Register Low Byte"
                    case PSC2InputCaptureRegisterHigh = "PSC 2 Input Capture Register High"
                    case PSC2InputCaptureRegisterLow = "PSC 2 Input Capture Register Low"
                    case ManchesterReceiverBaudRateRegisterHighByte = "Manchester Receiver Baud Rate Register High Byte"
                    case ManchesterReceiverBaudRateRegisterLowByte = "Manchester Receiver Baud Rate Register Low Byte"
                    case DACDataRegisterBytes = "DAC Data Register Bytes"
                    case USARTBaudRateRegisterHighByte = "USART Baud Rate Register High Byte"
                    case USARTBaudRateRegisterLowByte = "USART Baud Rate Register Low Byte"
                    case EEPROMAddressRegisterLowBytes = "EEPROM Address Register Low Bytes"
                    case TimerCounter1OutputCompareRegisterABytes = "Timer/Counter1 Output Compare Register A Bytes"
                    case TimerCounter1OutputCompareRegisterABytes2 = "Timer/Counter1 Output Compare Register A  Bytes" // Duplicate
                    case TimerCounter1OutputCompareRegisterBBytes = "Timer/Counter1 Output Compare Register B Bytes"
                    case TimerCounter1OutputCompareRegisterBBytes2 = "Timer/Counter1 Output Compare Register B  Bytes" // Duplicate
                    case TimerCounter1OutputCompareRegisterCBytes = "Timer/Counter1 Output Compare Register C Bytes"
                    case TimerCounter1OutputCompareRegisterCBytes2 = "Timer/Counter1 Output Compare Register C  Bytes" // Duplicate
                    case TimerCounter1InterruptMaskRegister = "Timer/Counter1 Interrupt Mask Register"
                    case TimerCounter1InterruptFlagRegister = "Timer/Counter1 Interrupt Flag Register"
                    case TimerCounter1InterruptFlagRegister2 = "Timer/Counter1 Interrupt Flag register" // Duplicate
                    case PLLStatusAndControlRegister = "PLL Status and Control register"
                    case USBGeneralControlRegister = "USB General Control Register"
                    case RegulatorControlRegister = "Regulator Control Register"
                    case PS2PadEnableRegister = "PS2 Pad Enable register"
                    case ExtendedIndirectRegister = "Extended Indirect Register"
                    case PowerReductionRegister1 = "Power Reduction Register 1"
                    case PowerReductionRegister12 = "Power Reduction Register1" // Duplicate
                    case PowerReductionRegister0 = "Power Reduction Register 0"
                    case PowerReductionRegister02 = "Power Reduction Register0" // Duplicate
                    case debugWireCommunicationRegister = "debugWire communication register"
                    case PinChangeMaskRegister0 = "Pin Change Mask Register 0"
                    case PinChangeMaskRegister1 = "Pin Change Mask Register 1"
                    case PinChangeInterruptFlagRegister = "Pin Change Interrupt Flag Register"
                    case PinChangeInterruptControlRegister = "Pin Change Interrupt Control Register"
                    case USARTControlAndStatusRegisterD = "USART Control and Status Register D"
                    case USARTBaudRateRegisterBytes = "USART Baud Rate Register Bytes"
                    case USARTBaudRateRegisterBytes2 = "USART Baud Rate Register  Bytes"
                    case WatchdogTimerClockDivider = "Watchdog Timer Clock Divider"
                    case TWISlaveAddressMaskRegister = "TWI (Slave) Address Mask Register"
                    case USBHardwareConfigurationRegister = "USB Hardware Configuration Register"
                    case TimerCounter2ControlRegisterA = "Timer/Counter2 Control Register A"
                    case TimerCounter2ControlRegisterB = "Timer/Counter2 Control Register B"
                    case TimerCounter2OutputCompareRegisterB = "Timer/Counter2 Output Compare Register B"
                    case TimerCounter2OutputCompareRegisterA = "Timer/Counter2 Output Compare Register A"
                    case TimerCounter3OutputCompareRegisterABytes = "Timer/Counter3 Output Compare Register A Bytes"
                    case TimerCounter3OutputCompareRegisterABytes2 = "Timer/Counter3 Output Compare Register A  Bytes" // Duplicate
                    case TimerCounter3OutputCompareRegisterBBytes = "Timer/Counter3 Output Compare Register B Bytes"
                    case TimerCounter3OutputCompareRegisterBBytes2 = "Timer/Counter3 Output Compare Register B  Bytes" // Duplicate
                    case TimerCounter3InterruptMaskRegister = "Timer/Counter3 Interrupt Mask Register"
                    case TimerCounter3InterruptFlagRegister = "Timer/Counter3 Interrupt Flag Register"
                    case TimerCounter3InterruptFlagRegister2 = "Timer/Counter3 Interrupt Flag register" // Duplicate
                    case SpecialFunctionIORegister = "Special function I/O register"
                    case SpecialFunctionIORegister2 = "Special Function IO Register" // Duplicate
                    case GeneralInterruptControlRegister = "General Interrupt Control Register"
                    case GeneralInterruptFlagRegister = "General Interrupt Flag Register"
                    case USARTBaudRateRegisterHightByte = "USART Baud Rate Register Hight Byte"
                    case EEPROMAddressRegisterBytes = "EEPROM Address Register Bytes"
                    case EEPROMAddressRegisterBytes2 = "EEPROM Address Register  Bytes" // Duplicate
                    case MCUControlAndStatusRegister = "MCU Control And Status Register"
                    case TheVADCMultiplexerSelectionRegister = "The VADC multiplexer Selection Register"
                    case VADCDataRegisterBytes = "VADC Data Register Bytes"
                    case VADCDataRegisterBytes2 = "VADC Data Register  Bytes" // Duplicate
                    case TheVADCControlAndStatusRegister = "The VADC Control and Status register"
                    case BandgapCalibrationOfResistorLadder = "Bandgap Calibration of Resistor Ladder"
                    case BandgapCalibrationRegister = "Bandgap Calibration Register"
                    case ExternalInterruptControlRegister = "External Interrupt Control Register"
                    case DataRegisterPortB = "Data Register, Port B"
                    case DataDirectionRegisterPortB = "Data Direction Register, Port B"
                    case InputPinsPortB = "Input Pins, Port B"
                    case FETControlAndStatusRegister = "FET Control and Status Register"
                    case StoreProgramMemoryControlAndStatusRegister = "Store Program Memory Control and Status Register"
                    case FastOscillatorCalibrationValue = "Fast Oscillator Calibration Value"
                    case OscillatorSamplingInterfaceControlAndStatusRegister = "Oscillator Sampling Interface Control and Status Register"
                    case DigitalInputDisableRegister = "Digital Input Disable Register"
                    case BatteryProtectionParameterLockRegister = "Battery Protection Parameter Lock Register"
                    case BatteryProtectionControlRegister = "Battery Protection Control Register"
                    case BatteryProtectionShortCurrentTimingRegister = "Battery Protection Short-current Timing Register"
                    case BatteryProtectionOverCurrentTimingRegister = "Battery Protection Over-current Timing Register"
                    case BatteryProtectionChargeHighCurrentDetectionLevelRegister = "Battery Protection Charge-High-current Detection Level Register"
                    case BatteryProtectionDischargeHighCurrentDetectionLevelRegister = "Battery Protection Discharge-High-current Detection Level Register"
                    case BatteryProtectionChargeOverCurrentDetectionLevelRegister = "Battery Protection Charge-Over-current Detection Level Register"
                    case BatteryProtectionDischargeOverCurrentDetectionLevelRegister = "Battery Protection Discharge-Over-current Detection Level Register"
                    case BatteryProtectionShortCircuitDetectionLevelRegister = "Battery Protection Short-Circuit Detection Level Register"
                    case BatteryProtectionInterruptFlagRegister = "Battery Protection Interrupt Flag Register"
                    case BatteryProtectionInterruptMaskRegister = "Battery Protection Interrupt Mask Register"
                    case EEPROMReadWriteAccess = "EEPROM Read/Write Access"
                    case OutputCompareRegister1A = "Output Compare Register 1A"
                    case OutputCompareRegisterB = "Output Compare Register B"
                    case OutputCompareRegisterB2 = "Output compare Register B" // Duplicate
                    case TimerCounter0Bytes = "Timer Counter 0 Bytes"
                    case TimerCounter0Bytes2 = "Timer Counter 0  Bytes" // Duplicate
                    case OutputCompareRegisterA = "Output Compare Register A"
                    case OutputCompareRegisterA2 = "Output compare Register A" // Duplicate
                    case CCADCControlAndStatusRegisterA = "CC-ADC Control and Status Register A"
                    case CCADCControlAndStatusRegisterB = "CC-ADC Control and Status Register B"
                    case CCADCInstantaneousCurrent = "CC-ADC Instantaneous Current"
                    case ADCAccumulateCurrent = "ADC Accumulate Current"
                    case CCADCRegularCurrent = "CC-ADC Regular Current"
                    case RegulatorOperatingConditionRegister = "Regulator Operating Condition Register"
                    case USBSoftwareOutputEnableRegister = "USB Software Output Enable register"
                    case USBEndpointNumberInterruptRegister = "USB Endpoint Number Interrupt Register"
                    case USBEndpointByteCountRegister = "USB Endpoint Byte Count Register"
                    case USBDataEndpoint = "USB Data Endpoint"
                    case USBEndpointInterruptEnableRegister = "USB Endpoint Interrupt Enable Register"
                    case USBEndpointStatus1Register = "USB Endpoint Status 1 Register"
                    case USBEndpointStatus0Register = "USB Endpoint Status 0 Register"
                    case USBEndpointConfiguration1Register = "USB Endpoint Configuration 1 Register"
                    case USBEndpointConfiguration0Register = "USB Endpoint Configuration 0 Register"
                    case USBEndpointControlRegister = "USB Endpoint Control Register"
                    case USBEndpointResetRegister = "USB Endpoint Reset Register"
                    case USBEndpointNumber = "USB Endpoint Number"
                    case USBEndpointInterruptRegister = "USB Endpoint Interrupt Register"
                    case USBDeviceMicroFrameNumber = "USB Device Micro Frame Number"
                    case USBDeviceFrameNumberHighRegister = "USB Device Frame Number High Register"
                    case USBDeviceAddressRegister = "USB Device Address Register"
                    case USBDeviceInterruptEnableRegister = "USB Device Interrupt Enable Register"
                    case USBDeviceInterruptRegister = "USB Device Interrupt Register"
                    case USBDeviceControlRegisters = "USB Device Control Registers"
                    case AnalogComparatorInputMultiplexer = "Analog Comparator Input Multiplexer"
                    case TimerCounterControlRegister = "Timer/Counter Control Register"
                    case TimerCounterRegister = "Timer/Counter Register"
                    case OutputCompareRegister = "Output Compare Register"
                    case TimerCounter0Register = "Timer/Counter 0 Register"
                    case TimerCounter0Register2 = "Timer/Counter0 Register" // Duplicate
                    case OutputCompare0Register = "Output Compare 0 Register"
                    case CCADCControlAndStatusRegisterC = "CC-ADC Control and Status Register C"
                    case CCADCRegularChargeCurrent = "CC-ADC Regular Charge Current"
                    case CCADCRegularDischargeCurrent = "CC-ADC Regular Discharge Current"
                    case TWIBusControlAndStatusRegister = "TWI Bus Control and Status Register"
                    case PinChangeEnableMaskRegister1 = "Pin Change Enable Mask Register 1"
                    case PinChangeEnableMaskRegister0 = "Pin Change Enable Mask Register 0"
                    case TimerCounter0ControlRegisterB = "Timer/Counter0 Control Register B"
                    case TimerCounter0ControlRegisterA = "Timer/Counter 0 Control Register A"
                    case TimerCounter0ControlRegisterA2 = "Timer/Counter0 Control Register A" // Duplicate
                    case CellBalancingControlRegister = "Cell Balancing Control Register"
                    case ChargerDetectControlAndStatusRegister = "Charger Detect Control and Status Register"
                    case BandgapControlAndStatusRegister = "Bandgap Control and Status Register"
                    case OutputCompareRegister0A = "Output Compare Register 0A"
                    case CANGeneralInterruptRegisterFlags = "CAN General Interrupt Register Flags"
                    case EnableMObRegister2 = "Enable MOb Register 2"
                    case EnableMObRegister1Empty = "Enable MOb Register 1(empty)"
                    case EnableInterruptMObRegister2 = "Enable Interrupt MOb Register 2"
                    case EnableInterruptMObRegister1empty = "Enable Interrupt MOb Register 1 (empty)"
                    case CANStatusInterruptMObRegister2 = "CAN Status Interrupt MOb Register 2"
                    case CANStatusInterruptMObRegister1Empty = "CAN Status Interrupt MOb Register 1 (empty)"
                    case CANBitTimingRegister1 = "CAN Bit Timing Register 1"
                    case CANBitTimingRegister2 = "CAN Bit Timing Register 2"
                    case CANBitTimingRegister3 = "CAN Bit Timing Register 3"
                    case TimerCounter0OutputCompareRegisterA = "Timer/Counter0 Output Compare Register A"
                    case TimerCounter0OutputCompareRegisterB = "Timer/Counter0 Output Compare Register B"
                    case TimerCounter1OutputCompareRegisterA = "Timer/Counter1 Output Compare Register A"
                    case TimerCounter1OutputCompareRegisterB = "Timer/Counter1 Output Compare Register B"
                    case TimerCounter1InputCaptureRegister = "Timer/Counter1 Input Capture Register"
                    case Amplifier0ControlandStatusRegister = "Amplifier 0 Control and Status Register"
                    case Amplifier1ControlandStatusRegister = "Amplifier 1 Control and Status Register"
                    case Amplifier2ControlandStatusRegister = "Amplifier 2 Control and Status Register"
                    case LINControlRegister = "LIN Control Register"
                    case LINStatusAndInterruptRegister = "LIN Status and Interrupt Register"
                    case LINEnableInterruptRegister = "LIN Enable Interrupt Register"
                    case LINErrorRegister = "LIN Error Register"
                    case LINBitTimingRegister = "LIN Bit Timing Register"
                    case LINBaudRateRegister = "LIN Baud Rate Register"
                    case LINDataLengthRegister = "LIN Data Length Register"
                    case LINIdentifierRegister = "LIN Identifier Register"
                    case LINDataBufferSelectionRegister = "LIN Data Buffer Selection Register"
                    case LINDataRegister = "LIN Data Register"
                    case PinChangeMaskRegister3 = "Pin Change Mask Register 3"
                    case PinChangeMaskRegister2 = "Pin Change Mask Register 2"
                    case PSCInterruptFlagRegister = "PSC Interrupt Flag Register"
                    case PSCInterruptMaskRegister = "PSC Interrupt Mask Register"
                    case PSCModule2InputControlRegister = "PSC Module 2 Input Control Register"
                    case PSCModule1InputControlRegister = "PSC Module 1 Input Control Register"
                    case PSCModule0InputControlRegister = "PSC Module 0 Input Control Register"
                    case PSCControlRegister = "PSC Control Register"
                    case PSCOutputConfiguration = "PSC Output Configuration"
                    case PSCConfigurationRegister = "PSC Configuration Register"
                    case PSCSynchroConfiguration = "PSC Synchro Configuration"
                    case PSCOutputCompareRBRegister = "PSC Output Compare RB Register"
                    case PSCOutputCompareRBRegister2 = "PSC Output Compare RB Register " // Duplicate
                    case PSCModule2OutputCompareSBRegister = "PSC Module 2 Output Compare SB Register"
                    case PSCModule2OutputCompareSBRegister2 = "PSC Module 2 Output Compare SB Register " // Duplicate
                    case PSCModule2OutputCompareRARegister = "PSC Module 2 Output Compare RA Register"
                    case PSCModule2OutputCompareRARegister2 = "PSC Module 2 Output Compare RA Register " // Duplicate
                    case PSCModule2OutputCompareSARegister = "PSC Module 2 Output Compare SA Register"
                    case PSCModule2OutputCompareSARegister2 = "PSC Module 2 Output Compare SA Register " // Duplicate
                    case PSCModule1OutputCompareSBRegister = "PSC Module 1 Output Compare SB Register"
                    case PSCModule1OutputCompareSBRegister2 = "PSC Module 1 Output Compare SB Register " // Duplicate
                    case PSCModule1OutputCompareRARegister = "PSC Module 1 Output Compare RA Register"
                    case PSCModule1OutputCompareRARegister2 = "PSC Module 1 Output Compare RA Register " // Duplicate
                    case PSCModule1OutputCompareSARegister = "PSC Module 1 Output Compare SA Register"
                    case PSCModule0OutputCompareSBRegister = "PSC Module 0 Output Compare SB Register"
                    case PSCModule0OutputCompareRARegister = "PSC Module 0 Output Compare RA Register"
                    case PSCModule0OutputCompareRARegister2 = "PSC Module 0 Output Compare RA Register " // Duplicate
                    case PSCModule0OutputCompareSARegister = "PSC Module 0 Output Compare SA Register"
                    case PSCModule0OutputCompareSARegister2 = "PSC Module 0 Output Compare SA Register " // Duplicate
                    case TimerCounter4ControlRegisterA = "Timer/Counter4 Control Register A"
                    case TimerCounter4ControlRegisterB = "Timer/Counter4 Control Register B"
                    case TimerCounter4ControlRegisterC = "Timer/Counter 4 Control Register C"
                    case TimerCounter4ControlRegisterC2 = "Timer/Counter4 Control Register C" // Duplicate
                    case TimerCounter4ControlRegisterD = "Timer/Counter 4 Control Register D"
                    case TimerCounter4ControlRegisterE = "Timer/Counter 4 Control Register E"
                    case TimerCounter4LowBytes = "Timer/Counter4 Low Bytes"
                    case TimerCounter4 = "Timer/Counter4"
                    case TimerCounter4OutputCompareRegisterA = "Timer/Counter4 Output Compare Register A"
                    case TimerCounter4OutputCompareRegisterB = "Timer/Counter4 Output Compare Register B"
                    case TimerCounter4OutputCompareRegisterC = "Timer/Counter4 Output Compare Register C"
                    case TimerCounter4OutputCompareRegisterD = "Timer/Counter4 Output Compare Register D"
                    case TimerCounter4InterruptMaskRegister = "Timer/Counter4 Interrupt Mask Register"
                    case TimerCounter4InterruptFlagRegister = "Timer/Counter4 Interrupt Flag Register"
                    case TimerCounter4InterruptFlagRegister2 = "Timer/Counter4 Interrupt Flag register" // Duplicate
                    case TimerCounter4DeadTimeValue = "Timer/Counter 4 Dead Time Value"
                    case TimerCounter3OutputCompareRegisterCBytes = "Timer/Counter3 Output Compare Register C Bytes"
                    case TimerCounter3OutputCompareRegisterCBytes2 = "Timer/Counter3 Output Compare Register C  Bytes" // Duplicate
                    case TimerCounter3OutputCompareRegisterCBytes3 = "Timer/Counter3 Output compare Register C  Bytes" // Duplicate
                    case OscillatorControlRegister = "Oscillator Control Register"
                    case ExtendedZPointerRegisterForELPMSPM = "Extended Z-pointer Register for ELPM/SPM"
                    case PLLFrequencyControlRegister = "PLL Frequency Control Register"
                    case PSCOutputCompareSARegister = "PSC Output Compare SA Register "
                    case PSCOutputCompareSBRegister = "PSC Output Compare SB Register "
                    case DigitalInputDisableRegister2 = "Digital Input Disable Register 2"
                    case TheADCControlAndStatusRegisterA = "The ADC Control and Status Register A"
                    case TheADCControlAndStatusRegisterA2 = "The ADC Control and Status register A" // Duplicate
                    case TheADCControlAndStatusRegisterB = "The ADC Control and Status Register B"
                    case TheADCControlAndStatusRegisterB2 = "The ADC Control and Status register B" // Duplicate
                    case EEPROMAddressRegisterLowByte = "EEPROM Address Register Low Byte"
                    case EEPROMAddressRegisterHighByte = "EEPROM Address Register High Byte"
                    case AnalogComparatorStatusRegisterB = "Analog Comparator Status Register B"
                    case XTALDivideControlRegister = "XTAL Divide Control Register"
                    case AsynchronusStatusRegister = "Asynchronus Status Register"
                    case ExtendedTimerCounterInterruptMaskRegister = "Extended Timer/Counter Interrupt Mask Register"
                    case ExtendedTimerCounterInterruptFlagRegister = "Extended Timer/Counter Interrupt Flag register"
                    case TimerRegisterLow = "Timer Register Low"
                    case TimerRegisterHigh = "Timer Register High"
                    case TTCTimerRegisterLow = "TTC Timer Register Low"
                    case TTCTimerRegisterHigh = "TTC Timer Register High"
                    case TimeStampRegisterLow = "Time Stamp Register Low"
                    case TimeStampRegisterHigh = "Time Stamp Register High"
                    case LINBaudRateLowRegister = "LIN Baud Rate Low Register"
                    case LINBaudRateHighRegister = "LIN Baud Rate High Register"
                    case PortBOverride = "Port B Override"
                    case ADCSynchronizationControlAndStatusRegister = "ADC Synchronization Control and Status Register"
                    case ADCControlRegisterA = "ADC Control Register A"
                    case ADCControlRegisterB = "ADC Control Register B"
                    case ADCControlRegisterD = "ADC Control Register D"
                    case ADCControlRegisterE = "ADC Control Register E"
                    case ADCInterruptFlagRegister = "ADC Interrupt Flag Register"
                    case ADCInterruptMaskRegister = "ADC Interrupt Mask Register"
                    case CCADCRegulatorCurrentComparatorThresholdLevel = "CC-ADC Regulator Current Comparator Threshold Level"
                    case VADCInstantaneousConversionResult = "V-ADC Instantaneous Conversion Result"
                    case VADCAccumulatedConversionResult = "V-ADC Accumulated Conversion Result"
                    case CADCInstantaneousConversionResult = "C-ADC Instantaneous Conversion Result"
                    case CADCAccumulatedConversionResult = "C-ADC Accumulated Conversion Result"
                    case BandgapControlAndStatusRegisterA = "Bandgap Control and Status Register A"
                    case BandGapCalibrationRegisterA = "Band Gap Calibration Register A"
                    case BandGapCalibrationRegisterB = "Band Gap Calibration Register B"
                    case BandGapLockRegister = "Band Gap Lock Register"
                    case SlowOscillatorCalibrationRegisterA = "Slow Oscillator Calibration Register A"
                    case OscillatorCalibrationRegisterB = "Oscillator Calibration Register B"
                    case WatchdogTimerConfigurationLockRegister = "Watchdog Timer Configuration Lock Register"
                    case WakeUpTimerControlAndStatusRegister = "Wake-up Timer Control and Status Register"
                    case USART0IODataRegister = "USART0 I/O Data Register"
                    case USART0ControlAndStatusRegisterA = "USART0 Control and Status Register A"
                    case USART0ControlAndStatusRegisterB = "USART0 Control and Status Register B"
                    case USART0ControlAndStatusRegisterC = "USART0 Control and Status Register C"
                    case USART0BaudRateRegisterBytes = "USART0 Baud Rate Register  Bytes"
                    case USART1IODataRegister = "USART1 I/O Data Register"
                    case USART1ControlAndStatusRegisterA = "USART1 Control and Status Register A"
                    case USART1ControlAndStatusRegisterB = "USART1 Control and Status Register B"
                    case USART1ControlAndStatusRegisterC = "USART1 Control and Status Register C"
                    case USART1BaudRateRegisterBytes = "USART1 Baud Rate Register  Bytes"
                    case TWISlaveAddressRegister = "TWI (Slave) Address Register"
                    case USART0MSPIMControlAndStatusRegisterA = "USART0 MSPIM Control and Status Register A"
                    case USART0MSPIMControlAndStatusRegisterB = "USART0 MSPIM Control and Status Register B"
                    case USART0MSPIMControlAndStatusRegisterC = "USART0 MSPIM Control and Status Register C"
                    case USART1MSPIMControlAndStatusRegisterA = "USART1 MSPIM Control and Status Register A"
                    case USART1MSPIMControlAndStatusRegisterB = "USART1 MSPIM Control and Status Register B"
                    case USART1MSPIMControlAndStatusRegisterC = "USART1 MSPIM Control and Status Register C"
                    case PortAInputPinsAddress = "Port A Input Pins Address"
                    case PortBInputPinsAddress = "Port B Input Pins Address"
                    case PortCInputPinsAddress = "Port C Input Pins Address"
                    case PortDInputPinsAddress = "Port D Input Pins Address"
                    case PortEInputPinsAddress = "Port E Input Pins Address"
                    case PortFDataRegister = "Port F Data Register"
                    case PortFDataDirectionRegister = "Port F Data Direction Register"
                    case PortFInputPinsAddress = "Port F Input Pins Address"
                    case PortGDataRegister = "Port G Data Register"
                    case PortGDataDirectionRegister = "Port G Data Direction Register"
                    case PortGInputPinsAddress = "Port G Input Pins Address"
                    case TimerCounter5ControlRegisterA = "Timer/Counter5 Control Register A"
                    case TimerCounter5ControlRegisterB = "Timer/Counter5 Control Register B"
                    case TimerCounter5ControlRegisterC = "Timer/Counter5 Control Register C"
                    case TimerCounter5ControlRegisterC2 = "Timer/Counter 5 Control Register C" // Duplicate
                    case TimerCounter5Bytes = "Timer/Counter5  Bytes"
                    case TimerCounter5OutputCompareRegisterABytes = "Timer/Counter5 Output Compare Register A  Bytes"
                    case TimerCounter5OutputCompareRegisterBBytes = "Timer/Counter5 Output Compare Register B  Bytes"
                    case TimerCounter5OutputCompareRegisterCBytes = "Timer/Counter5 Output Compare Register C  Bytes"
                    case TimerCounter5InputCaptureRegisterBytes = "Timer/Counter5 Input Capture Register  Bytes"
                    case TimerCounter5InterruptMaskRegister = "Timer/Counter5 Interrupt Mask Register"
                    case TimerCounter5InterruptFlagRegister = "Timer/Counter5 Interrupt Flag Register"
                    case TimerCounter5InterruptFlagRegister2 = "Timer/Counter5 Interrupt Flag register" // Duplicate
                    case TimerCounter4Bytes = "Timer/Counter4 Bytes"
                    case TimerCounter4Bytes2 = "Timer/Counter4  Bytes" // Duplicate
                    case TimerCounter4OutputCompareRegisterABytes = "Timer/Counter4 Output Compare Register A  Bytes"
                    case TimerCounter4OutputCompareRegisterABytes2 = "Timer/Counter4 Output Compare Register A Bytes" // Duplicate
                    case TimerCounter4OutputCompareRegisterBBytes = "Timer/Counter4 Output Compare Register B  Bytes"
                    case TimerCounter4OutputCompareRegisterBBytes2 = "Timer/Counter4 Output Compare Register B Bytes" // Duplicate
                    case TimerCounter4OutputCompareRegisterCBytes = "Timer/Counter4 Output Compare Register C  Bytes"
                    case TimerCounter4InputCaptureRegisterBytes = "Timer/Counter4 Input Capture Register  Bytes"
                    case TimerCounter4InputCaptureRegisterBytes2 = "Timer/Counter4 Input Capture Register Bytes" // Duplicate
                    case PowerAmplifierRampUpDownControlRegister = "Power Amplifier Ramp up/down Control Register"
                    case TransceiverMACShortAddressRegisterForFrameFilter0LowByte = "Transceiver MAC Short Address Register for Frame Filter 0 (Low Byte)"
                    case TransceiverMACShortAddressRegisterForFrameFilter0HighByte = "Transceiver MAC Short Address Register for Frame Filter 0 (High Byte)"
                    case TransceiverPersonalAreaNetworkIDRegisterForFrameFilter0LowByte = "Transceiver Personal Area Network ID Register for Frame Filter 0 (Low Byte)"
                    case TransceiverPersonalAreaNetworkIDRegisterForFrameFilter0HighByte = "Transceiver Personal Area Network ID Register for Frame Filter 0 (High Byte)"
                    case TransceiverMACShortAddressRegisterForFrameFilter1LowByte = "Transceiver MAC Short Address Register for Frame Filter 1 (Low Byte)"
                    case TransceiverMACShortAddressRegisterForFrameFilter1HighByte = "Transceiver MAC Short Address Register for Frame Filter 1 (High Byte)"
                    case TransceiverPersonalAreaNetworkIDRegisterForFrameFilter1LowByte = "Transceiver Personal Area Network ID Register for Frame Filter 1 (Low Byte)"
                    case TransceiverPersonalAreaNetworkIDRegisterForFrameFilter1HighByte = "Transceiver Personal Area Network ID Register for Frame Filter 1 (High Byte)"
                    case TransceiverMACShortAddressRegisterForFrameFilter2LowByte = "Transceiver MAC Short Address Register for Frame Filter 2 (Low Byte)"
                    case TransceiverMACShortAddressRegisterForFrameFilter2HighByte = "Transceiver MAC Short Address Register for Frame Filter 2 (High Byte)"
                    case TransceiverPersonalAreaNetworkIDRegisterForFrameFilter2LowByte = "Transceiver Personal Area Network ID Register for Frame Filter 2 (Low Byte)"
                    case TransceiverPersonalAreaNetworkIDRegisterForFrameFilter2HighByte = "Transceiver Personal Area Network ID Register for Frame Filter 2 (High Byte)"
                    case TransceiverMACShortAddressRegisterForFrameFilter3LowByte = "Transceiver MAC Short Address Register for Frame Filter 3 (Low Byte)"
                    case TransceiverMACShortAddressRegisterForFrameFilter3HighByte = "Transceiver MAC Short Address Register for Frame Filter 3 (High Byte)"
                    case TransceiverPersonalAreaNetworkIDRegisterForFrameFilter3LowByte = "Transceiver Personal Area Network ID Register for Frame Filter 3 (Low Byte)"
                    case TransceiverPersonalAreaNetworkIDRegisterForFrameFilter3HighByte = "Transceiver Personal Area Network ID Register for Frame Filter 3 (High Byte)"
                    case MultipleAddressFilterConfigurationRegister0 = "Multiple Address Filter Configuration Register 0"
                    case MultipleAddressFilterConfigurationRegister1 = "Multiple Address Filter Configuration Register 1"
                    case AESControlRegister = "AES Control Register"
                    case AESStatusRegister = "AES Status Register"
                    case AESPlainAndCipherTextBufferRegister = "AES Plain and Cipher Text Buffer Register"
                    case AESEncryptionAndDecryptionKeyBufferRegister = "AES Encryption and Decryption Key Buffer Register"
                    case TransceiverStatusRegister = "Transceiver Status Register"
                    case TransceiverStateControlRegister = "Transceiver State Control Register"
                    case Reserved = "Reserved"
                    case TransceiverControlRegister1 = "Transceiver Control Register 1"
                    case TransceiverTransmitPowerControlRegister = "Transceiver Transmit Power Control Register"
                    case ReceiverSignalStrengthIndicatorRegister = "Receiver Signal Strength Indicator Register"
                    case TransceiverEnergyDetectionLevelRegister = "Transceiver Energy Detection Level Register"
                    case TransceiverClearChannelAssessmentCCAControlRegister = "Transceiver Clear Channel Assessment (CCA) Control Register"
                    case TransceiverCCAThresholdSettingRegister = "Transceiver CCA Threshold Setting Register"
                    case TransceiverReceiveControlRegister = "Transceiver Receive Control Register"
                    case StartOfFrameDelimiterValueRegister = "Start of Frame Delimiter Value Register"
                    case TransceiverControlRegister2 = "Transceiver Control Register 2"
                    case AntennaDiversityControlRegister = "Antenna Diversity Control Register"
                    case TransceiverInterruptEnableRegister = "Transceiver Interrupt Enable Register"
                    case TransceiverInterruptStatusRegister = "Transceiver Interrupt Status Register"
                    case TransceiverInterruptEnableRegister1 = "Transceiver Interrupt Enable Register 1"
                    case TransceiverInterruptStatusRegister1 = "Transceiver Interrupt Status Register 1"
                    case VoltageRegulatorControlAndStatusRegister = "Voltage Regulator Control and Status Register"
                    case BatteryMonitorControlAndStatusRegister = "Battery Monitor Control and Status Register"
                    case CrystalOscillatorControlRegister = "Crystal Oscillator Control Register"
                    case ChannelControlRegister0 = "Channel Control Register 0"
                    case ChannelControlRegister1 = "Channel Control Register 1"
                    case TransceiverReceiverSensitivityControlRegister = "Transceiver Receiver Sensitivity Control Register"
                    case TransceiverReducedPowerConsumptionControl = "Transceiver Reduced Power Consumption Control"
                    case TransceiverAcknowledgmentFrameControlRegister1 = "Transceiver Acknowledgment Frame Control Register 1"
                    case TransceiverFilterTuningControlRegister = "Transceiver Filter Tuning Control Register"
                    case TransceiverCenterFrequencyCalibrationControlRegister = "Transceiver Center Frequency Calibration Control Register"
                    case TransceiverDelayCellCalibrationControlRegister = "Transceiver Delay Cell Calibration Control Register"
                    case DeviceIdentificationRegisterPartNumber = "Device Identification Register (Part Number)"
                    case DeviceIdentificationRegisterVersionNumber = "Device Identification Register (Version Number)"
                    case DeviceIdentificationRegisterManufactureIDLowByte = "Device Identification Register (Manufacture ID Low Byte)"
                    case DeviceIdentificationRegisterManufactureIDHighByte = "Device Identification Register (Manufacture ID High Byte)"
                    case TransceiverMACShortAddressRegisterLowByte = "Transceiver MAC Short Address Register (Low Byte)"
                    case TransceiverMACShortAddressRegisterHighByte = "Transceiver MAC Short Address Register (High Byte)"
                    case TransceiverPersonalAreaNetworkIDRegisterLowByte = "Transceiver Personal Area Network ID Register (Low Byte)"
                    case TransceiverPersonalAreaNetworkIDRegisterHighByte = "Transceiver Personal Area Network ID Register (High Byte)"
                    case TransceiverMACIEEEAddressRegister0 = "Transceiver MAC IEEE Address Register 0"
                    case TransceiverMACIEEEAddressRegister1 = "Transceiver MAC IEEE Address Register 1"
                    case TransceiverMACIEEEAddressRegister2 = "Transceiver MAC IEEE Address Register 2"
                    case TransceiverMACIEEEAddressRegister3 = "Transceiver MAC IEEE Address Register 3"
                    case TransceiverMACIEEEAddressRegister4 = "Transceiver MAC IEEE Address Register 4"
                    case TransceiverMACIEEEAddressRegister5 = "Transceiver MAC IEEE Address Register 5"
                    case TransceiverMACIEEEAddressRegister6 = "Transceiver MAC IEEE Address Register 6"
                    case TransceiverMACIEEEAddressRegister7 = "Transceiver MAC IEEE Address Register 7"
                    case TransceiverExtendedOperatingModeControlRegister = "Transceiver Extended Operating Mode Control Register"
                    case TransceiverCSMACARandomNumberGeneratorSeedRegister = "Transceiver CSMA-CA Random Number Generator Seed Register"
                    case TransceiverAcknowledgmentFrameControlRegister2 = "Transceiver Acknowledgment Frame Control Register 2"
                    case TransceiverCSMACABackOffExponentControlRegister = "Transceiver CSMA-CA Back-off Exponent Control Register"
                    case TransceiverDigitalTestControlRegister = "Transceiver Digital Test Control Register"
                    case TransceiverReceivedFrameLengthRegister = "Transceiver Received Frame Length Register"
                    case StartOfFrameBuffer = "Start of frame buffer"
                    case EndOfFrameBuffer = "End of frame buffer"
                    case SymbolCounterTransmitFrameTimestampRegisterHHByte = "Symbol Counter Transmit Frame Timestamp Register HH-Byte"
                    case SymbolCounterTransmitFrameTimestampRegisterHLByte = "Symbol Counter Transmit Frame Timestamp Register HL-Byte"
                    case SymbolCounterTransmitFrameTimestampRegisterLHByte = "Symbol Counter Transmit Frame Timestamp Register LH-Byte"
                    case SymbolCounterTransmitFrameTimestampRegisterLLByte = "Symbol Counter Transmit Frame Timestamp Register LL-Byte"
                    case SymbolCounterOutputCompareRegister1HHByte = "Symbol Counter Output Compare Register 1 HH-Byte"
                    case SymbolCounterOutputCompareRegister1HLByte = "Symbol Counter Output Compare Register 1 HL-Byte"
                    case SymbolCounterOutputCompareRegister1LHByte = "Symbol Counter Output Compare Register 1 LH-Byte"
                    case SymbolCounterOutputCompareRegister1LLByte = "Symbol Counter Output Compare Register 1 LL-Byte"
                    case SymbolCounterOutputCompareRegister2HHByte = "Symbol Counter Output Compare Register 2 HH-Byte"
                    case SymbolCounterOutputCompareRegister2HLByte = "Symbol Counter Output Compare Register 2 HL-Byte"
                    case SymbolCounterOutputCompareRegister2LHByte = "Symbol Counter Output Compare Register 2 LH-Byte"
                    case SymbolCounterOutputCompareRegister2LLByte = "Symbol Counter Output Compare Register 2 LL-Byte"
                    case SymbolCounterOutputCompareRegister3HHByte = "Symbol Counter Output Compare Register 3 HH-Byte"
                    case SymbolCounterOutputCompareRegister3HLByte = "Symbol Counter Output Compare Register 3 HL-Byte"
                    case SymbolCounterOutputCompareRegister3LHByte = "Symbol Counter Output Compare Register 3 LH-Byte"
                    case SymbolCounterOutputCompareRegister3LLByte = "Symbol Counter Output Compare Register 3 LL-Byte"
                    case SymbolCounterFrameTimestampRegisterHHByte = "Symbol Counter Frame Timestamp Register HH-Byte"
                    case SymbolCounterFrameTimestampRegisterHLByte = "Symbol Counter Frame Timestamp Register HL-Byte"
                    case SymbolCounterFrameTimestampRegisterLHByte = "Symbol Counter Frame Timestamp Register LH-Byte"
                    case SymbolCounterFrameTimestampRegisterLLByte = "Symbol Counter Frame Timestamp Register LL-Byte"
                    case SymbolCounterBeaconTimestampRegisterHHByte = "Symbol Counter Beacon Timestamp Register HH-Byte"
                    case SymbolCounterBeaconTimestampRegisterHLByte = "Symbol Counter Beacon Timestamp Register HL-Byte"
                    case SymbolCounterBeaconTimestampRegisterLHByte = "Symbol Counter Beacon Timestamp Register LH-Byte"
                    case SymbolCounterBeaconTimestampRegisterLLByte = "Symbol Counter Beacon Timestamp Register LL-Byte"
                    case SymbolCounterRegisterHHByte = "Symbol Counter Register HH-Byte"
                    case SymbolCounterRegisterHLByte = "Symbol Counter Register HL-Byte"
                    case SymbolCounterRegisterLHByte = "Symbol Counter Register LH-Byte"
                    case SymbolCounterRegisterLLByte = "Symbol Counter Register LL-Byte"
                    case SymbolCounterInterruptStatusRegister = "Symbol Counter Interrupt Status Register"
                    case SymbolCounterInterruptMaskRegister = "Symbol Counter Interrupt Mask Register"
                    case SymbolCounterStatusRegister = "Symbol Counter Status Register"
                    case SymbolCounterControlRegister1 = "Symbol Counter Control Register 1"
                    case SymbolCounterControlRegister0 = "Symbol Counter Control Register 0"
                    case SymbolCounterCompareSourceRegister = "Symbol Counter Compare Source Register"
                    case SymbolCounterReceivedFrameTimestampRegisterHHByte = "Symbol Counter Received Frame Timestamp Register HH-Byte"
                    case SymbolCounterReceivedFrameTimestampRegisterHLByte = "Symbol Counter Received Frame Timestamp Register HL-Byte"
                    case SymbolCounterReceivedFrameTimestampRegisterLHByte = "Symbol Counter Received Frame Timestamp Register LH-Byte"
                    case SymbolCounterReceivedFrameTimestampRegisterLLByte = "Symbol Counter Received Frame Timestamp Register LL-Byte"
                    case OnChipDebugRegister = "On-Chip Debug Register"
                    case TheADCControlAndStatusRegisterC = "The ADC Control and Status Register C"
                    case PowerReductionRegister2 = "Power Reduction Register 2"
                    case PowerReductionRegister22 = "Power Reduction Register2" // Duplicate
                    case FlashExtendedModeControlRegister = "Flash Extended-Mode Control-Register"
                    case ReferenceVoltageCalibrationRegister = "Reference Voltage Calibration Register"
                    case TransceiverPinRegister = "Transceiver Pin Register"
                    case DataRetentionConfigurationRegister0 = "Data Retention Configuration Register #0"
                    case DataRetentionConfigurationRegister1 = "Data Retention Configuration Register #1"
                    case DataRetentionConfigurationRegister2 = "Data Retention Configuration Register #2"
                    case DataRetentionConfigurationRegister3 = "Data Retention Configuration Register #3"
                    case LowLeakageVoltageRegulatorDataRegisterLowByte = "Low Leakage Voltage Regulator Data Register (Low-Byte)"
                    case LowLeakageVoltageRegulatorDataRegisterHighByte = "Low Leakage Voltage Regulator Data Register (High-Byte)"
                    case LowLeakageVoltageRegulatorControlRegister = "Low Leakage Voltage Regulator Control Register"
                    case PortDriverStrengthRegister0 = "Port Driver Strength Register 0"
                    case PortDriverStrengthRegister1 = "Port Driver Strength Register 1"
                    case DataRetentionConfigurationRegisterOfSRAM0 = "Data Retention Configuration Register of SRAM 0"
                    case DataRetentionConfigurationRegisterOfSRAM1 = "Data Retention Configuration Register of SRAM 1"
                    case DataRetentionConfigurationRegisterOfSRAM2 = "Data Retention Configuration Register of SRAM 2"
                    case DataRetentionConfigurationRegisterOfSRAM3 = "Data Retention Configuration Register of SRAM 3"
                    case TimerCounte3OutputCompareRegisterBBytes = "Timer/Counte3 Output Compare Register B  Bytes"
                    case USARTBaudRateRegisterHighgByte = "USART Baud Rate Register Highg Byte"
                    case ExtendedMCUControlRegister = "Extended MCU Control Register"
                    case PinChangeEnableMask = "Pin Change Enable Mask"
                    case TimerCounter2InterruptMaskRegister = "Timer/Counter2 Interrupt Mask register"
                    case TimerCounter2InterruptFlagRegister = "Timer/Counter2 Interrupt Flag Register"
                    case PortGInputPins = "Port G Input Pins"
                    case USIDataRegister = "USI Data Register"
                    case USIStatusRegister = "USI Status Register"
                    case USIControlRegister = "USI Control Register"
                    case LCDControlRegisterA = "LCD Control Register A"
                    case LCDControlAndStatusRegisterB = "LCD Control and Status Register B"
                    case LCDFrameRateRegister = "LCD Frame Rate Register"
                    case LCDContrastControlRegister = "LCD Contrast Control Register"
                    case LCDDataRegister18 = "LCD Data Register 18"
                    case LCDDataRegister17 = "LCD Data Register 17"
                    case LCDDataRegister16 = "LCD Data Register 16"
                    case LCDDataRegister15 = "LCD Data Register 15"
                    case LCDDataRegister13 = "LCD Data Register 13"
                    case LCDDataRegister12 = "LCD Data Register 12"
                    case LCDDataRegister11 = "LCD Data Register 11"
                    case LCDDataRegister10 = "LCD Data Register 10"
                    case LCDDataRegister8 = "LCD Data Register 8"
                    case LCDDataRegister7 = "LCD Data Register 7"
                    case LCDDataRegister6 = "LCD Data Register 6"
                    case LCDDataRegister5 = "LCD Data Register 5"
                    case LCDDataRegister3 = "LCD Data Register 3"
                    case LCDDataRegister2 = "LCD Data Register 2"
                    case LCDDataRegister1 = "LCD Data Register 1"
                    case LCDDataRegister0 = "LCD Data Register 0"
                    case AnalogComparatorControlAndStatusRegisterB = "Analog Comparator Control And Status Register B"
                    case AnalogComparatorControlAndStatusRegisterB2 = "Analog Comparator Control And Status Register-B" // Duplicate
                    case PinChangeMaskRegister4 = "Pin Change Mask Register 4"
                    case ADCMultiplexerSelectionRegister = "ADC multiplexer Selection Register"
                    case ADCControlAndStatusRegisterA = "ADC Control and Status register A"
                    case XOSCFailureDetectionControlAndStatusRegister = "XOSC Failure Detection Control and Status Register"
                    case USARTIODataRegister0 = "USART I/O Data Register 0"
                    case TimerCounter4OutputCompareRegisterBytes = "Timer/Counter4 Output Compare Register Bytes"
                    case AnalogComparatorControlAndStatusRegisterA = "Analog Comparator Control And Status Register-A"
                    case LCDControlAndStatusRegisterA = "LCD Control and Status Register A"
                    case OutputCompareRegister1ALowbyte = "Output Compare Register 1A Low byte"
                    case OutputCompareRegister1AHighbyte = "Output Compare Register 1A High byte"
                    case WakeUpTimerControlRegister = "Wake-up Timer Control Register"
                    case CurrentBatteryProtectionTimingRegister = "Current Battery Protection Timing Register"
                    case BatteryProtectionOverCurrentDetectionLevelRegister = "Battery Protection OverCurrent Detection Level Register"
                    case BatteryProtectionDeepUnderVoltageRegister = "Battery Protection Deep Under Voltage Register"
                    case BatteryProtectionInterruptRegister = "Battery Protection Interrupt Register"
                    case ClockControlandStatusRegister = "Clock Control and Status Register"
                    case DataRegisterPortD = "Data Register, Port D"
                    case DataDirectionRegisterPortD = "Data Direction Register, Port D"
                    case InputPinsPortD = "Input Pins, Port D"
                    case PORTHDataRegister = "PORT H Data Register"
                    case PORTHDataDirectionRegister = "PORT H Data Direction Register"
                    case PORTHInputPins = "PORT H Input Pins"
                    case PORTJDataRegister = "PORT J Data Register"
                    case PORTJDataDirectionRegister = "PORT J Data Direction Register"
                    case PORTJInputPins = "PORT J Input Pins"
                    case PORTKDataRegister = "PORT K Data Register"
                    case PORTKDataDirectionRegister = "PORT K Data Direction Register"
                    case PORTKInputPins = "PORT K Input Pins"
                    case PORTLDataRegister = "PORT L Data Register"
                    case PORTLDataDirectionRegister = "PORT L Data Direction Register"
                    case PORTLInputPins = "PORT L Input Pins"
                    case ControlA = "Control A"
                    case MuxControlA = "Mux Control A"
                    case ReferanceScaleControl = "Referance scale control"
                    case InterruptControl = "Interrupt Control"
                    case Status = "Status"
                    case ControlB = "Control B"
                    case ControlC = "Control C"
                    case ControlD = "Control D"
                    case ControlE = "Control E"
                    case SampleControl = "Sample Control"
                    case PositiveMuxInput = "Positive mux input"
                    case Command = "Command"
                    case EventControl = "Event Control"
                    case InterruptFlags = "Interrupt Flags"
                    case DebugControl = "Debug Control"
                    case DebugControl2 = "Debug control" // Duplicate
                    case TemporaryData = "Temporary Data"
                    case ADCAccumulatorResult = "ADC Accumulator Result"
                    case WindowComparatorLowThreshold = "Window comparator low threshold"
                    case WindowComparatorHighThreshold = "Window comparator high threshold"
                    case Calibration = "Calibration"
                    case VoltageLevelMonitorControl = "Voltage level monitor Control"
                    case VoltageLevelMonitorInterruptControl = "Voltage level monitor interrupt Control"
                    case VoltageLevelMonitorInterruptFlags = "Voltage level monitor interrupt Flags"
                    case VoltageLevelMonitorStatus = "Voltage level monitor status"
                    case ControlRegisterA = "Control Register A"
                    case SequentialControl0 = "Sequential Control 0"
                    case SequentialControl1 = "Sequential Control 1"
                    case InterruptControl0 = "Interrupt Control 0"
                    case LUTControl0A = "LUT Control 0 A"
                    case LUTControl0B = "LUT Control 0 B"
                    case LUTControl0C = "LUT Control 0 C"
                    case Truth0 = "Truth 0"
                    case LUTControl1A = "LUT Control 1 A"
                    case LUTControl1B = "LUT Control 1 B"
                    case LUTControl1C = "LUT Control 1 C"
                    case Truth1 = "Truth 1"
                    case LUTControl2A = "LUT Control 2 A"
                    case LUTControl2B = "LUT Control 2 B"
                    case LUTControl2C = "LUT Control 2 C"
                    case Truth2 = "Truth 2"
                    case LUTControl3A = "LUT Control 3 A"
                    case LUTControl3B = "LUT Control 3 B"
                    case LUTControl3C = "LUT Control 3 C"
                    case Truth3 = "Truth 3"
                    case MCLKControlA = "MCLK Control A"
                    case MCLKControlB = "MCLK Control B"
                    case MCLKLock = "MCLK Lock"
                    case MCLKStatus = "MCLK Status"
                    case OSC20MControlA = "OSC20M Control A"
                    case OSC20MCalibrationA = "OSC20M Calibration A"
                    case OSC20MCalibrationB = "OSC20M Calibration B"
                    case OSC32KControlA = "OSC32K Control A"
                    case XOSC32KControlA = "XOSC32K Control A"
                    case ConfigurationChangeProtection = "Configuration Change Protection"
                    case StackPointerLow = "Stack Pointer Low"
                    case StackPointerHigh = "Stack Pointer High"
                    case InterruptLevel0Priority = "Interrupt Level 0 Priority"
                    case InterruptLevel1PriorityVector = "Interrupt Level 1 Priority Vector"
                    case ChannelStrobe = "Channel Strobe"
                    case MultiplexerChannel0 = "Multiplexer Channel 0"
                    case MultiplexerChannel1 = "Multiplexer Channel 1"
                    case MultiplexerChannel2 = "Multiplexer Channel 2"
                    case MultiplexerChannel3 = "Multiplexer Channel 3"
                    case MultiplexerChannel4 = "Multiplexer Channel 4"
                    case MultiplexerChannel5 = "Multiplexer Channel 5"
                    case UserCCLLUT0EventA = "User CCL LUT0 Event A"
                    case UserCCLLUT0EventB = "User CCL LUT0 Event B"
                    case UserCCLLUT1EventA = "User CCL LUT1 Event A"
                    case UserCCLLUT1EventB = "User CCL LUT1 Event B"
                    case UserCCLLUT2EventA = "User CCL LUT2 Event A"
                    case UserCCLLUT2EventB = "User CCL LUT2 Event B"
                    case UserCCLLUT3EventA = "User CCL LUT3 Event A"
                    case UserCCLLUT3EventB = "User CCL LUT3 Event B"
                    case UserADC0 = "User ADC0"
                    case UserEVOUTPortA = "User EVOUT Port A"
                    case UserEVOUTPortB = "User EVOUT Port B"
                    case UserEVOUTPortC = "User EVOUT Port C"
                    case UserEVOUTPortD = "User EVOUT Port D"
                    case UserEVOUTPortE = "User EVOUT Port E"
                    case UserEVOUTPortF = "User EVOUT Port F"
                    case UserUSART0 = "User USART0"
                    case UserUSART1 = "User USART1"
                    case UserUSART2 = "User USART2"
                    case UserUSART3 = "User USART3"
                    case UserTCA0 = "User TCA0"
                    case UserTCB0 = "User TCB0"
                    case UserTCB1 = "User TCB1"
                    case UserTCB2 = "User TCB2"
                    case UserTCB3 = "User TCB3"
                    case WatchdogConfiguration = "Watchdog Configuration"
                    case BODConfiguration = "BOD Configuration"
                    case OscillatorConfiguration = "Oscillator Configuration"
                    case SystemConfiguration0 = "System Configuration 0"
                    case SystemConfiguration1 = "System Configuration 1"
                    case ApplicationCodeSectionEnd = "Application Code Section End"
                    case BootSectionEnd = "Boot Section End"
                    case LockBits = "Lock Bits"
                    case Data = "Data"
                    case Address = "Address"
                    case DataDirection = "Data Direction"
                    case DataDirectionSet = "Data Direction Set"
                    case DataDirectionClear = "Data Direction Clear"
                    case DataDirectionToggle = "Data Direction Toggle"
                    case OutputValue = "Output Value"
                    case OutputValueSet = "Output Value Set"
                    case OutputValueClear = "Output Value Clear"
                    case OutputValueToggle = "Output Value Toggle"
                    case InputValue = "Input Value"
                    case PortControl = "Port Control"
                    case Pin0Control = "Pin 0 Control"
                    case Pin1Control = "Pin 1 Control"
                    case Pin2Control = "Pin 2 Control"
                    case Pin3Control = "Pin 3 Control"
                    case Pin4Control = "Pin 4 Control"
                    case Pin5Control = "Pin 5 Control"
                    case Pin6Control = "Pin 6 Control"
                    case Pin7Control = "Pin 7 Control"
                    case PortMultiplexerEVSYS = "Port Multiplexer EVSYS"
                    case PortMultiplexerCCL = "Port Multiplexer CCL"
                    case PortMultiplexerUSARTRegisterA = "Port Multiplexer USART register A"
                    case PortMultiplexerTWIAndSPI = "Port Multiplexer TWI and SPI"
                    case PortMultiplexerTCA = "Port Multiplexer TCA"
                    case PortMultiplexerTCB = "Port Multiplexer TCB"
                    case ResetFlags = "Reset Flags"
                    case SoftwareReset = "Software Reset"
                    case Temporary = "Temporary"
                    case ClockSelect = "Clock Select"
                    case Counter = "Counter"
                    case Period = "Period"
                    case Compare = "Compare"
                    case PITControlA = "PIT Control A"
                    case PITStatus = "PIT Status"
                    case PITInterruptControl = "PIT Interrupt Control"
                    case PITInterruptFlags = "PIT Interrupt Flags"
                    case PITDebugControl = "PIT Debug control"
                    case DeviceIDByte0 = "Device ID Byte 0"
                    case DeviceIDByte1 = "Device ID Byte 1"
                    case DeviceIDByte2 = "Device ID Byte 2"
                    case SerialNumberByte0 = "Serial Number Byte 0"
                    case SerialNumberByte1 = "Serial Number Byte 1"
                    case SerialNumberByte2 = "Serial Number Byte 2"
                    case SerialNumberByte3 = "Serial Number Byte 3"
                    case SerialNumberByte4 = "Serial Number Byte 4"
                    case SerialNumberByte5 = "Serial Number Byte 5"
                    case SerialNumberByte6 = "Serial Number Byte 6"
                    case SerialNumberByte7 = "Serial Number Byte 7"
                    case SerialNumberByte8 = "Serial Number Byte 8"
                    case SerialNumberByte9 = "Serial Number Byte 9"
                    case OscillatorCalibrationFor32kHzULP = "Oscillator Calibration for 32kHz ULP"
                    case OscillatorCalibration16MHzByte0 = "Oscillator Calibration 16 MHz Byte 0"
                    case OscillatorCalibration16MHzByte1 = "Oscillator Calibration 16 MHz Byte 1"
                    case OscillatorCalibration20MHzByte0 = "Oscillator Calibration 20 MHz Byte 0"
                    case OscillatorCalibration20MHzByte1 = "Oscillator Calibration 20 MHz Byte 1"
                    case TemperatureSensorCalibrationByte0 = "Temperature Sensor Calibration Byte 0"
                    case TemperatureSensorCalibrationByte1 = "Temperature Sensor Calibration Byte 1"
                    case OSC16ErrorAt3V = "OSC16 error at 3V"
                    case OSC16ErrorAt5V = "OSC16 error at 5V"
                    case OSC20ErrorAt3V = "OSC20 error at 3V"
                    case OSC20ErrorAt5V = "OSC20 error at 5V"
                    case CRCChecksumByte1 = "CRC Checksum Byte 1"
                    case Control = "Control"
                    case RevisionID = "Revision ID"
                    case ExternalBreak = "External Break"
                    case OCDMessageRegister = "OCD Message Register"
                    case OCDMessageStatus = "OCD Message Status"
                    case ControlEClear = "Control E Clear"
                    case ControlESet = "Control E Set"
                    case ControlFClear = "Control F Clear"
                    case ControlFSet = "Control F Set"
                    case DegbugControl = "Degbug Control"
                    case TemporaryDataFor16BitAccess = "Temporary data for 16-bit Access"
                    case Count = "Count"
                    case Compare0 = "Compare 0"
                    case Compare1 = "Compare 1"
                    case Compare2 = "Compare 2"
                    case PeriodBuffer = "Period Buffer"
                    case Compare0Buffer = "Compare 0 Buffer"
                    case Compare1Buffer = "Compare 1 Buffer"
                    case Compare2Buffer = "Compare 2 Buffer"
                    case LowCount = "Low Count"
                    case HighCount = "High Count"
                    case LowPeriod = "Low Period"
                    case HighPeriod = "High Period"
                    case LowCompare = "Low Compare"
                    case HighCompare = "High Compare"
                    case ControlRegisterB = "Control Register B"
                    case TemporaryValue = "Temporary Value"
                    case CompareOrCapture = "Compare or Capture"
                    case DualControl = "Dual Control"
                    case DebugControlRegister = "Debug Control Register"
                    case HostControlA = "Host Control A"
                    case HostControlB = "Host Control B"
                    case HostStatus = "Host Status"
                    case HostBaudRateControl = "Host Baud Rate Control"
                    case HostAddress = "Host Address"
                    case HostData = "Host Data"
                    case ClientControlA = "Client Control A"
                    case ClientControlB = "Client Control B"
                    case ClientStatus = "Client Status"
                    case ClientAddress = "Client Address"
                    case ClientData = "Client Data"
                    case ClientAddressMask = "Client Address Mask"
                    case ReceiveDataLowByte = "Receive Data Low Byte"
                    case ReceiveDataHighByte = "Receive Data High Byte"
                    case TransmitDataLowByte = "Transmit Data Low Byte"
                    case TransmitDataHighByte = "Transmit Data High Byte"
                    case BaudRate = "Baud Rate"
                    case IRCOMTransmitterPulseLengthControl = "IRCOM Transmitter Pulse Length Control"
                    case IRCOMReceiverPulseLengthControl = "IRCOM Receiver Pulse Length Control"
                    case UserRowByte0 = "User Row Byte 0"
                    case UserRowByte1 = "User Row Byte 1"
                    case UserRowByte2 = "User Row Byte 2"
                    case UserRowByte3 = "User Row Byte 3"
                    case UserRowByte4 = "User Row Byte 4"
                    case UserRowByte5 = "User Row Byte 5"
                    case UserRowByte6 = "User Row Byte 6"
                    case UserRowByte7 = "User Row Byte 7"
                    case UserRowByte8 = "User Row Byte 8"
                    case UserRowByte9 = "User Row Byte 9"
                    case UserRowByte10 = "User Row Byte 10"
                    case UserRowByte11 = "User Row Byte 11"
                    case UserRowByte12 = "User Row Byte 12"
                    case UserRowByte13 = "User Row Byte 13"
                    case UserRowByte14 = "User Row Byte 14"
                    case UserRowByte15 = "User Row Byte 15"
                    case UserRowByte16 = "User Row Byte 16"
                    case UserRowByte17 = "User Row Byte 17"
                    case UserRowByte18 = "User Row Byte 18"
                    case UserRowByte19 = "User Row Byte 19"
                    case UserRowByte20 = "User Row Byte 20"
                    case UserRowByte21 = "User Row Byte 21"
                    case UserRowByte22 = "User Row Byte 22"
                    case UserRowByte23 = "User Row Byte 23"
                    case UserRowByte24 = "User Row Byte 24"
                    case UserRowByte25 = "User Row Byte 25"
                    case UserRowByte26 = "User Row Byte 26"
                    case UserRowByte27 = "User Row Byte 27"
                    case UserRowByte28 = "User Row Byte 28"
                    case UserRowByte29 = "User Row Byte 29"
                    case UserRowByte30 = "User Row Byte 30"
                    case UserRowByte31 = "User Row Byte 31"
                    case UserRowByte32 = "User Row Byte 32"
                    case UserRowByte33 = "User Row Byte 33"
                    case UserRowByte34 = "User Row Byte 34"
                    case UserRowByte35 = "User Row Byte 35"
                    case UserRowByte36 = "User Row Byte 36"
                    case UserRowByte37 = "User Row Byte 37"
                    case UserRowByte38 = "User Row Byte 38"
                    case UserRowByte39 = "User Row Byte 39"
                    case UserRowByte40 = "User Row Byte 40"
                    case UserRowByte41 = "User Row Byte 41"
                    case UserRowByte42 = "User Row Byte 42"
                    case UserRowByte43 = "User Row Byte 43"
                    case UserRowByte44 = "User Row Byte 44"
                    case UserRowByte45 = "User Row Byte 45"
                    case UserRowByte46 = "User Row Byte 46"
                    case UserRowByte47 = "User Row Byte 47"
                    case UserRowByte48 = "User Row Byte 48"
                    case UserRowByte49 = "User Row Byte 49"
                    case UserRowByte50 = "User Row Byte 50"
                    case UserRowByte51 = "User Row Byte 51"
                    case UserRowByte52 = "User Row Byte 52"
                    case UserRowByte53 = "User Row Byte 53"
                    case UserRowByte54 = "User Row Byte 54"
                    case UserRowByte55 = "User Row Byte 55"
                    case UserRowByte56 = "User Row Byte 56"
                    case UserRowByte57 = "User Row Byte 57"
                    case UserRowByte58 = "User Row Byte 58"
                    case UserRowByte59 = "User Row Byte 59"
                    case UserRowByte60 = "User Row Byte 60"
                    case UserRowByte61 = "User Row Byte 61"
                    case UserRowByte62 = "User Row Byte 62"
                    case UserRowByte63 = "User Row Byte 63"
                    case MultiplexerChannel6 = "Multiplexer Channel 6"
                    case MultiplexerChannel7 = "Multiplexer Channel 7"
                    case LCDDataRegister19 = "LCD Data Register 19"
                    case LCDDataRegister14 = "LCD Data Register 14"
                    case LCDDataRegister9 = "LCD Data Register 9"
                    case LCDDataRegister4 = "LCD Data Register 4"
                }
                
                enum Mask: String, Codable { // TODO: Make this an Int?
                    case zeroXFF = "0xFF"
                    case zeroX1F = "0x1F"
                    case zeroX0FFF = "0x0FFF"
                    case zeroXFFFF = "0xFFFF"
                    case zeroX7F = "0x7F"
                    case zeroX07 = "0x07"
                    case zeroX9F = "0x9F"
                    case zeroX8FFF = "0x8FFF"
                    case zeroX01FF = "0x01FF"
                    case zeroX8F = "0x8F"
                    case zeroX07FF = "0x07FF"
                    case zeroX01 = "0x01"
                    case zeroX0F = "0x0F"
                    case zeroX03 = "0x03"
                    case zeroX03FF = "0x03FF"
                    case zeroX3F = "0x3F"
                    case zeroX00 = "0x00"
                    case zeroXFD = "0xFD"
                    case zeroXC0 = "0xC0"
                    case zeroX44 = "0x44"
                    case zeroXF3 = "0xF3"
                    case zeroX1FFF = "0x1FFF"
                    case zeroXEF = "0xEF"
                }
                
                enum OCDRW: String, Codable {
                    case blank = ""
                    case read = "R"
                    case write = "W"
                }

                struct Bitfield: Codable {
                    @Attribute var caption: Caption?
                    @Attribute var mask: Mask
                    @Attribute var name: Name
                    @Attribute var values: Values?
                    @Attribute var lsb: Int?
                    @Attribute var rw: ReadWrite?
                    
                    enum Caption: String, Codable {
                        case BODPowerDownSleepEnable = "BOD Power-Down Sleep Enable"
                        case BODPowerDownInPowerDownSleep = "BOD Power-Down in Power-Down Sleep"
                        case StoreProgramMemoryEnable2 = "Store program Memory Enable"
                        case PowerOnResetFlag = "Power-On Reset Flag"
                        case PinChangeInterruptFlag = "Pin Change Interrupt Flag"
                        case PinChangeInterruptEnable = "Pin Change Interrupt Enable"
                        case InterruptSenseControl0Bit0 = "Interrupt Sense Control 0 Bit 0"
                        case InterruptSenseControl0Bit1 = "Interrupt Sense Control 0 Bit 1"
                        case ReferenceSelectionBit0 = "Reference Selection Bit 0"
                        case BrownoutDetectortriggerlevel = "Brown-out Detector trigger level"
                        case Reservedforfactorytests = "Reserved for factory tests"
                        case OnChipDebugEnabled = "On-Chip Debug Enabled"
                        case JTAGInterfaceEnabled = "JTAG Interface Enabled"
                        case SerialprogramdownloadingSPIenabled = "Serial program downloading (SPI) enabled"
                        case Watchdogtimeralwayson = "Watchdog timer always on"
                        case PreserveEEPROMthroughtheChipErasecycle = "Preserve EEPROM through the Chip Erase cycle"
                        case SelectBootSize = "Select Boot Size"
                        case BootResetvectorEnabled = "Boot Reset vector Enabled"
                        case Divideclockby8internallyCKDIV80 = "Divide clock by 8 internally; [CKDIV8=0]"
                        case ClockoutputonPORTC7CKOUT0 = "Clock output on PORTC7; [CKOUT=0]"
                        case SelectClockSource = "Select Clock Source"
                        case MemoryLock = "Memory Lock"
                        case BootLoaderProtectionMode = "Boot Loader Protection Mode"
                        case JTAGInterfaceDisable = "JTAG Interface Disable"
                        case JTAGResetFlag = "JTAG Reset Flag"
                        case SPIInterruptEnable = "SPI Interrupt Enable"
                        case SPIEnable = "SPI Enable"
                        case DataOrder = "Data Order"
                        case MasterSlaveSelect = "Master/Slave Select"
                        case Clockpolarity = "Clock polarity"
                        case ClockPhase = "Clock Phase"
                        case SPIClockRateSelects = "SPI Clock Rate Selects"
                        case SPIInterruptFlag = "SPI Interrupt Flag"
                        case WriteCollisionFlag = "Write Collision Flag"
                        case DoubleSPISpeedBit = "Double SPI Speed Bit"
                        case SPIDataRegister = "SPI Data Register"
                        case TWIInterruptFlag = "TWI Interrupt Flag"
                        case TWIEnableAcknowledgeBit = "TWI Enable Acknowledge Bit"
                        case TWIStartConditionBit = "TWI Start Condition Bit"
                        case TWIStopConditionBit = "TWI Stop Condition Bit"
                        case TWIWriteCollitionFlag = "TWI Write Collition Flag"
                        case TWIEnableBit = "TWI Enable Bit"
                        case TWIInterruptEnable = "TWI Interrupt Enable"
                        case TWIStatus = "TWI Status"
                        case TWIPrescaler = "TWI Prescaler"
                        case TWISlaveAddressregisterBits = "TWI (Slave) Address register Bits"
                        case TWIGeneralCallRecognitionEnableBit = "TWI General Call Recognition Enable Bit"
                        case USARTReceiveComplete = "USART Receive Complete"
                        case USARTTransmittComplete = "USART Transmitt Complete"
                        case USARTDataRegisterEmpty = "USART Data Register Empty"
                        case FramingError = "Framing Error"
                        case DataoverRun = "Data overRun"
                        case ParityError = "Parity Error"
                        case DoubletheUSARTtransmissionspeed = "Double the USART transmission speed"
                        case MultiprocessorCommunicationMode = "Multi-processor Communication Mode"
                        case RXCompleteInterruptEnable = "RX Complete Interrupt Enable"
                        case TXCompleteInterruptEnable = "TX Complete Interrupt Enable"
                        case USARTDataregisterEmptyInterruptEnable = "USART Data register Empty Interrupt Enable"
                        case ReceiverEnable = "Receiver Enable"
                        case TransmitterEnable = "Transmitter Enable"
                        case CharacterSize = "Character Size"
                        case ReceiveDataBit8 = "Receive Data Bit 8"
                        case TransmitDataBit8 = "Transmit Data Bit 8"
                        case USARTModeSelect = "USART Mode Select"
                        case ParityModeBits = "Parity Mode Bits"
                        case StopBitSelect = "Stop Bit Select"
                        case ClockPolarity = "Clock Polarity"
                        case GlobalInterruptEnable = "Global Interrupt Enable"
                        case BitCopyStorage = "Bit Copy Storage"
                        case HalfCarryFlag = "Half Carry Flag"
                        case SignBit = "Sign Bit"
                        case TwosComplementOverflowFlag = "Two's Complement Overflow Flag"
                        case NegativeFlag = "Negative Flag"
                        case ZeroFlag = "Zero Flag"
                        case CarryFlag = "Carry Flag"
                        case Pullupdisable = "Pull-up disable"
                        case InterruptVectorSelect = "Interrupt Vector Select"
                        case InterruptVectorChangeEnable = "Interrupt Vector Change Enable"
                        case WatchdogResetFlag = "Watchdog Reset Flag"
                        case BrownoutResetFlag = "Brown-out Reset Flag"
                        case ExternalResetFlag = "External Reset Flag"
                        case Poweronresetflag = "Power-on reset flag"
                        case ExternalSRAMEnable = "External SRAM Enable"
                        case Waitstatepagelimit = "Wait state page limit"
                        case Waitstateselectbitupperpage = "Wait state select bit upper page"
                        case Waitstateselectbitlowerpage = "Wait state select bit lower page"
                        case ExternalMemoryBusKeeperEnable = "External Memory Bus Keeper Enable"
                        case ExternalMemoryHighMask = "External Memory High Mask"
                        case OscillatorCalibration = "Oscillator Calibration"
                        case OscillatorCalibration2 = "Oscillator Calibration "
                        case SleepModeSelectbits = "Sleep Mode Select bits"
                        case SleepEnable = "Sleep Enable"
                        case RAMPageZSelectRegisterBit0 = "RAM Page Z Select Register Bit 0"
                        case GeneralPurposeIORegister2bis = "General Purpose IO Register 2 bis"
                        case GeneralPurposeIORegister1bis = "General Purpose IO Register 1 bis"
                        case GeneralPurposeIORegister0bit7 = "General Purpose IO Register 0 bit 7"
                        case GeneralPurposeIORegister0bit6 = "General Purpose IO Register 0 bit 6"
                        case GeneralPurposeIORegister0bit5 = "General Purpose IO Register 0 bit 5"
                        case GeneralPurposeIORegister0bit4 = "General Purpose IO Register 0 bit 4"
                        case GeneralPurposeIORegister0bit3 = "General Purpose IO Register 0 bit 3"
                        case GeneralPurposeIORegister0bit2 = "General Purpose IO Register 0 bit 2"
                        case GeneralPurposeIORegister0bit1 = "General Purpose IO Register 0 bit 1"
                        case GeneralPurposeIORegister0bit0 = "General Purpose IO Register 0 bit 0"
                        case SPMInterruptEnable = "SPM Interrupt Enable"
                        case ReadWhileWriteSectionBusy = "Read While Write Section Busy"
                        case ReadWhileWriteSectionBusy2 = "Read-While-Write Section Busy" // Duplicate
                        case ReadWhileWriteSectionReadEnable = "Read-While-Write Section Read Enable"
                        case ReadWhileWritesectionreadenable2 = "Read While Write section read enable" // Duplicate
                        case ReadWhileWritesectionreadenable3 = "Read-While-Write section read enable" // Duplicate
                        case ReadWhileWriteSectionReadEnable4 = "Read While Write Section Read Enable" // Duplicate
                        case BootLockBitSet = "Boot Lock Bit Set"
                        case PageWrite = "Page Write"
                        case PageErase = "Page Erase"
                        case StoreProgramMemoryEnable = "Store Program Memory Enable"
                        case ExternalInterruptSenseControlBit = "External Interrupt Sense Control Bit"
                        case ExternalInterrupt74SenseControlBit = "External Interrupt 7-4 Sense Control Bit"
                        case ExternalInterruptRequest7Enable = "External Interrupt Request 7 Enable"
                        case ExternalInterruptFlags = "External Interrupt Flags"
                        case EEPROMAddressbits = "EEPROM Address bits"
                        case EEPROMDatabits = "EEPROM Data bits"
                        case EEPROMReadyInterruptEnable = "EEPROM Ready Interrupt Enable"
                        case EEPROMMasterWriteEnable = "EEPROM Master Write Enable"
                        case EEPROMWriteEnable = "EEPROM Write Enable"
                        case EEPROMReadEnable = "EEPROM Read Enable"
                        case ForceOutputCompare = "Force Output Compare"
                        case WaveformGenerationMode0 = "Waveform Generation Mode 0"
                        case CompareMatchOutputModes = "Compare Match Output Modes"
                        case WaveformGenerationMode1 = "Waveform Generation Mode 1"
                        case ClockSelects = "Clock Selects"
                        case OutputCompareAbits = "Output Compare A bits"
                        case TimerCounter0OutputCompareMatchInterruptEnable = "Timer/Counter0 Output Compare Match Interrupt Enable"
                        case TimerCounter0OverflowInterruptEnable = "Timer/Counter0 Overflow Interrupt Enable"
                        case TimerCounter0OutputCompareFlag0 = "Timer/Counter0 Output Compare Flag 0"
                        case TimerCounter0OverflowFlag = "Timer/Counter0 Overflow Flag"
                        case TimerCounterSynchronizationMode = "Timer/Counter Synchronization Mode"
                        case PrescalerResetTimerCounter1andTimerCounter0 = "Prescaler Reset Timer/Counter1 and Timer/Counter0"
                        case PrescalerResetTimerCounter1andTimerCounter02 = "Prescaler Reset Timer / Counter 1 and Timer / Counter 0"
                        case CompareOutputMode1Abits = "Compare Output Mode 1A, bits"
                        case CompareOutputMode1Bbits = "Compare Output Mode 1B, bits"
                        case CompareOutputMode1Cbits = "Compare Output Mode 1C, bits"
                        case WaveformGenerationMode = "Waveform Generation Mode"
                        case InputCapture1NoiseCanceler = "Input Capture 1 Noise Canceler"
                        case InputCapture1EdgeSelect = "Input Capture 1 Edge Select"
                        case PrescalersourceofTimerCounter1 = "Prescaler source of Timer/Counter 1"
                        case ForceOutputCompare1A = "Force Output Compare 1A"
                        case ForceOutputCompare1B = "Force Output Compare 1B"
                        case ForceOutputCompare1C = "Force Output Compare 1C"
                        case TimerCounter1InputCaptureInterruptEnable = "Timer/Counter1 Input Capture Interrupt Enable"
                        case TimerCounter1OutputCompareCMatchInterruptEnable = "Timer/Counter1 Output Compare C Match Interrupt Enable"
                        case TimerCounter1OutputCompareCMatchInterruptEnable2 = "Timer/Counter1 Output CompareC Match Interrupt Enable" // Duplicate
                        case TimerCounter1OutputCompareBMatchInterruptEnable = "Timer/Counter1 Output Compare B Match Interrupt Enable"
                        case TimerCounter1OutputCompareBMatchInterruptEnable2 = "Timer/Counter1 Output CompareB Match Interrupt Enable" // Duplicate
                        case TimerCounter1OutputCompareAMatchInterruptEnable = "Timer/Counter1 Output Compare A Match Interrupt Enable"
                        case TimerCounter1OutputCompareAMatchInterruptEnable2 = "Timer/Counter1 Output CompareA Match Interrupt Enable" // Duplicate
                        case TimerCounter1OverflowInterruptEnable = "Timer/Counter1 Overflow Interrupt Enable"
                        case InputCaptureFlag1 = "Input Capture Flag 1"
                        case OutputCompareFlag1C = "Output Compare Flag 1C"
                        case OutputCompareFlag1B = "Output Compare Flag 1B"
                        case OutputCompareFlag1A = "Output Compare Flag 1A"
                        case TimerCounter1OverflowFlag = "Timer/Counter1 Overflow Flag"
                        case CompareOutputMode3Abits = "Compare Output Mode 3A, bits"
                        case CompareOutputMode3Bbits = "Compare Output Mode 3B, bits"
                        case CompareOutputMode3Cbits = "Compare Output Mode 3C, bits"
                        case InputCapture3NoiseCanceler = "Input Capture 3 Noise Canceler"
                        case InputCapture3NoiseCancelerw = "Input Capture 3  Noise Canceler" // Duplicate
                        case InputCapture3EdgeSelect = "Input Capture 3 Edge Select"
                        case PrescalersourceofTimerCounter3 = "Prescaler source of Timer/Counter 3"
                        case ForceOutputCompare3A = "Force Output Compare 3A"
                        case ForceOutputCompare3B = "Force Output Compare 3B"
                        case ForceOutputCompare3C = "Force Output Compare 3C"
                        case TimerCounter3InputCaptureInterruptEnable = "Timer/Counter3 Input Capture Interrupt Enable"
                        case TimerCounter3OutputCompareCMatchInterruptEnable = "Timer/Counter3 Output Compare C Match Interrupt Enable"
                        case TimerCounter3OutputCompareCMatchInterruptEnable2 = "Timer/Counter3 Output CompareC Match Interrupt Enable"  // Duplicate
                        case TimerCounter3OutputCompareBMatchInterruptEnable = "Timer/Counter3 Output Compare B Match Interrupt Enable"
                        case TimerCounter3OutputCompareBMatchInterruptEnable2 = "Timer/Counter3 Output CompareB Match Interrupt Enable"
                        case TimerCounter3OutputCompareAMatchInterruptEnable = "Timer/Counter3 Output Compare A Match Interrupt Enable"
                        case TimerCounter3OutputCompareAMatchInterruptEnable2 = "Timer/Counter3 Output CompareA Match Interrupt Enable"  // Duplicate
                        case TimerCounter3OverflowInterruptEnable = "Timer/Counter3 Overflow Interrupt Enable"
                        case InputCaptureFlag3 = "Input Capture Flag 3"
                        case OutputCompareFlag3C = "Output Compare Flag 3C"
                        case OutputCompareFlag3B = "Output Compare Flag 3B"
                        case OutputCompareFlag3A = "Output Compare Flag 3A"
                        case TimerCounter3OverflowFlag = "Timer/Counter3 Overflow Flag"
                        case WaveformGenrationMode = "Waveform Genration Mode"
                        case CompareOutputModebits = "Compare Output Mode bits"
                        case ClockSelectbits = "Clock Select bits"
                        case TimerCounter2OutputCompareMatchInterruptEnable = "Timer/Counter2 Output Compare Match Interrupt Enable"
                        case TimerCounter2OverflowInterruptEnable = "Timer/Counter2 Overflow Interrupt Enable"
                        case OutputCompareFlag2 = "Output Compare Flag 2"
                        case TimerCounter2OverflowFlag = "Timer/Counter2 Overflow Flag"
                        case PrescalerResetTimerCounter2 = "Prescaler Reset Timer/Counter2"
                        case EnableExternalClockInterrupt = "Enable External Clock Interrupt"
                        case AS2AsynchronousTimerCounter2 = "AS2: Asynchronous Timer/Counter2"
                        case TCN2UBTimerCounter2UpdateBusy = "TCN2UB: Timer/Counter2 Update Busy"
                        case OutputCompareRegister2UpdateBusy = "Output Compare Register 2 Update Busy"
                        case OutputCompareRegister2UpdateBusy2 = "Output Compare Register2 Update Busy" // Duplicate
                        case TCR2UBTimerCounterControlRegister2UpdateBusy = "TCR2UB: Timer/Counter Control Register2 Update Busy"
                        case WatchdogChangeEnable = "Watchdog Change Enable"
                        case WatchDogEnable = "Watch Dog Enable"
                        case WatchDogTimerPrescalerbits = "Watch Dog Timer Prescaler bits"
                        case ReferenceSelectionBits = "Reference Selection Bits"
                        case LeftAdjustResult = "Left Adjust Result"
                        case AnalogChannelandGainSelectionBits = "Analog Channel and Gain Selection Bits"
                        case ADCEnable = "ADC Enable"
                        case ADCStartConversion = "ADC Start Conversion"
                        case ADCAutoTriggerEnable = "ADC Auto Trigger Enable"
                        case ADCAutoTriggerEnable2 = "ADC  Auto Trigger Enable" // Duplicate
                        case ADCInterruptFlag = "ADC Interrupt Flag"
                        case ADCInterruptEnable = "ADC Interrupt Enable"
                        case ADCPrescalerSelectBits = "ADC Prescaler Select Bits"
                        case ADCPrescalerSelectBits2 = "ADC  Prescaler Select Bits" // Duplicate
                        case ADCHighSpeedMode = "ADC High Speed Mode"
                        case ADCAutoTriggerSources = "ADC Auto Trigger Sources"
                        case ADC7DigitalinputDisable = "ADC7 Digital input Disable"
                        case ADC6DigitalinputDisable = "ADC6 Digital input Disable"
                        case ADC5DigitalinputDisable = "ADC5 Digital input Disable"
                        case ADC4DigitalinputDisable = "ADC4 Digital input Disable"
                        case ADC3DigitalinputDisable = "ADC3 Digital input Disable"
                        case ADC2DigitalinputDisable = "ADC2 Digital input Disable"
                        case ADC1DigitalinputDisable = "ADC1 Digital input Disable"
                        case ADC0DigitalinputDisable = "ADC0 Digital input Disable"
                        case AnalogComparatorMultiplexerEnable = "Analog Comparator Multiplexer Enable"
                        case AnalogComparatorDisable = "Analog Comparator Disable"
                        case AnalogComparatorBandgapSelect = "Analog Comparator Bandgap Select"
                        case AnalogCompareOutput = "Analog Compare Output"
                        case AnalogComparatorInterruptFlag = "Analog Comparator Interrupt Flag"
                        case AnalogComparatorInterruptEnable = "Analog Comparator Interrupt Enable"
                        case AnalogComparatorInputCaptureEnable = "Analog Comparator Input Capture Enable"
                        case AnalogComparatorInterruptModeSelectbits = "Analog Comparator Interrupt Mode Select bits"
                        case AIN1DigitalInputDisable = "AIN1 Digital Input Disable"
                        case AIN0DigitalInputDisable = "AIN0 Digital Input Disable"
                        case AbortRequest = "Abort Request"
                        case OverloadFrameRequest = "Overload Frame Request"
                        case TimeTriggerCommunication = "Time Trigger Communication"
                        case SynchronizationofTTC = "Synchronization of TTC"
                        case ListeningMode = "Listening Mode"
                        case TestMode = "Test Mode"
                        case EnableStandby = "Enable / Standby"
                        case SoftwareResetRequest = "Software Reset Request"
                        case OverloadFrameFlag = "Overload Frame Flag"
                        case TransmitterBusy = "Transmitter Busy"
                        case ReceiverBusy = "Receiver Busy"
                        case EnableFlag = "Enable Flag"
                        case BusOffMode = "Bus Off Mode"
                        case ErrorPassiveMode = "Error Passive Mode"
                        case GeneralInterruptFlag = "General Interrupt Flag"
                        case BusOffInterruptFlag = "Bus Off Interrupt Flag"
                        case OverrunCANTimer = "Overrun CAN Timer"
                        case BurstReceiveInterrupt = "Burst Receive Interrupt"
                        case StuffErrorGeneral = "Stuff Error General"
                        case CRCErrorGeneral = "CRC Error General"
                        case FormErrorGeneral = "Form Error General"
                        case AckknowledgementErrorGeneral = "Ackknowledgement Error General"
                        case EnableallInterrupts = "Enable all Interrupts"
                        case EnableBusOffINterrupt = "Enable Bus Off INterrupt"
                        case EnableReceiveInterrupt = "Enable Receive Interrupt"
                        case EnableTransmittInterrupt = "Enable Transmitt Interrupt"
                        case EnableMObErrorInterrupt = "Enable MOb Error Interrupt"
                        case EnableBurstReceiveInterrupt = "Enable Burst Receive Interrupt"
                        case EnableGeneralErrorInterrupt = "Enable General Error Interrupt"
                        case EnableCANTimerOverrunInterrupt = "Enable CAN Timer Overrun Interrupt"
                        case EnableMOb = "Enable MOb"
                        case InterruptEnablebyMOb = "Interrupt Enable by MOb"
                        case StatusofInterruptbyMOb = "Status of Interrupt by MOb"
                        case BaudRatePrescalerbits = "Baud Rate Prescaler bits"
                        case ReSyncJumpWidth = "Re-Sync Jump Width"
                        case PropagationTimeSegment = "Propagation Time Segment"
                        case PhaseSegments = "Phase Segments"
                        case PhaseSegment1 = "Phase Segment 1"
                        case SampleType = "Sample Type"
                        case CANTimerPrescaler = "CAN Timer Prescaler"
                        case CANTimerCount = "CAN Timer Count"
                        case TTCTimerCount = "TTC Timer Count"
                        case TrasnmitErrorCount = "Trasnmit Error Count"
                        case ReceiveErrorCount = "Receive Error Count"
                        case HighestPriorityMObnumber = "Highest Priority MOb number"
                        case CANGeneralpurposebits = "CAN General purpose bits"
                        case MObNumberBits = "MOb Number Bits"
                        case MObDataBufferAutoIncrement = "MOb Data Buffer Auto Increment"
                        case DataBufferIndexBits = "Data Buffer Index Bits"
                        case DataLengthCodeWarning = "Data Length Code Warning"
                        case TransmitOK = "Transmit OK"
                        case ReceiveOK = "Receive OK"
                        case BitError = "Bit Error"
                        case StuffError = "Stuff Error"
                        case CRCError = "CRC Error"
                        case FormError = "Form Error"
                        case AckknowledgementError = "Ackknowledgement Error"
                        case MObConfigBits = "MOb Config Bits"
                        case ReplyValid = "Reply Valid"
                        case IdentifierExtension = "Identifier Extension"
                        case DataLengthCodeBits = "Data Length Code Bits"
                        case IdentifierTag = "Identifier Tag"
                        case RemoteTrasnmissionRequestTag = "Remote Trasnmission Request Tag"
                        case ReservedBit1Tag = "Reserved Bit 1 Tag"
                        case ReservedBit0Tag = "Reserved Bit 0 Tag"
                        case IdentifierMask = "Identifier Mask"
                        case RemoteTransmissionRequestMask = "Remote Transmission Request Mask"
                        case IdentifierExtensionMask = "Identifier Extension Mask"
                        case TimeStampCount = "Time Stamp Count"
                        case MessageData = "Message Data"
                        case PSC2ResetBehavior = "PSC2 Reset Behavior"
                        case PSC0ResetBehavior = "PSC0 Reset Behavior"
                        case PSCOUTResetValue = "PSCOUT Reset Value"
                        case SelectResetVector = "Select Reset Vector"
                        case ResetDisabledEnablePC6asiopin = "Reset Disabled (Enable PC6 as i/o pin)"
                        case ResetDisabledEnablePC6asiopin2 = "Reset Disabled (Enable PC6 as i/o pin)]"
                        case DebugWireenable = "Debug Wire enable"
                        case WatchdogTimeralwayson = "Watchdog Timer always on"
                        case WatchdogTimeralwayson2 = "Watch-dog Timer always on" // Duplicate
                        case BrownoutDetectorTriggerLevel = "Brown-out Detector Trigger Level"
                        case Divideclockby8internally = "Divide clock by 8 internally"
                        case ClockoutputonPORTB0 = "Clock output on PORTB0"
                        case PSC0CaptureSoftwareTrigbit = "PSC 0 Capture Software Trig bit"
                        case PSC0CaptureRegister = "PSC 0 Capture Register"
                        case PSC0CaptureEnableInputPartB = "PSC 0 Capture Enable Input Part B"
                        case PSC0InputSelectforPartB = "PSC 0 Input Select for Part B"
                        case PSC0EdgeLevelSelectoronInputPartB = "PSC 0 Edge Level Selector on Input Part B"
                        case PSC0FilterEnableonInputPartB = "PSC 0 Filter Enable on Input Part B"
                        case PSC0RetriggerandFaultModeforPartB = "PSC 0 Retrigger and Fault Mode for Part B"
                        case PSC0CaptureEnableInputPartA = "PSC 0 Capture Enable Input Part A"
                        case PSC0InputSelectforPartA = "PSC 0 Input Select for Part A"
                        case PSC0EdgeLevelSelectoronInputPartA = "PSC 0 Edge Level Selector on Input Part A"
                        case PSC0FilterEnableonInputPartA = "PSC 0 Filter Enable on Input Part A"
                        case PSC0RetriggerandFaultModeforPartA = "PSC 0 Retrigger and Fault Mode for Part A"
                        case PSC0PrescalerSelects = "PSC 0 Prescaler Selects"
                        case PSC0BalanceFlankWidthModulation = "PSC 0 Balance Flank Width Modulation"
                        case PSC0AsynchronousOutputControlB = "PSC 0 Asynchronous Output Control B"
                        case PSC0AsynchronousOutputControlA = "PSC 0 Asynchronous Output Control A"
                        case PSC0AutoRun = "PSC0 Auto Run"
                        case PSC0CompleteCycle = "PSC0 Complete Cycle"
                        case PSC0Run = "PSC 0 Run"
                        case PSC0Fifty = "PSC 0 Fifty"
                        case PSC0Autolock = "PSC 0 Autolock"
                        case PSC0Lock = "PSC 0 Lock"
                        case PSC0Mode = "PSC 0 Mode"
                        case PSC0OutputPolarity = "PSC 0 Output Polarity"
                        case PSC0InputClockSelect = "PSC 0 Input Clock Select"
                        case SynchronizationOutforADCSelection = "Synchronization Out for ADC Selection"
                        case PSCOUT01OutputEnable = "PSCOUT01 Output Enable"
                        case PSCOUT00OutputEnable = "PSCOUT00 Output Enable"
                        case PSC0SynchroErrorInterruptEnable = "PSC 0 Synchro Error Interrupt Enable"
                        case ExternalEventBInterruptEnable = "External Event B Interrupt Enable"
                        case ExternalEventAInterruptEnable = "External Event A Interrupt Enable"
                        case EndofCycleInterruptEnable = "End of Cycle Interrupt Enable"
                        case PSC0SynchroErrorInterrupt = "PSC 0 Synchro Error Interrupt"
                        case ExternalEventBInterrupt = "External Event B Interrupt"
                        case ExternalEventAInterrupt = "External Event A Interrupt"
                        case RampNumber = "Ramp Number"
                        case EndofPSC0Interrupt = "End of PSC0 Interrupt"
                        case PSC2CaptureSoftwareTrigbit = "PSC 2 Capture Software Trig bit"
                        case PSC2InputCaptureRegister = "PSC 2 Input Capture Register"
                        case PSC2CaptureEnableInputPartB = "PSC 2 Capture Enable Input Part B"
                        case PSC2InputSelectforPartB = "PSC 2 Input Select for Part B"
                        case PSC2EdgeLevelSelectoronInputPartB = "PSC 2 Edge Level Selector on Input Part B"
                        case PSC2FilterEnableonInputPartB = "PSC 2 Filter Enable on Input Part B"
                        case PSC2RetriggerandFaultModeforPartB = "PSC 2 Retrigger and Fault Mode for Part B"
                        case PSC2CaptureEnableInputPartA = "PSC 2 Capture Enable Input Part A"
                        case PSC2InputSelectforPartA = "PSC 2 Input Select for Part A"
                        case PSC2EdgeLevelSelectoronInputPartA = "PSC 2 Edge Level Selector on Input Part A"
                        case PSC2FilterEnableonInputPartA = "PSC 2 Filter Enable on Input Part A"
                        case PSC2RetriggerandFaultModeforPartA = "PSC 2 Retrigger and Fault Mode for Part A"
                        case PSC2PrescalerSelects = "PSC 2 Prescaler Selects"
                        case BalanceFlankWidthModulation = "Balance Flank Width Modulation"
                        case PSC2AsynchronousOutputControlB = "PSC 2 Asynchronous Output Control B"
                        case PSC2AsynchronousOutputControlA = "PSC 2 Asynchronous Output Control A"
                        case PSC2AutoRun = "PSC2 Auto Run"
                        case PSC2CompleteCycle = "PSC2 Complete Cycle"
                        case PSC2Run = "PSC 2 Run"
                        case PSC2Fifty = "PSC 2 Fifty"
                        case PSC2Autolock = "PSC 2 Autolock"
                        case PSC2Lock = "PSC 2 Lock"
                        case PSC2Mode = "PSC 2 Mode"
                        case PSC2OutputPolarity = "PSC 2 Output Polarity"
                        case PSC2InputClockSelect = "PSC 2 Input Clock Select"
                        case PSC2OutputMatrixEnable = "PSC 2 Output Matrix Enable"
                        case OutputMatrixOutputBRamps = "Output Matrix Output B Ramps"
                        case OutputMatrixOutputARamps = "Output Matrix Output A Ramps"
                        case PSC2Output23Select = "PSC 2 Output 23 Select"
                        case PSCOUT23OutputEnable = "PSCOUT23 Output Enable"
                        case PSCOUT21OutputEnable = "PSCOUT21 Output Enable"
                        case PSCOUT22OutputEnable = "PSCOUT22 Output Enable"
                        case PSCOUT20OutputEnable = "PSCOUT20 Output Enable"
                        case PSC2SynchroErrorInterruptEnable = "PSC 2 Synchro Error Interrupt Enable"
                        case PSC2SynchroErrorInterrupt = "PSC 2 Synchro Error Interrupt"
                        case EndofPSC2Interrupt = "End of PSC2 Interrupt"
                        case PSC1CaptureEnableInputPartB = "PSC 1 Capture Enable Input Part B"
                        case PSC1InputSelectforPartB = "PSC 1 Input Select for Part B"
                        case PSC1EdgeLevelSelectoronInputPartB = "PSC 1 Edge Level Selector on Input Part B"
                        case PSC1FilterEnableonInputPartB = "PSC 1 Filter Enable on Input Part B"
                        case PSC1RetriggerandFaultModeforPartB = "PSC 1 Retrigger and Fault Mode for Part B"
                        case PSC1CaptureEnableInputPartA = "PSC 1 Capture Enable Input Part A"
                        case PSC1InputSelectforPartA = "PSC 1 Input Select for Part A"
                        case PSC1EdgeLevelSelectoronInputPartA = "PSC 1 Edge Level Selector on Input Part A"
                        case PSC1FilterEnableonInputPartA = "PSC 1 Filter Enable on Input Part A"
                        case PSC1RetriggerandFaultModeforPartA = "PSC 1 Retrigger and Fault Mode for Part A"
                        case PSC1PrescalerSelects = "PSC 1 Prescaler Selects"
                        case PSC1AsynchronousOutputControlB = "PSC 1 Asynchronous Output Control B"
                        case PSC1AsynchronousOutputControlA = "PSC 1 Asynchronous Output Control A"
                        case PSC1AutoRun = "PSC1 Auto Run"
                        case PSC1CompleteCycle = "PSC1 Complete Cycle"
                        case PSC1Run = "PSC 1 Run"
                        case PSCOUT11OutputEnable = "PSCOUT11 Output Enable"
                        case PSCOUT10OutputEnable = "PSCOUT10 Output Enable"
                        case SPIPinSelect = "SPI Pin Select"
                        case GeneralPurposeIORegister3bis = "General Purpose IO Register 3 bis"
                        case PLLFactor = "PLL Factor"
                        case PLLEnable = "PLL Enable"
                        case PLLLockDetector = "PLL Lock Detector"
                        case PowerReductionPSC2 = "Power Reduction PSC2"
                        case PowerReductionPSC1 = "Power Reduction PSC1"
                        case PowerReductionPSC0 = "Power Reduction PSC0"
                        case PowerReductionTimerCounter1 = "Power Reduction Timer/Counter1"
                        case PowerReductionTimerCounter0 = "Power Reduction Timer/Counter0"
                        case PowerReductionSerialPeripheralInterface = "Power Reduction Serial Peripheral Interface"
                        case PowerReductionUSART = "Power Reduction USART"
                        case PowerReductionADC = "Power Reduction ADC"
                        case TimerCounter0OutputCompareMatchBInterruptEnable = "Timer/Counter0 Output Compare Match B Interrupt Enable"
                        case TimerCounter0OutputCompareMatchAInterruptEnable = "Timer/Counter0 Output Compare Match A Interrupt Enable"
                        case TimerCounter0OutputCompareFlag0B = "Timer/Counter0 Output Compare Flag 0B"
                        case TimerCounter0OutputCompareFlag0A = "Timer/Counter0 Output Compare Flag 0A"
                        case CompareOutputModePhaseCorrectPWMMode = "Compare Output Mode, Phase Correct PWM Mode"
                        case CompareOutputModeFastPWm = "Compare Output Mode, Fast PWm"
                        case ForceOutputCompareA = "Force Output Compare A"
                        case ForceOutputCompareB = "Force Output Compare B"
                        case ClockSelect = "Clock Select"
                        case TimerCounter0value = "Timer Counter 0 value"
                        case OutputCompareAvalue = "Output Compare A value"
                        case OutputCompareBvalue = "Output Compare B value"
                        case Timer1InputCaptureSelectionBit = "Timer1 Input Capture Selection Bit"
                        case TimerCounter1 = "Timer/Counter1"
                        case TimerCounter1OutputCompareARegister = "Timer/Counter1 Output Compare A Register"
                        case TimerCounter1OutputCompareBRegister = "Timer/Counter1 Output Compare B Register"
                        case TimerCounterInputCapture = "Timer/Counter Input Capture"
                        case ADCAutoTriggerSourceSelection3 = "ADC Auto Trigger Source Selection 3"
                        case ADCAutoTriggerSourceSelection2 = "ADC Auto Trigger Source Selection 2"
                        case ADCAutoTriggerSourceSelection1 = "ADC Auto Trigger Source Selection 1"
                        case ADCAutoTriggerSourceSelection0 = "ADC Auto Trigger Source Selection 0"
                        case SPIData = "SPI Data"
                        case WatchdogTimeoutInterruptFlag = "Watchdog Timeout Interrupt Flag"
                        case WatchdogTimeoutInterruptEnable = "Watchdog Timeout Interrupt Enable"
                        case WatchdogTimerPrescalerBits = "Watchdog Timer Prescaler Bits"
                        case ExternalInterruptMask = "External Interrupt Mask"
                        case EEPROMAddressbytes = "EEPROM Address bytes"
                        case EEPROMDataBits = "EEPROM Data Bits"
                        case EEPROMProgrammingMode = "EEPROM Programming Mode"
                        case AnalogComparator0EnableBit = "Analog Comparator 0 Enable Bit"
                        case AnalogComparator0InterruptEnableBit = "Analog Comparator 0 Interrupt Enable Bit"
                        case AnalogComparator0InterruptSelectBit = "Analog Comparator 0  Interrupt Select Bit"
                        case AnalogComparator0MultiplexerRegister = "Analog Comparator 0 Multiplexer Register"
                        case AnalogComparator2EnableBit = "Analog Comparator 2 Enable Bit"
                        case AnalogComparator2InterruptEnableBit = "Analog Comparator 2 Interrupt Enable Bit"
                        case AnalogComparator2InterruptSelectBit = "Analog Comparator 2  Interrupt Select Bit"
                        case AnalogComparator2MultiplexerRegister = "Analog Comparator 2 Multiplexer Register"
                        case AnalogComparatorClockDivider = "Analog Comparator Clock Divider"
                        case AnalogComparator2InterruptFlagBit = "Analog Comparator 2 Interrupt Flag Bit"
                        case AnalogComparator1InterruptFlagBit = "Analog Comparator 1  Interrupt Flag Bit"
                        case AnalogComparator0InterruptFlagBit = "Analog Comparator 0 Interrupt Flag Bit"
                        case AnalogComparator2OutputBit = "Analog Comparator 2 Output Bit"
                        case AnalogComparator1OutputBit = "Analog Comparator 1 Output Bit"
                        case AnalogComparator0OutputBit = "Analog Comparator 0 Output Bit"
                        case PSC1ResetBehavior = "PSC1 Reset Behavior"
                        case EUSARTExtendeddatabits = "EUSART Extended data bits"
                        case EUSARTControlandStatusRegisterABits = "EUSART Control and Status Register A Bits"
                        case EUSARTEnableBit = "EUSART Enable Bit"
                        case EUSBSEnableBit = "EUSBS Enable Bit"
                        case ManchesterModeBit = "Manchester Mode Bit"
                        case OrderBit = "Order Bit"
                        case FrameErrorManchesterBit = "Frame Error Manchester Bit"
                        case F1617Bit = "F1617 Bit"
                        case StopBits = "Stop Bits"
                        case ManchesterReceiverBaudRateRegisterBits = "Manchester Receiver Baud Rate Register Bits"
                        case AnalogComparator1EnableBit = "Analog Comparator 1 Enable Bit"
                        case AnalogComparator1InterruptEnableBit = "Analog Comparator 1 Interrupt Enable Bit"
                        case AnalogComparator1InterruptSelectBit = "Analog Comparator 1  Interrupt Select Bit"
                        case AnalogComparator1InterruptCaptureEnableBit = "Analog Comparator 1 Interrupt Capture Enable Bit"
                        case AnalogComparator1MultiplexerRegister = "Analog Comparator 1 Multiplexer Register"
                        case DACDataRegisterBits = "DAC Data Register Bits"
                        case DACAutoTriggerEnableBit = "DAC Auto Trigger Enable Bit"
                        case DACTriggerSelectionBits = "DAC Trigger Selection Bits"
                        case DACLeftAdjust = "DAC Left Adjust"
                        case DACOutputEnable = "DAC Output Enable"
                        case DACEnableBit = "DAC Enable Bit"
                        case TimerCounter0OutputCompareA = "Timer/Counter0 Output Compare A"
                        case TimerCounter0OutputCompareB = "Timer/Counter0 Output Compare B"
                        case TimerCounter1InputCapture = "Timer/Counter1 Input Capture"
                        case ADCDataRegister = "ADC Data Register"
                        case ADCAutoTriggerSource = "ADC Auto Trigger Source"
                        case USARTIOData = "USART I/O Data"
                        case DataOverrun = "Data Overrun"
                        case USARTParityError = "USART Parity Error"
                        case DoubleUSARTTransmissionBit = "Double USART Transmission Bit"
                        case USARTDataRegisterEmptyInterruptEnable = "USART Data Register Empty Interrupt Enable"
                        case CharacterSizeBits = "Character Size Bits"
                        case USARTBaudRateRegisterBits = "USART Baud Rate Register Bits"
                        case SPIDatabits = "SPI Data bits"
                        case ExternalInterruptRequestEnable = "External Interrupt Request Enable"
                        case PSC0InputCaptureSoftwareTrig = "PSC 0 Input Capture Software Trig"
                        case PSC0InputCaptureBytes = "PSC 0 Input Capture Bytes"
                        case OutputCompareRB = "Output Compare RB"
                        case OutputCompareSB = "Output Compare SB"
                        case OutputCompareRA = "Output Compare RA"
                        case OutputCompareSA = "Output Compare SA"
                        case PSC0OutputAActivity = "PSC 0 Output A Activity"
                        case PSC2InputCaptureSoftwareTrig = "PSC 2 Input Capture Software Trig"
                        case PSC2InputCaptureBytes = "PSC 2 Input Capture Bytes"
                        case PSC2OutputAActivity = "PSC 2 Output A Activity"
                        case TimerCounter1OuputCaptureA = "Timer/Counter1 Ouput Capture A"
                        case TimerCounter1OuputCaptureB = "Timer/Counter1 Ouput Capture B"
                        case AmplifiedChannelStartConversion = "Amplified Channel Start Conversion"
                        case PSC1Fifty = "PSC 1 Fifty"
                        case PSC1Autolock = "PSC 1 Autolock"
                        case PSC1Lock = "PSC 1 Lock"
                        case PSC1Mode = "PSC 1 Mode"
                        case PSC1OutputPolarity = "PSC 1 Output Polarity"
                        case PSC1InputClockSelect = "PSC 1 Input Clock Select"
                        case PSC1SynchroErrorInterruptEnable = "PSC 1 Synchro Error Interrupt Enable"
                        case PSC1SynchroErrorInterrupt = "PSC 1 Synchro Error Interrupt"
                        case EndofPSC1Interrupt = "End of PSC1 Interrupt"
                        case TimerCounter1OutputCompareA = "Timer/Counter1 Output Compare A"
                        case TimerCounter1OutputCompareB = "Timer/Counter1 Output Compare B"
                        case PSC1InputCaptureSoftwareTrig = "PSC 1 Input Capture Software Trig"
                        case PSC1InputCaptureBytes = "PSC 1 Input Capture Bytes"
                        case OutputCompare1RB = "Output Compare 1 RB"
                        case OutputCompare1SB = "Output Compare 1 SB"
                        case OutputCompare1RA = "Output Compare 1 RA"
                        case OutputCompare1SA = "Output Compare 1 SA"
                        case PSC1OutputBActivity = "PSC 1 Output B Activity"
                        case PSC1OutputAActivity = "PSC 1 Output A Activity"
                        case PSC2ResetBehaviorfor22and23 = "PSC2 Reset Behavior for 22 and 23"
                        case PSCResetValue = "PSC Reset Value"
                        case PSC2andPSC0inputResetBehavior = "PSC2 and PSC0 input Reset Behavior"
                        case ResetDisabledEnablePE0asIOpin = "Reset Disabled (Enable PE0 as I/O pin)"
                        case ClockoutputonPORTD1 = "Clock output on PORTD1"
                        case ExternalInterruptRequest2Enable = "External Interrupt Request 2 Enable"
                        case ADCNoiseCancellerDisable = "ADC Noise Canceller Disable"
                        case ADCSingleShotEnableonPSCsSynchronisationSignals = "ADC Single Shot Enable on PSC's Synchronisation Signals"
                        case ADC8DigitalinputDisable = "ADC8 Digital input Disable"
                        case ADC10DigitalinputDisable = "ADC10 Digital input Disable"
                        case ADC9DigitalinputDisable = "ADC9 Digital input Disable"
                        case AnalogComparator3EnableBit = "Analog Comparator 3 Enable Bit"
                        case AnalogComparator3EnableBit2 = "Analog Comparator3 Enable Bit" // Duplicate
                        case AnalogComparator3InterruptEnableBit = "Analog Comparator 3 Interrupt Enable Bit"
                        case AnalogComparator3InterruptSelectBit = "Analog Comparator 3  Interrupt Select Bit"
                        case AnalogComparator3AlternateOutputEnable = "Analog Comparator 3 Alternate Output Enable"
                        case AnalogComparator3MultiplexerRegister = "Analog Comparator 3 Multiplexer Register"
                        case AnalogComparator3InterruptFlagBit = "Analog Comparator 3 Interrupt Flag Bit"
                        case AnalogComparator3OutputBit = "Analog Comparator 3 Output Bit"
                        case AnalogComparatorOuputInvert = "Analog Comparator Ouput Invert"
                        case AnalogComparatorOuputEnable = "Analog Comparator Ouput Enable"
                        case AnalogComparatorHysteresisSelect = "Analog Comparator Hysteresis Select"
                        case AnalogComparatorInterruptCaptureEnable = "Analog Comparator Interrupt Capture Enable"
                        case ResetPinDisable = "Reset Pin Disable"
                        case FrequencySelectionoftheCalibratedRCOscillator = "Frequency Selection of the Calibrated RC Oscillator"
                        case ClockControlChangeEnable = "Clock Control Change Enable"
                        case ClockReadyFlag = "Clock Ready Flag"
                        case ClockControl = "Clock Control"
                        case ClockOUT = "Clock OUT"
                        case ClockStartupTime = "Clock Start up Time"
                        case ClockSourceSelect = "Clock Source Select"
                        case NoneVolatileBusyMemoryBusy = "None Volatile Busy Memory Busy"
                        case EEPROMPageAccess = "EEPROM Page Access"
                        case PSC0CaptureSoftwareTriggerBit = "PSC 0 Capture Software Trigger Bit"
                        case OutputCompare0RB = "Output Compare 0 RB"
                        case OutputCompare0SB = "Output Compare 0 SB"
                        case OutputCompare0RA = "Output Compare 0 RA"
                        case OutputCompare0SA = "Output Compare 0 SA"
                        case PSCInputSelect = "PSC Input Select"
                        case SynchronisationoutforADCselection = "Synchronisation out for ADC selection"
                        case EndofEnhancedCycleEnable = "End of Enhanced Cycle Enable"
                        case PSC2CaptureSoftwareTriggerBit = "PSC 2 Capture Software Trigger Bit"
                        case OutputCompare2RB = "Output Compare 2 RB"
                        case OutputCompare2SB = "Output Compare 2 SB"
                        case OutputCompare2RA = "Output Compare 2 RA"
                        case OutputCompare2SA = "Output Compare 2 SA"
                        case EndofEnhancedCycleInterruptEnable = "End of Enhanced Cycle Interrupt Enable"
                        case AnalogSynchronizationDelaybits = "Analog Synchronization Delay bits"
                        case TimerCounter1InputCapturebits = "Timer/Counter1 Input Capture bits"
                        case SignatureRowRead = "Signature Row Read"
                        case DACDataRegisterHighByteBits = "DAC Data Register High Byte Bits"
                        case DACDataRegisterLowByteBits = "DAC Data Register Low Byte Bits"
                        case USARTBaudRateRegisterbits = "USART Baud Rate Register bits"
                        case ExternalInterruptRequest3Enable = "External Interrupt Request 3 Enable"
                        case HardwareBootEnable = "Hardware Boot Enable"
                        case ClockoutputonPORTC7 = "Clock output on PORTC7"
                        case PortCDataRegisterbits = "Port C Data Register bits"
                        case PortCDataDirectionRegisterbits = "Port C Data Direction Register bits"
                        case PortCInputPinsbits = "Port C Input Pins bits"
                        case EEPROMProgrammingModeBits = "EEPROM Programming Mode Bits"
                        case PLLprescalerBits = "PLL prescaler Bits"
                        case PLLEnableBit = "PLL Enable Bit"
                        case PLLLockStatusBit = "PLL Lock Status Bit"
                        case Enable = "Enable"
                        case USBresetflag = "USB reset flag"
                        case PowerReductionUSB = "Power Reduction USB"
                        case PowerReductionUSART1 = "Power Reduction USART1"
                        case PinChangeEnableMasks = "Pin Change Enable Masks"
                        case PinChangeInterruptFlags = "Pin Change Interrupt Flags"
                        case PinChangeInterruptEnables = "Pin Change Interrupt Enables"
                        case CTSEnable = "CTS Enable"
                        case RTSEnable = "RTS Enable"
                        case WatchdogEarlyWarningInterruptFlag = "Watchdog Early Warning Interrupt Flag"
                        case WatchdogEarlyWarningInterruptEnable = "Watchdog Early Warning Interrupt Enable"
                        case WatchdogTimerClockDividers = "Watchdog Timer Clock Dividers"
                        case PowerReductionTimerCounter3 = "Power Reduction Timer/Counter3"
                        case PowerReductionTWI = "Power Reduction TWI"
                        case PowerReductionTimerCounter2 = "Power Reduction Timer/Counter2"
                        case TimerCounter2OutputCompareMatchBInterruptEnable = "Timer/Counter2 Output Compare Match B Interrupt Enable"
                        case TimerCounter2OutputCompareMatchAInterruptEnable = "Timer/Counter2 Output Compare Match A Interrupt Enable"
                        case OutputCompareFlag2B = "Output Compare Flag 2B"
                        case OutputCompareFlag2B2 = "Output Compare Flag 2 B" // Duplicate
                        case OutputCompareFlag2A = "Output Compare Flag 2A"
                        case OutputCompareFlag2A2 = "Output Compare Flag 2 A" // Duplicate
                        case EnableExternalClockInput = "Enable External Clock Input"
                        case AsynchronousTimerCounter2 = "Asynchronous Timer/Counter2"
                        case TimerCounter2UpdateBusy = "Timer/Counter2 Update Busy"
                        case TimerCounterControlRegister2UpdateBusy = "Timer/Counter Control Register2 Update Busy"
                        case PinChangeInterruptFlag0 = "Pin Change Interrupt Flag 0"
                        case PinChangeInterruptEnable0 = "Pin Change Interrupt Enable 0"
                        case CKOPTfuseoperationdependentofCKSELfuses = "CKOPT fuse (operation dependent of CKSEL fuses)"
                        case CKOPTfuseoperationdependentofCKSELfuses2 = "CKOPT fuse (operation dependent of CKSEL fuses)]" // Duplicate
                        case Brownoutdetectortriggerlevel = "Brownout detector trigger level"
                        case Brownoutdetectionenabled = "Brown-out detection enabled"
                        case ExternalInterruptRequest1Enable = "External Interrupt Request 1 Enable"
                        case InterruptSenseControl1Bits = "Interrupt Sense Control 1 Bits"
                        case InterruptSenseControl0Bits = "Interrupt Sense Control 0 Bits"
                        case ClockSelect0bit2 = "Clock Select0 bit 2"
                        case ClockSelect0bit1 = "Clock Select0 bit 1"
                        case ClockSelect0bit0 = "Clock Select0 bit 0"
                        case AsynchronousTimercounter2 = "Asynchronous Timer/counter2"
                        case TimercounterControlRegister2UpdateBusy = "Timer/counter Control Register2 Update Busy"
                        case RegisterSelect = "Register Select"
                        case SleepModeSelect = "Sleep Mode Select"
                        case PullupDisable = "Pull-up Disable"
                        case ADCFreeRunningSelect = "ADC  Free Running Select"
                        case SelfProgrammingenable = "Self Programming enable"
                        case Selectstartuptime = "Select start-up time"
                        case VADCEnable = "VADC Enable"
                        case VADCEnable2 = "V-ADC Enable" // Duplicate
                        case VADCSatrtConversion = "VADC Satrt Conversion"
                        case VADCConversionCompleteInterruptFlag = "VADC Conversion Complete Interrupt Flag"
                        case VADCConversionCompleteInterruptEnable = "VADC Conversion Complete Interrupt Enable"
                        case Bandgapcalibrationbits = "Bandgap calibration bits"
                        case SettingtheBGDbittoonewilldisablethebandgapvoltagereferenceThisbitmustbeclearedbeforeenablingCCADCorVADCandmustremainunsetwhileeitherADCisenabled = "Setting the BGD bit to one will disable the bandgap voltage reference. This bit must be cleared before enabling CC-ADC or V-ADC, and must remain unset while either ADC is enabled."
                        case BGCalibrationofPTATCurrentBits = "BG Calibration of PTAT Current Bits"
                        case ExternalInterruptSenseControl2Bits = "External Interrupt Sense Control 2 Bits"
                        case ExternalInterruptSenseControl1Bits = "External Interrupt Sense Control 1 Bits"
                        case ExternalInterruptSenseControl0Bits = "External Interrupt Sense Control 0 Bits"
                        case DeepUnderVoltageRecoveryDisable = "Deep Under-Voltage Recovery Disable"
                        case CurrentProtectionStatus = "Current Protection Status"
                        case DischargeFETEnable = "Discharge FET Enable"
                        case ChargeFETEnable = "Charge FET Enable"
                        case ClearTemporaryPageBuffer = "Clear Temporary Page Buffer"
                        case ReadFuseandLockBits = "Read Fuse and Lock Bits"
                        case ClockOutputEnable = "Clock Output Enable"
                        case OCDResetFlag = "OCD Reset Flag"
                        case OscillatorSamplingInterfaceSelect0 = "Oscillator Sampling Interface Select 0"
                        case OscillatorSamplingInterfaceStatus = "Oscillator Sampling Interface Status"
                        case OscillatorSamplingInterfaceEnable = "Oscillator Sampling Interface Enable"
                        case WhenthisbitiswrittenlogiconethedigitalinputbufferofthecorrespondingVADCpinisdisabled = "When this bit is written logic one, the digital input buffer of the corresponding V_ADC pin is disabled."
                        case PowerReductionVoltageRegulatorMonitor = "Power Reduction Voltage Regulator Monitor"
                        case PowerreductionSPI = "Power reduction SPI"
                        case PowerReductionVADC = "Power Reduction V-ADC"
                        case ClockPrescalerChangeEnable = "Clock Prescaler Change Enable"
                        case ClockPrescalerSelectBits = "Clock Prescaler Select Bits"
                        case BatteryProtectionParameterLockEnable = "Battery Protection Parameter Lock Enable"
                        case BatteryProtectionParameterLock = "Battery Protection Parameter Lock"
                        case ShortCircuitProtectionDisabled = "Short Circuit Protection Disabled"
                        case DischargeOvercurrentProtectionDisabled = "Discharge Over-current Protection Disabled"
                        case ChargeOvercurrentProtectionDisabled = "Charge Over-current Protection Disabled"
                        case DischargeHighcurrentProtectionDisable = "Discharge High-current Protection Disable"
                        case ChargeHighcurrentProtectionDisable = "Charge High-current Protection Disable"
                        case ShortcircuitProtectionActivatedInterruptFlag = "Short-circuit Protection Activated Interrupt Flag"
                        case DischargeOvercurrentProtectionActivatedInterruptFlag = "Discharge Over-current Protection Activated Interrupt Flag"
                        case ChargeOvercurrentProtectionActivatedInterruptFlag = "Charge Over-current Protection Activated Interrupt Flag"
                        case DishargeHighcurrentProtectionActivatedInterrupt = "Disharge High-current Protection Activated Interrupt"
                        case ChargeHighcurrentProtectionActivatedInterrupt = "Charge High-current Protection Activated Interrupt"
                        case ShortcircuitProtectionActivatedInterruptEnable = "Short-circuit Protection Activated Interrupt Enable"
                        case DischargeOvercurrentProtectionActivatedInterruptEnable = "Discharge Over-current Protection Activated Interrupt Enable"
                        case ChargeOvercurrentProtectionActivatedInterruptEnable = "Charge Over-current Protection Activated Interrupt Enable"
                        case DischargerHighcurrentProtectionActivatedInterrupt = "Discharger High-current Protection Activated Interrupt"
                        case ChargerHighcurrentProtectionActivatedInterrupt = "Charger High-current Protection Activated Interrupt"
                        case EEPromReadyInterruptEnable = "EEProm Ready Interrupt Enable"
                        case ClockSelect1bis = "Clock Select1 bis"
                        case TimerCounterWidth = "Timer/Counter Width"
                        case InputCaptureModeEnable = "Input Capture Mode Enable"
                        case InputCaptureNoiseCanceler = "Input Capture Noise Canceler"
                        case InputCaptureEdgeSelect = "Input Capture Edge Select"
                        case InputCaptureSelect = "Input Capture Select"
                        case TimerCounternInputCaptureInterruptEnable = "Timer/Counter n Input Capture Interrupt Enable"
                        case TimerCounter1OutputCompareBInterruptEnable = "Timer/Counter1 Output Compare B Interrupt Enable"
                        case TimerCounter1OutputCompareAInterruptEnable = "Timer/Counter1 Output Compare A Interrupt Enable"
                        case TimerCounter1InputCaptureFlag = "Timer/Counter 1 Input Capture Flag"
                        case TimerCounter1InputCaptureFlag2 = "Timer/Counter1 Input Capture Flag" // Duplicate
                        case TimerCounter1OutputCompareFlagB = "Timer/Counter1 Output Compare Flag B"
                        case TimerCounter1OutputCompareFlagA = "Timer/Counter1 Output Compare Flag A"
                        case PrescalerReset = "Prescaler Reset"
                        case OutputCompareInterruptEnable = "Output Compare Interrupt Enable"
                        case OverflowInterruptEnable = "Overflow Interrupt Enable"
                        case TimerCounterInterruptFlagRegister = "Timer/Counter Interrupt Flag Register"
                        case OutputCompareFlag = "Output Compare Flag"
                        case OverflowFlag = "Overflow Flag"
                        case WhentheCADENbitisclearedzerotheCCADCisdisabledWhentheCADENbitissetonetheCCADCwillcontinuouslymeasurethevoltagedropovertheexternalsenseresistorRSENSEInPowerdownonlytheRegularCurrentdetectionisactiveInPowerofftheCCADCisalwaysdisabled = "When the CADEN bit is cleared (zero), the CC-ADC is disabled. When the CADEN bit is set (one), the CC-ADC will continuously measure the voltage drop over the external sense resistor RSENSE. In Power-down, only the Regular Current detection is active. In Power-off, the CC-ADC is always disabled."
                        case CCADCUpdateBusy = "CC_ADC Update Busy"
                        case CCADCAccumulateCurrentSelectBits = "CC_ADC Accumulate Current Select Bits"
                        case TheCADSIbitsdeterminethecurrentsamplingintervalfortheRegularCurrentdetectioninPowerdownmodeTheactualsettingsremaintobedetermined = "The CADSI bits determine the current sampling interval for the Regular Current detection in Power-down mode. The actual settings remain to be determined."
                        case WhentheCADSEbitiswrittentoonetheongoingCCADCconversionisabortedandtheCCADCentersRegularCurrentdetectionmode = "When the CADSE bit is written to one, the ongoing CC-ADC conversion is aborted, and the CC-ADC enters Regular Current detection mode."
                        case RegularCurrentInterruptEnable = "Regular Current Interrupt Enable"
                        case CADInstantenousCurrentInterruptEnable = "CAD Instantenous Current Interrupt Enable"
                        case CCADCAccumulateCurrentInterruptFlag = "CC-ADC Accumulate Current Interrupt Flag"
                        case CCADCInstantaneousCurrentInterruptFlag = "CC-ADC Instantaneous Current Interrupt Flag"
                        case ROCStatus = "ROC Status"
                        case ROCWarningInterruptFlag = "ROC Warning Interrupt Flag"
                        case ROCWarningInterruptEnable = "ROC Warning Interrupt Enable"
                        case USBBuffersDirectDriveenableconfiguration = "USB Buffers Direct Drive enable configuration"
                        case USBdirectdrivevalues = "USB direct drive values"
                        case DPlusInputvalue = "D+ Input value"
                        case DMinusInputvalue = "D- Input value"
                        case ByteCountbits = "Byte Count bits"
                        case Databits = "Data bits"
                        case FlowErrorInterruptEnableFlag = "Flow Error Interrupt Enable Flag"
                        case NAKINInterruptEnableBit = "NAK IN Interrupt Enable Bit"
                        case NAKOUTInterruptEnableBit = "NAK OUT Interrupt Enable Bit"
                        case ReceivedSETUPInterruptEnableFlag = "Received SETUP Interrupt Enable Flag"
                        case ReceivedOUTDataInterruptEnableFlag = "Received OUT Data Interrupt Enable Flag"
                        case StalledInterruptEnableFlag = "Stalled Interrupt Enable Flag"
                        case TransmitterReadyInterruptEnableFlag = "Transmitter Ready Interrupt Enable Flag"
                        case ControlDirection = "Control Direction"
                        case CurrentBank = "Current Bank"
                        case ConfigurationStatusFlag = "Configuration Status Flag"
                        case OverflowErrorInterruptFlag = "Overflow Error Interrupt Flag"
                        case UnderflowErrorInterruptFlag = "Underflow Error Interrupt Flag"
                        case DataToggleSequencingFlag = "Data Toggle Sequencing Flag"
                        case BusyBankFlag = "Busy Bank Flag"
                        case EndpointSizeBits = "Endpoint Size Bits"
                        case EndpointBankBits = "Endpoint Bank Bits"
                        case EndpointAllocationBit = "Endpoint Allocation Bit"
                        case EndpointTypeBits = "Endpoint Type Bits"
                        case EndpointDirectionBit = "Endpoint Direction Bit"
                        case STALLRequestHandshakeBit = "STALL Request Handshake Bit"
                        case STALLRequestClearHandshakeBit = "STALL Request Clear Handshake Bit"
                        case ResetDataToggleBit = "Reset Data Toggle Bit"
                        case EndpointEnableBit = "Endpoint Enable Bit"
                        case EndpointFIFOResetBits = "Endpoint FIFO Reset Bits"
                        case EndpointNumberbits = "Endpoint Number bits"
                        case FIFOControlBit = "FIFO Control Bit"
                        case NAKINReceivedInterruptFlag = "NAK IN Received Interrupt Flag"
                        case ReadWriteAllowedFlag = "Read/Write Allowed Flag"
                        case NAKOUTReceivedInterruptFlag = "NAK OUT Received Interrupt Flag"
                        case ReceivedSETUPInterruptFlag = "Received SETUP Interrupt Flag"
                        case ReceivedOUTDataInterruptFlag = "Received OUT Data Interrupt Flag"
                        case STALLEDIInterruptFlag = "STALLEDI Interrupt Flag"
                        case TransmitterReadyInterruptFlag = "Transmitter Ready Interrupt Flag"
                        case FrameNumberCRCErrorFlag = "Frame Number CRC Error Flag"
                        case FrameNumberUpperFlag = "Frame Number Upper Flag"
                        case AddressEnableBit = "Address Enable Bit"
                        case USBAddressBits = "USB Address Bits"
                        case UpstreamResumeInterruptEnableBit = "Upstream Resume Interrupt Enable Bit"
                        case EndOfResumeInterruptEnableBit = "End Of Resume Interrupt Enable Bit"
                        case WakeupCPUInterruptEnableBit = "Wake-up CPU Interrupt Enable Bit"
                        case EndOfResetInterruptEnableBit = "End Of Reset Interrupt Enable Bit"
                        case StartOfFrameInterruptEnableBit = "Start Of Frame Interrupt Enable Bit"
                        case SuspendInterruptEnableBit = "Suspend Interrupt Enable Bit"
                        case UpstreamResumeInterruptFlag = "Upstream Resume Interrupt Flag"
                        case EndOfResumeInterruptFlag = "End Of Resume Interrupt Flag"
                        case WakeupCPUInterruptFlag = "Wake-up CPU Interrupt Flag"
                        case EndOfResetInterruptFlag = "End Of Reset Interrupt Flag"
                        case StartOfFrameInterruptFlag = "Start Of Frame Interrupt Flag"
                        case SuspendInterruptFlag = "Suspend Interrupt Flag"
                        case USBResetCPUBit = "USB Reset CPU Bit"
                        case RemoteWakeupBit = "Remote Wake-up Bit"
                        case DetachBit = "Detach Bit"
                        case USBmacroEnableBit = "USB macro Enable Bit"
                        case FreezeUSBClockBit = "Freeze USB Clock Bit"
                        case RegulatorDisable = "Regulator Disable"
                        case AnalogComparatorSelectionBits = "Analog Comparator Selection Bits"
                        case AIN7DigitalInputDisable = "AIN7 Digital Input Disable"
                        case AIN6DigitalInputDisable = "AIN6 Digital Input Disable"
                        case AIN5DigitalInputDisable = "AIN5 Digital Input Disable"
                        case AIN4DigitalInputDisable = "AIN4 Digital Input Disable"
                        case AIN3DigitalInputDisable = "AIN3 Digital Input Disable"
                        case AIN2DigitalInputDisable = "AIN2 Digital Input Disable"
                        case TimerCounter0OutputCompareMatchInterruptregister = "Timer/Counter0 Output Compare Match Interrupt register"
                        case OutputCompareFlag0 = "Output Compare Flag 0"
                        case ExternalInterruptRequest0Enable = "External Interrupt Request 0 Enable"
                        case ExternalInterruptFlag2 = "External Interrupt Flag 2"
                        case InterruptSenseControl2 = "Interrupt Sense Control 2"
                        case Prescalerreset = "Prescaler reset"
                        case ADCAutoTrigger = "ADC Auto Trigger"
                        case OnChipDebugRegisterBits = "On-Chip Debug Register Bits"
                        case RW = "RW"
                        case TimerCounter0bits = "Timer/Counter 0 bits"
                        case TimerCounter0bits2 = "Timer Counter 0 bits" // Duplicate
                        case TimerCounter0bits3 = "Timer/Counter0 bits" // Duplicate
                        case OutputComparebits = "Output Compare bits"
                        case TimerCounter1bits = "Timer/Counter 1 bits"
                        case TimerCounter1bits2 = "Timer Counter 1 bits" // Duplicate
                        case TimerCounter1bits3 = "Timer/Counter1 bits" // Duplicate
                        case TimerCounter1OutputCompareAbits = "Timer/Counter1 Output Compare A bits"
                        case TimerCounter1OutputCompareBbits = "Timer/Counter1 Output Compare B bits"
                        case TimerCounter2 = "Timer/Counter2"
                        case TimerCounter2OutputComparebits = "Timer/Counter2 Output Compare bits"
                        case USARTIODatabits = "USART I/O Data bits"
                        case USARTBaudRatebits = "USART Baud Rate bits"
                        case TWIBitRatebits = "TWI Bit Rate bits"
                        case TWIDatabits = "TWI Data bits"
                        case ADCDataBits = "ADC Data Bits"
                        case Oscillatorselect = "Oscillator select"
                        case ClockDividemode = "Clock Divide mode"
                        case VADCDatabits = "VADC Data bits"
                        case CCADCVoltageScalingEnable = "CC-ADC Voltage Scaling Enable"
                        case CCADCInstantaneousCurrent = "CC-ADC Instantaneous Current"
                        case ADCaccumulatecurrentbits = "ADC accumulate current bits"
                        case CCADCRegularChargeCurrent = "CC-ADC Regular Charge Current"
                        case CCADCRegularDischargeCurrent = "CC-ADC Regular Discharge Current"
                        case TWIBusConnectDisconnectInterruptFlag = "TWI Bus Connect/Disconnect Interrupt Flag"
                        case TWIBusConnectDisconnectInterruptEnable = "TWI Bus Connect/Disconnect Interrupt Enable"
                        case TWIBusDisconnectTimeoutPeriod = "TWI Bus Disconnect Time-out Period"
                        case TWIBusConnectDisconnectInterruptPolarity = "TWI Bus Connect/Disconnect Interrupt Polarity"
                        case TWIDataBits = "TWI Data Bits"
                        case ExternalInterruptSenseControl3Bits = "External Interrupt Sense Control 3 Bits"
                        case PinChangeEnableMask = "Pin Change Enable Mask"
                        case OutputCompare1Abits = "Output Compare 1 A bits"
                        case OutputCompare1Bbits = "Output Compare 1 B bits"
                        case OutputCompare0Abits = "Output Compare 0 A bits"
                        case OutputCompare0Bbits = "Output Compare 0 B bits"
                        case TimerCounter0OutputCompareBInterruptEnable = "Timer/Counter0 Output Compare B Interrupt Enable"
                        case TimerCounter0OutputCompareAInterruptEnable = "Timer/Counter0 Output Compare A Interrupt Enable"
                        case TimerCounter0InputCaptureFlag = "Timer/Counter 0 Input Capture Flag"
                        case TimerCounter0OutputCompareFlagB = "Timer/Counter0 Output Compare Flag B"
                        case TimerCounter0OutputCompareFlagA = "Timer/Counter0 Output Compare Flag A"
                        case CellBalancingEnables = "Cell Balancing Enables"
                        case ExternalProtectionInputDisable = "External Protection Input Disable"
                        case BatteryProtectionShortcurrentTimingbits = "Battery Protection Short-current Timing bits"
                        case BatteryProtectionOvercurrentTimingbits = "Battery Protection Over-current Timing bits"
                        case BatteryProtectionChargeHighcurrentDetectionLevelbits = "Battery Protection Charge-High-current Detection Level bits"
                        case BatteryProtectionDischargeHighcurrentDetectionLevelbits = "Battery Protection Discharge-High-current Detection Level bits"
                        case BatteryProtectionChargeOvercurrentDetectionLevelbits = "Battery Protection Charge-Over-current Detection Level bits"
                        case BatteryProtectionDischargeOvercurrentDetectionLevelbits = "Battery Protection Discharge-Over-current Detection Level bits"
                        case BatteryProtectionShortCircuitDetectionLevelRegisterbits = "Battery Protection Short-Circuit Detection Level Register bits"
                        case BATTPinVoltageLevel = "BATT Pin Voltage Level"
                        case ChargerDetectInterruptSenseControl = "Charger Detect Interrupt Sense Control"
                        case ChargerDetectInterruptFlag = "Charger Detect Interrupt Flag"
                        case ChargerDetectInterruptEnable = "Charger Detect Interrupt Enable"
                        case ROCDisable = "ROC Disable"
                        case BandgapDisable = "Bandgap Disable"
                        case BandgapShortCircuitDetectionEnabled = "Bandgap Short Circuit Detection Enabled"
                        case BandgapShortCircuitDetectionInterruptFlag = "Bandgap Short Circuit Detection Interrupt Flag"
                        case BandgapShortCircuitDetectionInterruptEnable = "Bandgap Short Circuit Detection Interrupt Enable"
                        case BandgapCalibrationofResistorLadderBits = "Bandgap Calibration of Resistor Ladder Bits"
                        case FastOscillatorCalibrationValue = "Fast Oscillator Calibration Value"
                        case GeneralPurposeIObits = "General Purpose I/O bits"
                        case GeneralPurposeIObits2 = "General Purpose IO bits"
                        case LockBitSet = "Lock Bit Set"
                        case DUVRmodeon = "DUVR mode on"
                        case PSCResetBehavior = "PSC Reset Behavior"
                        case PSCOUTnAResetValue = "PSCOUTnA Reset Value"
                        case PSC0UTnBResetValue = "PSC0UTnB Reset Value"
                        case OverrunCANTimerFlag = "Overrun CAN Timer Flag"
                        case BurstReceiveInterruptFlag = "Burst Receive Interrupt Flag"
                        case StuffErrorGeneralFlag = "Stuff Error General Flag"
                        case CRCErrorGeneralFlag = "CRC Error General Flag"
                        case FormErrorGeneralFlag = "Form Error General Flag"
                        case AckknowledgementErrorGeneralFlag = "Ackknowledgement Error General Flag"
                        case EnableBusOffInterrupt = "Enable Bus Off Interrupt"
                        case EnableMObs = "Enable MObs"
                        case InterruptEnableMObs = "Interrupt Enable  MObs"
                        case StatusofInterruptMObs = "Status of Interrupt MObs"
                        case ReSyncJumpWidthbits = "Re-Sync Jump Width bits"
                        case PropagationTimeSegmentbits = "Propagation Time Segment bits"
                        case PhaseSegment2bits = "Phase Segment 2 bits"
                        case PhaseSegment1bits = "Phase Segment 1 bits"
                        case TimerControlbits = "Timer Control bits"
                        case Timerbits = "Timer bits"
                        case TransmitErrorCounterbits = "Transmit Error Counter bits"
                        case ReceiveErrorCounterbits = "Receive Error Counter bits"
                        case HighestPriorityMObNumberbits = "Highest Priority MOb Number bits"
                        case CANGeneralPurposebits = "CAN General Purpose bits"
                        case MObNumberbits = "MOb Number bits"
                        case MObDataBufferAutoIncrementActiveLow = "MOb Data Buffer Auto Increment (Active Low)"
                        case DataBufferIndexbits = "Data Buffer Index bits"
                        case DataLengthCodeWarningonMOb = "Data Length Code Warning on MOb"
                        case TransmitOKonMOb = "Transmit OK on MOb"
                        case ReceiveOKonMOb = "Receive OK on MOb"
                        case BitErroronMOb = "Bit Error on MOb"
                        case StuffErroronMOb = "Stuff Error on MOb"
                        case CRCErroronMOb = "CRC Error on MOb"
                        case FormErroronMOb = "Form Error on MOb"
                        case AckknowledgementErroronMOb = "Ackknowledgement Error on MOb"
                        case MObConfigbits = "MOb Config bits"
                        case DataLengthCodebits = "Data Length Code bits"
                        case RemoteTransmissionRequestTag = "Remote Transmission Request Tag"
                        case TIMSTM = "TIMSTM"
                        case MessageDatabits = "Message Data bits"
                        case AnalogComparator0InterruptSelectBits = "Analog Comparator 0  Interrupt Select Bits"
                        case AnalogComparatorClockSelect = "Analog Comparator Clock Select"
                        case ClockPrescalerSelect = "Clock Prescaler Select"
                        case PowerReductionCAN = "Power Reduction CAN"
                        case PowerReductionPSC = "Power Reduction PSC"
                        case PowerReductionLINUART = "Power Reduction LIN UART"
                        case CompareOutputModeforChannelA = "Compare Output Mode for Channel A"
                        case CompareOutputModeforChannelB = "Compare Output Mode for Channel B"
                        case TimerCounter0OutputComparebits = "Timer/Counter0 Output Compare bits"
                        case TimerCounter1InputCaptureSelection = "Timer/Counter1 Input Capture Selection"
                        case TimerCounterPrescalerReset = "Timer/Counter Prescaler Reset"
                        case ForceOutputCompareforChannelA = "Force Output Compare for Channel A"
                        case ForceOutputCompareforChannelB = "Force Output Compare for Channel B"
                        case TimerCounter1OutputComparebits = "Timer/Counter1 Output Compare bits"
                        case ADCchannelselectionbits = "ADC channel selection bits"
                        case ADCDatabits = "ADC Data bits"
                        case CurrentSourceEnable = "Current Source Enable"
                        case AnalogReferencepinEnable = "Analog Reference pin Enable"
                        case AMP2PPinDigitalinputDisable = "AMP2P Pin Digital input Disable"
                        case ACMP0PinDigitalinputDisable = "ACMP0 Pin Digital input Disable"
                        case AMP0PPinDigitalinputDisable = "AMP0P Pin Digital input Disable"
                        case AMP0NPinDigitalinputDisable = "AMP0N Pin Digital input Disable"
                        case ADC10PinDigitalinputDisable = "ADC10 Pin Digital input Disable"
                        case ADC9PinDigitalinputDisable = "ADC9 Pin Digital input Disable"
                        case ADC8PinDigitalinputDisable = "ADC8 Pin Digital input Disable"
                        case Amplifier0Enable = "Amplifier 0 Enable"
                        case Amplifier0InputShunt = "Amplifier 0 Input Shunt"
                        case Amplifier0GainSelection = "Amplifier 0 Gain Selection"
                        case Amplifier0Comparator0connection = "Amplifier 0 - Comparator 0 connection"
                        case Amplifier0ClockSourceSelection = "Amplifier 0 Clock Source Selection"
                        case Amplifier1Enable = "Amplifier 1 Enable"
                        case Amplifier1InputShunt = "Amplifier 1 Input Shunt"
                        case Amplifier1GainSelection = "Amplifier 1 Gain Selection"
                        case Amplifier1Comparator1Connection = "Amplifier 1 - Comparator 1 Connection"
                        case Amplifier1ClockSourceSelection = "Amplifier 1 Clock Source Selection"
                        case Amplifier2Enable = "Amplifier 2 Enable"
                        case Amplifier2InputShunt = "Amplifier 2 Input Shunt"
                        case Amplifier2GainSelection = "Amplifier 2 Gain Selection"
                        case Amplifier2Comparator2Connection = "Amplifier 2 - Comparator 2 Connection"
                        case Amplifier2ClockSourceSelection = "Amplifier 2 Clock Source Selection"
                        case SoftwareReset = "Software Reset"
                        case LINStandard = "LIN Standard"
                        case LINConfigurationbits = "LIN Configuration bits"
                        case LINorUARTEnable = "LIN or UART Enable"
                        case LINCommandandModebits = "LIN Command and Mode bits"
                        case IdentifierStatusbits = "Identifier Status bits"
                        case BusySignal = "Busy Signal"
                        case ErrorInterrupt = "Error Interrupt"
                        case IdentifierInterrupt = "Identifier Interrupt"
                        case TransmitPerformedInterrupt = "Transmit Performed Interrupt"
                        case ReceivePerformedInterrupt = "Receive Performed Interrupt"
                        case EnableErrorInterrupt = "Enable Error Interrupt"
                        case EnableIdentifierInterrupt = "Enable Identifier Interrupt"
                        case EnableTransmitPerformedInterrupt = "Enable Transmit Performed Interrupt"
                        case EnableReceivePerformedInterrupt = "Enable Receive Performed Interrupt"
                        case AbortFlag = "Abort Flag"
                        case FrameTimeOutErrorFlag = "Frame Time Out Error Flag"
                        case OverrunErrorFlag = "Overrun Error Flag"
                        case FramingErrorFlag = "Framing Error Flag"
                        case SynchronizationErrorFlag = "Synchronization Error Flag"
                        case ParityErrorFlag = "Parity Error Flag"
                        case ChecksumErrorFlag = "Checksum Error Flag"
                        case BitErrorFlag = "Bit Error Flag"
                        case DisableBitTimingResynchronization = "Disable Bit Timing Resynchronization"
                        case LINBitTimingbits = "LIN Bit Timing bits"
                        case LINTransmitDataLengthbits = "LIN Transmit Data Length bits"
                        case LINReceiveDataLengthbits = "LIN Receive Data Length bits"
                        case Paritybits = "Parity bits"
                        case Identifierbit5orDataLengthbits = "Identifier bit 5 or Data Length bits"
                        case AutoIncrementofDataBufferIndexActiveLow = "Auto Increment of Data Buffer Index (Active Low)"
                        case FIFOLINDataBufferIndexbits = "FIFO LIN Data Buffer Index bits"
                        case LINDataInDataout = "LIN Data In / Data out"
                        case EEPROMProgrammingmode = "EEPROM Programming mode"
                        case PSCExternalEvent2Interrupt = "PSC External Event 2 Interrupt"
                        case PSCEndofCycleInterrupt = "PSC End of Cycle Interrupt"
                        case ExternalEvent2InterruptEnable = "External Event 2 Interrupt Enable"
                        case PSCEndofCycleInterruptEnable = "PSC End of Cycle Interrupt Enable"
                        case PSCModule2OverlapEnable = "PSC Module 2 Overlap Enable"
                        case PSCModule2InputSelect = "PSC Module 2 Input Select"
                        case PSCModule2InputLevelSelector = "PSC Module 2 Input Level Selector"
                        case PSCModule2InputFilterEnable = "PSC Module 2 Input Filter Enable"
                        case PSCModule2AsynchronousOutputControl = "PSC Module 2 Asynchronous Output Control"
                        case PSCModule2InputModebits = "PSC Module 2 Input Mode bits"
                        case PSCModule1OverlapEnable = "PSC Module 1 Overlap Enable"
                        case PSCModule1InputSelect = "PSC Module 1 Input Select"
                        case PSCModule1InputLevelSelector = "PSC Module 1 Input Level Selector"
                        case PSCModule1InputFilterEnable = "PSC Module 1 Input Filter Enable"
                        case PSCModule1AsynchronousOutputControl = "PSC Module 1 Asynchronous Output Control"
                        case PSCModule1InputModebits = "PSC Module 1 Input Mode bits"
                        case PSCModule0OverlapEnable = "PSC Module 0 Overlap Enable"
                        case PSCModule0InputSelect = "PSC Module 0 Input Select"
                        case PSCModule0InputLevelSelector = "PSC Module 0 Input Level Selector"
                        case PSCModule0InputFilterEnable = "PSC Module 0 Input Filter Enable"
                        case PSCModule0AsynchronousOutputControl = "PSC Module 0 Asynchronous Output Control"
                        case PSCModule0InputModebits = "PSC Module 0 Input Mode bits"
                        case PSCPrescalerSelectbits = "PSC Prescaler Select bits"
                        case PSCInputClockSelect = "PSC Input Clock Select"
                        case PSCCompleteCycle = "PSC Complete Cycle"
                        case PSCRun = "PSC Run"
                        case PSCOutput2BEnable = "PSC Output 2B Enable"
                        case PSCOutput2AEnable = "PSC Output 2A Enable"
                        case PSCOutput1BEnable = "PSC Output 1B Enable"
                        case PSCOutput1AEnable = "PSC Output 1A Enable"
                        case PSCOutput0BEnable = "PSC Output 0B Enable"
                        case PSCOutput0AEnable = "PSC Output 0A Enable"
                        case PSCUpdateLock = "PSC Update Lock"
                        case PSCMode = "PSC Mode"
                        case PSCOutputBPolarity = "PSC Output B Polarity"
                        case PSCOutputAPolarity = "PSC Output A Polarity"
                        case SelectionofSynchronizationOutforADC = "Selection of Synchronization Out for ADC"
                        case PSCOutputCompareRBbits = "PSC Output Compare RB bits"
                        case PSCOutputCompareSBbits = "PSC Output Compare SB bits"
                        case PSCOutputCompareRAbits = "PSC Output Compare RA bits"
                        case PSCOutputCompareSAbits = "PSC Output Compare SA bits"
                        case TimerCounter0OutputCompareBbits = "Timer/Counter0 Output Compare B bits"
                        case TimerCounter0OutputCompareAbits = "Timer/Counter0 Output Compare A bits"
                        case TimerCounter1OutputCompareCbits = "Timer/Counter1 Output Compare C bits"
                        case EEPROMAddressBits = "EEPROM Address Bits"
                        case CompareOutputMode4Bbits = "Compare Output Mode 4B, bits"
                        case ForceOutputCompareMatch4A = "Force Output Compare Match 4A"
                        case ForceOutputCompareMatch4B = "Force Output Compare Match 4B"
                        case PWMInversionMode = "PWM Inversion Mode"
                        case PrescalerResetTimerCounter4 = "Prescaler Reset Timer/Counter 4"
                        case DeadTimePrescalerBits = "Dead Time Prescaler Bits"
                        case ClockSelectBits = "Clock Select Bits"
                        case ComparatorAOutputMode = "Comparator A Output Mode"
                        case ComparatorBOutputMode = "Comparator B Output Mode"
                        case ComparatorDOutputMode = "Comparator D Output Mode"
                        case ForceOutputCompareMatch4D = "Force Output Compare Match 4D"
                        case PulseWidthModulatorDEnable = "Pulse Width Modulator D Enable"
                        case FaultProtectionInterruptEnable = "Fault Protection Interrupt Enable"
                        case FaultProtectionModeEnable = "Fault Protection Mode Enable"
                        case FaultProtectionNoiseCanceler = "Fault Protection Noise Canceler"
                        case FaultProtectionEdgeSelect = "Fault Protection Edge Select"
                        case FaultProtectionAnalogComparatorEnable = "Fault Protection Analog Comparator Enable"
                        case FaultProtectionInterruptFlag = "Fault Protection Interrupt Flag"
                        case WaveformGenerationModebits = "Waveform Generation Mode bits"
                        case RegisterUpdateLock = "Register Update Lock"
                        case EnhancedComparePWMMode = "Enhanced Compare/PWM Mode"
                        case OutputCompareOverrideEnablebit = "Output Compare Override Enable bit"
                        case TimerCounter4bits = "Timer/Counter4 bits"
                        case TimerCounter4OutputCompareAbits = "Timer/Counter4 Output Compare A bits"
                        case TimerCounter4OutputCompareBbits = "Timer/Counter4 Output Compare B bits"
                        case TimerCounter4OutputCompareCbits = "Timer/Counter4 Output Compare C bits"
                        case TimerCounter4OutputCompareDbits = "Timer/Counter4 Output Compare D bits"
                        case TimerCounter4OutputCompareDMatchInterruptEnable = "Timer/Counter4 Output Compare D Match Interrupt Enable"
                        case TimerCounter4OutputCompareAMatchInterruptEnable = "Timer/Counter4 Output Compare A Match Interrupt Enable"
                        case TimerCounter4OutputCompareBMatchInterruptEnable = "Timer/Counter4 Output Compare B Match Interrupt Enable"
                        case TimerCounter4OverflowInterruptEnable = "Timer/Counter4 Overflow Interrupt Enable"
                        case OutputCompareFlag4D = "Output Compare Flag 4D"
                        case OutputCompareFlag4A = "Output Compare Flag 4A"
                        case OutputCompareFlag4B = "Output Compare Flag 4B"
                        case TimerCounter4OverflowFlag = "Timer/Counter4 Overflow Flag"
                        case TimerCounter4DeadTimeValueBits = "Timer/Counter 4 Dead Time Value Bits"
                        case TimerCounter3bits = "Timer/Counter3 bits"
                        case TimerCounter3OutputCompareAbits = "Timer/Counter3 Output Compare A bits"
                        case TimerCounter3OutputCompareBbits = "Timer/Counter3 Output Compare B bits"
                        case TimerCounter3OutputCompareCbits = "Timer/Counter3 Output Compare C bits"
                        case TimerCounter3InputCapturebits = "Timer/Counter3 Input Capture bits"
                        case PinChangeMask0 = "Pin Change Mask 0"
                        case ADC13DigitalinputDisable = "ADC13 Digital input Disable"
                        case ADC12DigitalinputDisable = "ADC12 Digital input Disable"
                        case ADC11DigitalinputDisable = "ADC11 Digital input Disable"
                        case ExtendedZPointerValue = "Extended Z-Pointer Value"
                        case PowerReductionTimerCounter4 = "Power Reduction Timer/Counter4"
                        case PLLprescalerBit2 = "PLL prescaler Bit 2"
                        case Endpointinterruptbits = "Endpoint interrupt bits"
                        case Bytecountbits = "Byte count bits"
                        case Framenumbervalue = "Frame number value"
                        case USBlowspeedmode = "USB low speed mode"
                        case Oscillatoroptions = "Oscillator options"
                        case PulseWidthModulatorEnable = "Pulse Width Modulator Enable"
                        case ClearTimerCounter2onCompareMatch = "Clear Timer/Counter2 on Compare Match"
                        case ReadWhileWritesecionreadenable = "Read While Write secion read enable"
                        case TWIPrescalerbits = "TWI Prescaler bits"
                        case TWIaddressbits = "TWI address bits"
                        case TWIgeneralcallrecognitionenablebit = "TWI general call recognition enable bit"
                        case CANTimerbits = "CAN Timer bits"
                        case Amplifier0Comparator0Connection = "Amplifier 0 - Comparator 0 Connection"
                        case PrescalerResetforAsynchronousTimerCounters = "Prescaler Reset for Asynchronous Timer/Counters"
                        case PrescalerResetforSynchronousTimerCounters = "Prescaler Reset for Synchronous Timer/Counters"
                        case Reserved = "Reserved"
                        case CharacterSizetogetherwithUCSZ0inUCSR0C = "Character Size - together with UCSZ0 in UCSR0C"
                        case CharacterSizetogetherwithUCSZ2inUCSR0B = "Character Size - together with UCSZ2 in UCSR0B"
                        case AnalogChannelSelectionBits = "Analog Channel Selection Bits"
                        case ADCAutoTriggerSourcebits = "ADC Auto Trigger Source bits"
                        case SelfProgrammingEnable = "Self Programming Enable"
                        case SleepMode = "Sleep Mode"
                        case StoreProgramMemory = "Store Program Memory"
                        case SleepModeSelectBits = "Sleep Mode Select Bits"
                        case BODSleep = "BOD Sleep"
                        case BODSleepEnable = "BOD Sleep Enable"
                        case RXStartInterruptEnable = "RX Start Interrupt Enable"
                        case RXStart = "RX Start"
                        case StartFrameDetectionEnable = "Start Frame Detection Enable"
                        case AnalogComparatorOutputEnable = "Analog Comparator Output Enable"
                        case ATmega103CompatibilityMode = "ATmega103 Compatibility Mode"
                        case ExternalSRAMWaitStateSelect = "External SRAM Wait State Select"
                        case XTALDivideEnable = "XTAL Divide Enable"
                        case XTAlDivideSelectBits = "XTAl Divide Select Bits"
                        case PullUpDisable = "Pull Up Disable"
                        case PrescalerResetTimerCounter0 = "Prescaler Reset Timer/Counter0"
                        case PrescalerResetTimerCounter3TimerCounter2andTimerCounter1 = "Prescaler Reset Timer/Counter3, Timer/Counter2, and Timer/Counter1"
                        case AsynchronusTimerCounter0 = "Asynchronus Timer/Counter 0"
                        case TimerCounter0UpdateBusy = "Timer/Counter0 Update Busy"
                        case OutputCompareregister0Busy = "Output Compare register 0 Busy"
                        case TimerCounterControlRegister0UpdateBusy = "Timer/Counter Control Register 0 Update Busy"
                        case TimerCounter1OutputCompareMatchCInterruptEnable = "Timer/Counter 1, Output Compare Match C Interrupt Enable"
                        case TimerCounter1OutputCompareCMatchFlag = "Timer/Counter 1, Output Compare C Match Flag"
                        case TimerCounter1OutputCompareCMatchFlag2 = "Timer/Counter1 Output Compare C Match Flag" // Duplicate
                        case PrescalerResetTC3TC2TC1 = "Prescaler Reset, T/C3, T/C2, T/C1"
                        case WaveformGenerationModeBits = "Waveform Generation Mode Bits"
                        case ClockSelect1bits = "Clock Select1 bits"
                        case ForceOutputCompareforchannelA = "Force Output Compare for channel A"
                        case ForceOutputCompareforchannelB = "Force Output Compare for channel B"
                        case ForceOutputCompareforchannelC = "Force Output Compare for channel C"
                        case TimerCounter3OutputCompareMatchInterruptEnable = "Timer/Counter3, Output Compare Match Interrupt Enable"
                        case TimerCounter3OutputCompareCMatchFlag = "Timer/Counter3 Output Compare C Match Flag"
                        case ClockSelect3bits = "Clock Select3 bits"
                        case WafeformGenerationMode = "Wafeform Generation Mode"
                        case CompareMatchOutputMode = "Compare Match Output Mode"
                        case Divideclockby8 = "Divide clock by 8"
                        case PortBOverrideChangeEnable = "Port B Override Change Enable"
                        case PortBOverrideEnable3 = "Port B Override Enable 3"
                        case PortBOverrideEnable0 = "Port B Override Enable 0"
                        case SynchronizationBusy = "Synchronization Busy"
                        case SynchronizationCommand = "Synchronization Command"
                        case VADCInstantaneousConversionPolarityStatus = "V-ADC Instantaneous Conversion Polarity Status"
                        case VADACDataReadOutBusy = "VADAC Data Read Out Busy"
                        case VADICDataReadOutBusy = "VADIC Data Read Out Busy"
                        case CADCInstantaneousConversionPolarityStatus = "C-ADC Instantaneous Conversion Polarity Status"
                        case CADACDataReadOutBusy = "CADAC Data Read Out Busy"
                        case CADICDataReadOutBusy = "CADIC Data Read Out Busy"
                        case ADCPolaritySelect = "ADC Polarity Select"
                        case CADCChopperModeSelect = "C-ADC Chopper Mode Select"
                        case SamplingClockSelect = "Sampling Clock Select"
                        case InstantaneousDecimationRatioSelect = "Instantaneous Decimation Ratio Select"
                        case AccumulatedDecimationRatioSelect = "Accumulated Decimation Ratio Select"
                        case CADCEnable = "C-ADC Enable"
                        case CADCRegularCurrentComparatorMode = "C-ADC Regular Current Comparator Mode"
                        case CADCRegularCurrentCountThreshold = "C-ADC Regular Current Count Threshold"
                        case CADCGain = "C-ADC Gain"
                        case CADCPinDiagnosticsMode = "C-ADC Pin Diagnostics Mode"
                        case CADCDiagnosticsChannelSelect = "C-ADC Diagnostics Channel Select"
                        case VADCReferenceSelect = "V-ADC Reference Select"
                        case VADCPinDiagnosticsMode = "V-ADC Pin Diagnostics Mode"
                        case VADCChannelSelect = "V-ADC Channel Select"
                        case VADCAccumulatedVoltageInterruptFlag = "V-ADC Accumulated Voltage Interrupt Flag"
                        case VDACInstantaneousVoltageInterruptFlag = "V-DAC Instantaneous Voltage Interrupt Flag"
                        case CADCRegulatorCurrentInterruptFlag = "C-ADC Regulator Current Interrupt Flag"
                        case CADCAccumulatedCurrentInterruptFlag = "C-ADC Accumulated Current Interrupt Flag"
                        case CADCInstantaneousCurrentInterruptFlag = "C-ADC Instantaneous Current Interrupt Flag"
                        case VADCAccumulatedVoltageInterruptEnable = "V-ADC Accumulated Voltage Interrupt Enable"
                        case VDACInstantaneousVoltageInterruptEnable = "V-DAC Instantaneous Voltage Interrupt Enable"
                        case CADCRegulatorCurrentInterruptEnable = "C-ADC Regulator Current Interrupt Enable"
                        case CADCAccumulatedCurrentInterruptEnable = "C-ADC Accumulated Current Interrupt Enable"
                        case CADCInstantaneousCurrentInterruptEnable = "C-ADC Instantaneous Current Interrupt Enable"
                        case BandGapSampleConfiguration = "Band Gap Sample Configuration"
                        case BandGapCalibrationNominal = "Band Gap Calibration Nominal"
                        case BandGapCalibrationLinear = "Band Gap Calibration Linear"
                        case BandGapLockEnable = "Band Gap Lock Enable"
                        case BandGapLock = "Band Gap Lock"
                        case PLLSoftwareEnable = "PLL Software Enable"
                        case PLLLock = "PLL Lock"
                        case PLLLockChangeInterruptFlag = "PLL Lock Change Interrupt Flag"
                        case PLLLockChangeInterruptEnable = "PLL Lock Change Interrupt Enable"
                        case PowerReductionLINUARTInterface = "Power Reduction LIN UART Interface"
                        case ExternalInterruptSenseControl0Bit1 = "External Interrupt Sense Control 0 Bit 1"
                        case ExternalInterruptSenseControl0Bit0 = "External Interrupt Sense Control 0 Bit 0"
                        case ExternalInterruptFlag0 = "External Interrupt Flag 0"
                        case WatchdogTimerComfigurationLockbits = "Watchdog Timer Comfiguration Lock bits"
                        case WatchdogTimerComfigurationLockEnable = "Watchdog Timer Comfiguration Lock Enable"
                        case WakeupTimerInterruptFlag = "Wake-up Timer Interrupt Flag"
                        case WakeupTimerInterruptEnable = "Wake-up Timer Interrupt Enable"
                        case WakeupTimerReset = "Wake-up Timer Reset"
                        case WakeupTimerEnable = "Wake-up Timer Enable"
                        case WakeupTimerPrescalerBits = "Wake-up Timer Prescaler Bits"
                        case ClockoutputonPORTE7 = "Clock output on PORTE7"
                        case SelectClockSourceStartuptime = "Select Clock Source : Start-up time"
                        case AnalogComparatorInterruptModeSelect = "Analog Comparator Interrupt Mode Select"
                        case USARTTransmitComplete = "USART Transmit Complete"
                        case FrameError = "Frame Error"
                        case DataOverRun = "Data OverRun"
                        case DoubletheUSARTTransmissionSpeed = "Double the USART Transmission Speed"
                        case ParityMode = "Parity Mode"
                        case TWIAddressMask = "TWI Address Mask"
                        case TWISTARTConditionBit = "TWI START Condition Bit"
                        case TWISTOPConditionBit = "TWI STOP Condition Bit"
                        case TWIWriteCollisionFlag = "TWI Write Collision Flag"
                        case TWIPrescalerBits = "TWI Prescaler Bits"
                        case TWISlaveAddress = "TWI (Slave) Address"
                        case SPIClockRateSelect1and0 = "SPI Clock Rate Select 1 and 0"
                        case CompareMatchOutputAMode = "Compare Match Output A Mode"
                        case CompareMatchOutputBMode = "Compare Match Output B Mode"
                        case TimerCounter0OutputCompareBMatchFlag = "Timer/Counter0 Output Compare B Match Flag"
                        case TimerCounter0OutputCompareAMatchFlag = "Timer/Counter0 Output Compare A Match Flag"
                        case EnableExternalClockInputforAMR = "Enable External Clock Input for AMR"
                        case TimerCounter2AsynchronousMode = "Timer/Counter2 Asynchronous Mode"
                        case TimerCounter2OutputCompareRegisterAUpdateBusy = "Timer/Counter2 Output Compare Register A Update Busy"
                        case TimerCounter2OutputCompareRegisterBUpdateBusy = "Timer/Counter2 Output Compare Register B Update Busy"
                        case TimerCounter2ControlRegisterAUpdateBusy = "Timer/Counter2 Control Register A Update Busy"
                        case TimerCounter2ControlRegisterBUpdateBusy = "Timer/Counter2 Control Register B Update Busy"
                        case CompareOutputModeforChannelC = "Compare Output Mode for Channel C"
                        case InputCapture5NoiseCanceller = "Input Capture 5 Noise Canceller"
                        case InputCapture5EdgeSelect = "Input Capture 5 Edge Select"
                        case ForceOutputCompareforChannelC = "Force Output Compare for Channel C"
                        case TimerCounter5InputCaptureInterruptEnable = "Timer/Counter5 Input Capture Interrupt Enable"
                        case TimerCounter5OutputCompareCMatchInterruptEnable = "Timer/Counter5 Output Compare C Match Interrupt Enable"
                        case TimerCounter5OutputCompareBMatchInterruptEnable = "Timer/Counter5 Output Compare B Match Interrupt Enable"
                        case TimerCounter5OutputCompareAMatchInterruptEnable = "Timer/Counter5 Output Compare A Match Interrupt Enable"
                        case TimerCounter5OverflowInterruptEnable = "Timer/Counter5 Overflow Interrupt Enable"
                        case TimerCounter5InputCaptureFlag = "Timer/Counter5 Input Capture Flag"
                        case TimerCounter5OutputCompareCMatchFlag = "Timer/Counter5 Output Compare C Match Flag"
                        case TimerCounter5OutputCompareBMatchFlag = "Timer/Counter5 Output Compare B Match Flag"
                        case TimerCounter5OutputCompareAMatchFlag = "Timer/Counter5 Output Compare A Match Flag"
                        case TimerCounter5OverflowFlag = "Timer/Counter5 Overflow Flag"
                        case InputCapture4NoiseCanceller = "Input Capture 4 Noise Canceller"
                        case InputCapture4EdgeSelect = "Input Capture 4 Edge Select"
                        case TimerCounter4InputCaptureInterruptEnable = "Timer/Counter4 Input Capture Interrupt Enable"
                        case TimerCounter4OutputCompareCMatchInterruptEnable = "Timer/Counter4 Output Compare C Match Interrupt Enable"
                        case TimerCounter4InputCaptureFlag = "Timer/Counter4 Input Capture Flag"
                        case TimerCounter4OutputCompareCMatchFlag = "Timer/Counter4 Output Compare C Match Flag"
                        case TimerCounter4OutputCompareBMatchFlag = "Timer/Counter4 Output Compare B Match Flag"
                        case TimerCounter4OutputCompareAMatchFlag = "Timer/Counter4 Output Compare A Match Flag"
                        case InputCapture3NoiseCanceller = "Input Capture 3 Noise Canceller"
                        case TimerCounter3InputCaptureFlag = "Timer/Counter3 Input Capture Flag"
                        case TimerCounter3OutputCompareBMatchFlag = "Timer/Counter3 Output Compare B Match Flag"
                        case TimerCounter3OutputCompareAMatchFlag = "Timer/Counter3 Output Compare A Match Flag"
                        case InputCapture1NoiseCanceller = "Input Capture 1 Noise Canceller"
                        case TimerCounter1OutputCompareBMatchFlag = "Timer/Counter1 Output Compare B Match Flag"
                        case TimerCounter1OutputCompareAMatchFlag = "Timer/Counter1 Output Compare A Match Flag"
                        case extPARampDownLeadTime = "ext. PA Ramp Down Lead Time"
                        case extPARampUpLeadTime = "ext. PA Ramp Up Lead Time"
                        case PowerAmplifierRampDownFrequencyInversion = "Power Amplifier Ramp Down Frequency Inversion"
                        case PowerAmplifierRampUpFrequencyInversion = "Power Amplifier Ramp Up Frequency Inversion"
                        case MACShortAddresslowByteforFrameFilter0 = "MAC Short Address low Byte for Frame Filter 0"
                        case MACShortAddresshighByteforFrameFilter0 = "MAC Short Address high Byte for Frame Filter 0"
                        case MACPersonalAreaNetworkIDlowByteforFrameFilter0 = "MAC Personal Area Network ID low Byte for Frame Filter 0"
                        case MACPersonalAreaNetworkIDhighByteforFrameFilter0 = "MAC Personal Area Network ID high Byte for Frame Filter 0"
                        case MACShortAddresslowByteforFrameFilter1 = "MAC Short Address low Byte for Frame Filter 1"
                        case MACShortAddresshighByteforFrameFilter1 = "MAC Short Address high Byte for Frame Filter 1"
                        case MACPersonalAreaNetworkIDlowByteforFrameFilter1 = "MAC Personal Area Network ID low Byte for Frame Filter 1"
                        case MACPersonalAreaNetworkIDhighByteforFrameFilter1 = "MAC Personal Area Network ID high Byte for Frame Filter 1"
                        case MACShortAddresslowByteforFrameFilter2 = "MAC Short Address low Byte for Frame Filter 2"
                        case MACShortAddresshighByteforFrameFilter2 = "MAC Short Address high Byte for Frame Filter 2"
                        case MACPersonalAreaNetworkIDlowByteforFrameFilter2 = "MAC Personal Area Network ID low Byte for Frame Filter 2"
                        case MACPersonalAreaNetworkIDhighByteforFrameFilter2 = "MAC Personal Area Network ID high Byte for Frame Filter 2"
                        case MACShortAddresslowByteforFrameFilter3 = "MAC Short Address low Byte for Frame Filter 3"
                        case MACShortAddresshighByteforFrameFilter3 = "MAC Short Address high Byte for Frame Filter 3"
                        case MACPersonalAreaNetworkIDlowByteforFrameFilter3 = "MAC Personal Area Network ID low Byte for Frame Filter 3"
                        case MACPersonalAreaNetworkIDhighByteforFrameFilter3 = "MAC Personal Area Network ID high Byte for Frame Filter 3"
                        case MultipleAddressFilter3Enable = "Multiple Address Filter 3 Enable"
                        case MultipleAddressFilter2Enable = "Multiple Address Filter 2 Enable"
                        case MultipleAddressFilter1Enable = "Multiple Address Filter 1 Enable"
                        case MultipleAddressFilter0Enable = "Multiple Address Filter 0 Enable"
                        case SetDataPendingbitforaddressfilter3 = "Set Data Pending bit for address filter 3."
                        case EnablePANCoordinatormodeforaddressfilter3 = "Enable PAN Coordinator mode for address filter 3."
                        case SetDataPendingbitforaddressfilter2 = "Set Data Pending bit for address filter 2."
                        case EnablePANCoordinatormodeforaddressfilter2 = "Enable PAN Coordinator mode for address filter 2."
                        case SetDataPendingbitforaddressfilter1 = "Set Data Pending bit for address filter 1."
                        case EnablePANCoordinatormodeforaddressfilter1 = "Enable PAN Coordinator mode for address filter 1."
                        case SetDataPendingbitforaddressfilter0 = "Set Data Pending bit for address filter 0."
                        case EnablePANCoordinatormodeforaddressfilter0 = "Enable PAN Coordinator mode for address filter 0."
                        case RequestAESOperation = "Request AES Operation."
                        case SetAESOperationMode = "Set AES Operation Mode"
                        case SetAESOperationDirection = "Set AES Operation Direction"
                        case AESInterruptEnable = "AES Interrupt Enable"
                        case AESOperationFinishedwithError = "AES Operation Finished with Error"
                        case AESOperationFinishedwithSuccess = "AES Operation Finished with Success"
                        case AESPlainandCipherTextBuffer = "AES Plain and Cipher Text Buffer"
                        case AESEncryptionDecryptionKeyBuffer = "AES Encryption/Decryption Key Buffer"
                        case CCAAlgorithmStatus = "CCA Algorithm Status"
                        case CCAStatusResult = "CCA Status Result"
                        case Testmodestatus = "Test mode status"
                        case TransceiverMainStatus = "Transceiver Main Status"
                        case TransactionStatus = "Transaction Status"
                        case StateControlCommand = "State Control Command"
                        case EnablePhaseMeasurementUnit = "Enable Phase Measurement Unit"
                        case StartofPhaseMeasurementUnit = "Start of Phase Measurement Unit"
                        case PMUIFInverse = "PMU IF Inverse"
                        case ExternalPAsupportenable = "External PA support enable"
                        case ConnectFrameStartIRQtoTC1 = "Connect Frame Start IRQ to TC1"
                        case EnableAutomaticCRCCalculation = "Enable Automatic CRC Calculation"
                        case EnablePLLTXfilter = "Enable PLL TX filter"
                        case TransmitPowerSetting = "Transmit Power Setting"
                        case ReceivedFrameCRCStatus = "Received Frame CRC Status"
                        case RandomValue = "Random Value"
                        case ReceiverSignalStrengthIndicator = "Receiver Signal Strength Indicator"
                        case EnergyDetectionLevel = "Energy Detection Level"
                        case ManualCCAMeasurementRequest = "Manual CCA Measurement Request"
                        case SelectCCAMeasurementMode = "Select CCA Measurement Mode"
                        case RXTXChannelSelection = "RX/TX Channel Selection"
                        case CSThresholdLevelforCCAMeasurement = "CS Threshold Level for CCA Measurement"
                        case EDThresholdLevelforCCAMeasurement = "ED Threshold Level for CCA Measurement"
                        case ReceiverSensitivityControl = "Receiver Sensitivity Control"
                        case StartofFrameDelimiterValue = "Start of Frame Delimiter Value"
                        case RXSafeMode = "RX Safe Mode"
                        case DataRateSelection = "Data Rate Selection"
                        case AntennaDiversityAntennaStatus = "Antenna Diversity Antenna Status"
                        case EnableAntennaDiversity = "Enable Antenna Diversity"
                        case EnableExternalAntennaSwitchControl = "Enable External Antenna Switch Control"
                        case StaticAntennaDiversitySwitchControl = "Static Antenna Diversity Switch Control"
                        case AwakeInterruptEnable = "Awake Interrupt Enable"
                        case TXENDInterruptEnable = "TX_END Interrupt Enable"
                        case AddressMatchInterruptEnable = "Address Match Interrupt Enable"
                        case EndofEDMeasurementInterruptEnable = "End of ED Measurement Interrupt Enable"
                        case RXENDInterruptEnable = "RX_END Interrupt Enable"
                        case RXSTARTInterruptEnable = "RX_START Interrupt Enable"
                        case PLLUnlockInterruptEnable = "PLL Unlock Interrupt Enable"
                        case PLLLockInterruptEnable = "PLL Lock Interrupt Enable"
                        case AwakeInterruptStatus = "Awake Interrupt Status"
                        case TXENDInterruptStatus = "TX_END Interrupt Status"
                        case AddressMatchInterruptStatus = "Address Match Interrupt Status"
                        case EndofEDMeasurementInterruptStatus = "End of ED Measurement Interrupt Status"
                        case RXENDInterruptStatus = "RX_END Interrupt Status"
                        case RXSTARTInterruptStatus = "RX_START Interrupt Status"
                        case PLLUnlockInterruptStatus = "PLL Unlock Interrupt Status"
                        case PLLLockInterruptStatus = "PLL Lock Interrupt Status"
                        case AddressMatchInterruptenableAddressfilter3 = "Address Match Interrupt enable Address filter 3"
                        case AddressMatchInterruptenableAddressfilter2 = "Address Match Interrupt enable Address filter 2"
                        case AddressMatchInterruptenableAddressfilter1 = "Address Match Interrupt enable Address filter 1"
                        case AddressMatchInterruptenableAddressfilter0 = "Address Match Interrupt enable Address filter 0"
                        case TransmitStartInterruptenable = "Transmit Start Interrupt enable"
                        case AddressMatchInterruptStatusAddressfilter3 = "Address Match Interrupt Status Address filter 3"
                        case AddressMatchInterruptStatusAddressfilter2 = "Address Match Interrupt Status Address filter 2"
                        case AddressMatchInterruptStatusAddressfilter1 = "Address Match Interrupt Status Address filter 1"
                        case AddressMatchInterruptStatusAddressfilter0 = "Address Match Interrupt Status Address filter 0"
                        case TransmitStartInterruptStatus = "Transmit Start Interrupt Status"
                        case UseExternalAVDDRegulator = "Use External AVDD Regulator"
                        case AVDDSupplyVoltageValid = "AVDD Supply Voltage Valid"
                        case UseExternalDVDDRegulator = "Use External DVDD Regulator"
                        case DVDDSupplyVoltageValid = "DVDD Supply Voltage Valid"
                        case BatteryMonitorInterruptStatus = "Battery Monitor Interrupt Status"
                        case BatteryMonitorInterruptEnable = "Battery Monitor Interrupt Enable"
                        case BatteryMonitorStatus = "Battery Monitor Status"
                        case BatteryMonitorVoltageRange = "Battery Monitor Voltage Range"
                        case BatteryMonitorThresholdVoltage = "Battery Monitor Threshold Voltage"
                        case CrystalOscillatorOperatingMode = "Crystal Oscillator Operating Mode"
                        case CrystalOscillatorLoadCapacitanceTrimming = "Crystal Oscillator Load Capacitance Trimming"
                        case ChannelNumber = "Channel Number"
                        case ChannelBand = "Channel Band"
                        case PreventFrameReception = "Prevent Frame Reception"
                        case ReceiverOverrideFunction = "Receiver Override Function"
                        case ReduceReceiverSensitivity = "Reduce Receiver Sensitivity"
                        case SmartReceivingModeTiming = "Smart Receiving Mode Timing"
                        case ReciverSmartReceivingModeEnable = "Reciver Smart Receiving Mode Enable"
                        case SmartReceivingModeReducedSensitivityEnable = "Smart Receiving Mode Reduced Sensitivity Enable"
                        case PLLSmartReceivingModeEnable = "PLL Smart Receiving Mode Enable"
                        case SmartReceivingModeIPANHandlingEnable = "Smart Receiving Mode IPAN Handling Enable"
                        case SmartReceivinginExtendedOperatingModesEnable = "Smart Receiving in Extended Operating Modes Enable"
                        case FilterReservedFrames = "Filter Reserved Frames"
                        case ProcessReservedFrames = "Process Reserved Frames"
                        case ReduceAcknowledgmentTime = "Reduce Acknowledgment Time"
                        case EnablePromiscuousMode = "Enable Promiscuous Mode"
                        case StartCalibrationLoopofFilterTuningNetwork = "Start Calibration Loop of Filter Tuning Network"
                        case StartCenterFrequencyCalibration = "Start Center Frequency Calibration"
                        case StartDelayCellCalibration = "Start Delay Cell Calibration"
                        case PartNumber = "Part Number"
                        case VersionNumber = "Version Number"
                        case ManufacturerIDLowByte = "Manufacturer ID (Low Byte)"
                        case ManufacturerIDHighByte = "Manufacturer ID (High Byte)"
                        case MACShortAddress = "MAC Short Address"
                        case MACPersonalAreaNetworkID = "MAC Personal Area Network ID"
                        case MACIEEEAddress = "MAC IEEE Address"
                        case MaximumNumberofFrameRetransmissionAttempts = "Maximum Number of Frame Re-transmission Attempts"
                        case MaximumNumberofCSMACAProcedureRepetitionAttempts = "Maximum Number of CSMA-CA Procedure Repetition Attempts"
                        case SetSlottedAcknowledgment = "Set Slotted Acknowledgment"
                        case SeedValueforCSMARandomNumberGenerator = "Seed Value for CSMA Random Number Generator"
                        case AcknowledgmentFrameFilterMode = "Acknowledgment Frame Filter Mode"
                        case SetFramePendingSubfield = "Set Frame Pending Sub-field"
                        case DisableAcknowledgmentFrameTransmission = "Disable Acknowledgment Frame Transmission"
                        case SetPersonalAreaNetworkCoordinator = "Set Personal Area Network Coordinator"
                        case MaximumBackoffExponent = "Maximum Back-off Exponent"
                        case MinimumBackoffExponent = "Minimum Back-off Exponent"
                        case DigitalTestControllerRegister = "Digital Test Controller Register"
                        case ReceivedFrameLength = "Received Frame Length"
                        case SymbolCounterTransmitFrameTimestampRegisterHHByte = "Symbol Counter Transmit Frame Timestamp Register HH-Byte"
                        case SymbolCounterTransmitFrameTimestampRegisterHLByte = "Symbol Counter Transmit Frame Timestamp Register HL-Byte"
                        case SymbolCounterTransmitFrameTimestampRegisterLHByte = "Symbol Counter Transmit Frame Timestamp Register LH-Byte"
                        case SymbolCounterTransmitFrameTimestampRegisterLLByte = "Symbol Counter Transmit Frame Timestamp Register LL-Byte"
                        case SymbolCounterOutputCompareRegister1HHByte = "Symbol Counter Output Compare Register 1 HH-Byte"
                        case SymbolCounterOutputCompareRegister1HLByte = "Symbol Counter Output Compare Register 1 HL-Byte"
                        case SymbolCounterOutputCompareRegister1LHByte = "Symbol Counter Output Compare Register 1 LH-Byte"
                        case SymbolCounterOutputCompareRegister1LLByte = "Symbol Counter Output Compare Register 1 LL-Byte"
                        case SymbolCounterOutputCompareRegister2HHByte = "Symbol Counter Output Compare Register 2 HH-Byte"
                        case SymbolCounterOutputCompareRegister2HLByte = "Symbol Counter Output Compare Register 2 HL-Byte"
                        case SymbolCounterOutputCompareRegister2LHByte = "Symbol Counter Output Compare Register 2 LH-Byte"
                        case SymbolCounterOutputCompareRegister2LLByte = "Symbol Counter Output Compare Register 2 LL-Byte"
                        case SymbolCounterOutputCompareRegister3HHByte = "Symbol Counter Output Compare Register 3 HH-Byte"
                        case SymbolCounterOutputCompareRegister3HLByte = "Symbol Counter Output Compare Register 3 HL-Byte"
                        case SymbolCounterOutputCompareRegister3LHByte = "Symbol Counter Output Compare Register 3 LH-Byte"
                        case SymbolCounterOutputCompareRegister3LLByte = "Symbol Counter Output Compare Register 3 LL-Byte"
                        case SymbolCounterFrameTimestampRegisterHHByte = "Symbol Counter Frame Timestamp Register HH-Byte"
                        case SymbolCounterFrameTimestampRegisterHLByte = "Symbol Counter Frame Timestamp Register HL-Byte"
                        case SymbolCounterFrameTimestampRegisterLHByte = "Symbol Counter Frame Timestamp Register LH-Byte"
                        case SymbolCounterFrameTimestampRegisterLLByte = "Symbol Counter Frame Timestamp Register LL-Byte"
                        case SymbolCounterBeaconTimestampRegisterHHByte = "Symbol Counter Beacon Timestamp Register HH-Byte"
                        case SymbolCounterBeaconTimestampRegisterHLByte = "Symbol Counter Beacon Timestamp Register HL-Byte"
                        case SymbolCounterBeaconTimestampRegisterLHByte = "Symbol Counter Beacon Timestamp Register LH-Byte"
                        case SymbolCounterBeaconTimestampRegisterLLByte = "Symbol Counter Beacon Timestamp Register LL-Byte"
                        case SymbolCounterRegisterHHByte = "Symbol Counter Register HH-Byte"
                        case SymbolCounterRegisterHLByte = "Symbol Counter Register HL-Byte"
                        case SymbolCounterRegisterLHByte = "Symbol Counter Register LH-Byte"
                        case SymbolCounterRegisterLLByte = "Symbol Counter Register LL-Byte"
                        case BackoffSlotCounterIRQ = "Backoff Slot Counter IRQ"
                        case SymbolCounterOverflowIRQ = "Symbol Counter Overflow IRQ"
                        case CompareUnit3CompareMatchIRQ = "Compare Unit 3 Compare Match IRQ"
                        case BackoffSlotCounterIRQenable = "Backoff Slot Counter IRQ enable"
                        case SymbolCounterOverflowIRQenable = "Symbol Counter Overflow IRQ enable"
                        case SymbolCounterCompareMatch3IRQenable = "Symbol Counter Compare Match 3 IRQ enable"
                        case SymbolCounterbusy = "Symbol Counter busy"
                        case ReservedBit = "Reserved Bit"
                        case SymbolCounterBeaconTimestampMaskRegister = "Symbol Counter Beacon Timestamp Mask Register"
                        case Clockdividerforsynchronousclocksource16MHzTransceiverClock = "Clock divider for synchronous clock source (16MHz Transceiver Clock)"
                        case EnableExternalClockSourceonPG2 = "Enable External Clock Source on PG2"
                        case BackoffSlotCounterenable = "Backoff Slot Counter enable"
                        case SymbolCounterSynchronization = "Symbol Counter Synchronization"
                        case ManualBeaconTimestamp = "Manual Beacon Timestamp"
                        case SymbolCounterenable = "Symbol Counter enable"
                        case SymbolCounterClockSourceselect = "Symbol Counter Clock Source select"
                        case SymbolCounterAutomaticTimestampingenable = "Symbol Counter Automatic Timestamping enable"
                        case SymbolCounterCompareUnit3Modeselect = "Symbol Counter Compare Unit 3 Mode select"
                        case SymbolCounterCompareSourceselectregisterforCompareUnit3 = "Symbol Counter Compare Source select register for Compare Unit 3"
                        case SymbolCounterCompareSourceselectregisterforCompareUnit2 = "Symbol Counter Compare Source select register for Compare Unit 2"
                        case SymbolCounterCompareSourceselectregisterforCompareUnits = "Symbol Counter Compare Source select register for Compare Units"
                        case SymbolCounterReceivedFrameTimestampRegisterHHByte = "Symbol Counter Received Frame Timestamp Register HH-Byte"
                        case SymbolCounterReceivedFrameTimestampRegisterHLByte = "Symbol Counter Received Frame Timestamp Register HL-Byte"
                        case SymbolCounterReceivedFrameTimestampRegisterLHByte = "Symbol Counter Received Frame Timestamp Register LH-Byte"
                        case SymbolCounterReceivedFrameTimestampRegisterLLByte = "Symbol Counter Received Frame Timestamp Register LL-Byte"
                        case EEPROMProgrammingEnable = "EEPROM Programming Enable"
                        case OnChipDebugRegisterData = "On-Chip Debug Register Data"
                        case ExternalInterrupt3SenseControlBit = "External Interrupt 3 Sense Control Bit"
                        case ExternalInterrupt2SenseControlBit = "External Interrupt 2 Sense Control Bit"
                        case ExternalInterrupt1SenseControlBit = "External Interrupt 1 Sense Control Bit"
                        case ExternalInterrupt0SenseControlBit = "External Interrupt 0 Sense Control Bit"
                        case ExternalInterrupt7SenseControlBit = "External Interrupt 7 Sense Control Bit"
                        case ExternalInterrupt6SenseControlBit = "External Interrupt 6 Sense Control Bit"
                        case ExternalInterrupt5SenseControlBit = "External Interrupt 5 Sense Control Bit"
                        case ExternalInterrupt4SenseControlBit = "External Interrupt 4 Sense Control Bit"
                        case ExternalInterruptFlag = "External Interrupt Flag"
                        case ADCLeftAdjustResult = "ADC Left Adjust Result"
                        case AVDDSupplyVoltageOK = "AVDD Supply Voltage OK"
                        case ReferenceVoltageOK = "Reference Voltage OK"
                        case AnalogChannelChange = "Analog Channel Change"
                        case ADCTrackandHoldTime = "ADC Track-and-Hold Time"
                        case ADCStartupTime = "ADC Start-up Time"
                        case ReservedBits = "Reserved Bits"
                        case DisableADC70DigitalInput = "Disable ADC7:0 Digital Input"
                        case PoweronResetFlag = "Power-on Reset Flag"
                        case OscillatorCalibrationTuningValue = "Oscillator Calibration Tuning Value"
                        case GeneralPurposeIORegister2Value = "General Purpose I/O Register 2 Value"
                        case GeneralPurposeIORegister1Value = "General Purpose I/O Register 1 Value"
                        case GeneralPurposeIORegister0Value = "General Purpose I/O Register 0 Value"
                        case PowerReductionSRAM3 = "Power Reduction SRAM3"
                        case PowerReductionSRAM2 = "Power Reduction SRAM2"
                        case PowerReductionSRAM1 = "Power Reduction SRAM1"
                        case PowerReductionSRAM0 = "Power Reduction SRAM0"
                        case PowerReductionTransceiver = "Power Reduction Transceiver"
                        case PowerReductionTimerCounter5 = "Power Reduction Timer/Counter5"
                        case PowerReductionPGA = "Power Reduction PGA"
                        case EnableExtendedAddressModeforExtraRows = "Enable Extended Address Mode for Extra Rows"
                        case AddressforExtendedAddressModeofExtraRows = "Address for Extended Address Mode of Extra Rows"
                        case FineCalibrationBits = "Fine Calibration Bits"
                        case CoarseCalibrationBits = "Coarse Calibration Bits"
                        case MultipurposeTransceiverControlBit = "Multi-purpose Transceiver Control Bit"
                        case ForceTransceiverReset = "Force Transceiver Reset"
                        case DRTSwitchOK = "DRT Switch OK"
                        case EnableSRAMDataRetention = "Enable SRAM Data Retention"
                        case LowByteDataRegisterBits = "Low-Byte Data Register Bits"
                        case HighByteDataRegisterBits = "High-Byte Data Register Bits"
                        case CalibrationDone = "Calibration Done"
                        case ComparatorOutput = "Comparator Output"
                        case CalibrationActive = "Calibration Active"
                        case TemperatureCoefficientofCurrentSource = "Temperature Coefficient of Current Source"
                        case ShortLowerCalibrationCircuit = "Short Lower Calibration Circuit"
                        case EnableAutomaticCalibration = "Enable Automatic Calibration"
                        case DriverStrengthPortF = "Driver Strength Port F"
                        case DriverStrengthPortE = "Driver Strength Port E"
                        case DriverStrengthPortD = "Driver Strength Port D"
                        case DriverStrengthPortB = "Driver Strength Port B"
                        case DriverStrengthPortG = "Driver Strength Port G"
                        case Selectbootsize = "Select boot size"
                        case XTALDivideSelectBit6 = "XTAL Divide Select Bit 6"
                        case XTALDivideSelectBit5 = "XTAL Divide Select Bit 5"
                        case XTALDivideSelectBit4 = "XTAL Divide Select Bit 4"
                        case XTALDivideSelectBit3 = "XTAL Divide Select Bit 3"
                        case XTALDivideSelectBit2 = "XTAL Divide Select Bit 2"
                        case XTALDivideSelectBit1 = "XTAL Divide Select Bit 1"
                        case XTALDivideSelectBit0 = "XTAL Divide Select Bit 0"
                        case PowerAmplifierBufferLeadTime = "Power Amplifier Buffer Lead Time"
                        case PowerAmplifierLeadTime = "Power Amplifier Lead Time"
                        case PowerReductionUSART0 = "Power Reduction USART0"
                        case ATmega161compabilitymode = "ATmega161 compability mode"
                        case PulseWidthModulatorSelectBits = "Pulse Width Modulator Select Bits"
                        case FordeOutputCompare = "Forde Output Compare"
                        case PulseWidthModulatorSelectBit0 = "Pulse Width Modulator Select Bit 0"
                        case PulseWidthModulatorSelectBit1 = "Pulse Width Modulator Select Bit 1"
                        case AsynchronousTimer2 = "Asynchronous Timer 2"
                        case USARTBaudRateRegisterHighbits = "USART Baud Rate Register High bits"
                        case USARTBaudRateRegisterLowbits = "USART Baud Rate Register Low bits"
                        case InterruptSenseControl1bits = "Interrupt Sense Control 1 bits"
                        case InterruptSenseControl0bits = "Interrupt Sense Control 0 bits"
                        case SleepModeSelectBit2 = "Sleep Mode Select Bit 2"
                        case SleepmodeSelectBit0 = "Sleep mode Select Bit 0"
                        case WaitStateSectorLimitBits = "Wait State Sector Limit Bits"
                        case WaitStateSelectBit1forLowerSector = "Wait State Select Bit 1 for Lower Sector"
                        case WaitStateSelectBit1forUpperSector = "Wait State Select Bit 1 for Upper Sector"
                        case ExternalMemoryHighMaskBits = "External Memory High Mask Bits"
                        case PrescalerResetTimerCounter3TimerCounter1andTimerCounter0 = "Prescaler Reset Timer/Counter3, Timer/Counter1 and Timer/Counter0"
                        case EEPROMAddressRegisterbits = "EEPROM Address Register bits"
                        case EEPROMDataRegisterbits = "EEPROM Data Register bits"
                        case PinChangeInterruptmaskbits = "Pin Change Interrupt mask bits"
                        case ClockoutputonPORTB1 = "Clock output on PORTB1"
                        case SPIClockRateSelect1 = "SPI Clock Rate Select 1"
                        case SPIClockRateSelect0 = "SPI Clock Rate Select 0"
                        case BODPowerDowninSleep = "BOD Power Down in Sleep"
                        case BODPowerDowninSleepEnable = "BOD Power Down in Sleep Enable"
                        case Disableexternalreset = "Disable external reset"
                        case TimerCounter2OutputCompareFlag2 = "Timer/Counter2 Output Compare Flag 2"
                        case StartConditionInterruptFlag = "Start Condition Interrupt Flag"
                        case CounterOverflowInterruptFlag = "Counter Overflow Interrupt Flag"
                        case StopConditionFlag = "Stop Condition Flag"
                        case DataOutputCollision = "Data Output Collision"
                        case USICounterValueBits = "USI Counter Value Bits"
                        case StartConditionInterruptEnable = "Start Condition Interrupt Enable"
                        case CounterOverflowInterruptEnable = "Counter Overflow Interrupt Enable"
                        case USIWireModeBits = "USI Wire Mode Bits"
                        case USIClockSourceSelectBits = "USI Clock Source Select Bits"
                        case ClockStrobe = "Clock Strobe"
                        case ToggleClockPortPin = "Toggle Clock Port Pin"
                        case CharacterSizetogetherwithUCSZ0inUCSRnC = "Character Size - together with UCSZ0 in UCSRnC"
                        case CharacterSizetogetherwithUCSZ2inUCSRnB = "Character Size - together with UCSZ2 in UCSRnB"
                        case LCDEnable = "LCD Enable"
                        case LCDAorBwaveform = "LCD A or B waveform"
                        case LCDInterruptFlag = "LCD Interrupt Flag"
                        case LCDInterruptEnable = "LCD Interrupt Enable"
                        case LCDBufferDisable = "LCD Buffer Disable"
                        case LCDContrastControlDisable = "LCD Contrast Control Disable"
                        case LCDBlanking = "LCD Blanking"
                        case LCDCLockSelect = "LCD CLock Select"
                        case LCD12BiasSelect = "LCD 1/2 Bias Select"
                        case LCDMuxSelects = "LCD Mux Selects"
                        case LCDPortMasks = "LCD Port Masks"
                        case LCDPrescalerSelects = "LCD Prescaler Selects"
                        case LCDClockDividers = "LCD Clock Dividers"
                        case LCDDisplayConfigurationBits = "LCD Display Configuration Bits"
                        case LCDMaximumDriveTime = "LCD Maximum Drive Time"
                        case LCDContrastControls = "LCD Contrast Controls"
                        case PowerReductionLCD = "Power Reduction LCD"
                        case TimerCounter2bits = "Timer/Counter2 bits"
                        case TimerCounter2OutputCompareA = "Timer/Counter2 Output Compare A"
                        case USIDatabits = "USI Data bits"
                        case GeneralPurposeBits = "General Purpose Bits"
                        case PowerReductionUSARTs = "Power Reduction USARTs"
                        case TimerCounter2OutputCompareBbits = "Timer/Counter2 Output Compare B bits"
                        case TWIbitratebits = "TWI bit rate bits"
                        case TWIdatabits = "TWI data bits"
                        case ClockFailureDetection = "Clock Failure Detection"
                        case AnalogComparatorOutputenable = "Analog Comparator Output enable"
                        case RXStartFrameInterruptEnable = "RX Start Frame Interrupt Enable"
                        case StartFrameDetectFlag = "Start Frame Detect Flag"
                        case CompareOutputMode2Abits = "Compare Output Mode 2A bits"
                        case CompareOutputMode2Bbits = "Compare Output Mode 2B bits"
                        case EnableGPIOfunctionofPE4 = "Enable GPIO function of PE4"
                        case CompareOutputMode4Abits = "Compare Output Mode 4A, bits"
                        case InputCapture4NoiseCanceler = "Input Capture 4 Noise Canceler"
                        case ClockSelect4bits = "Clock Select4 bits"
                        case EEPROMMasterProgrammingEnable = "EEPROM Master Programming Enable"
                        case SPIClockRateSelect = "SPI Clock Rate Select"
                        case FailureDetectionInterruptFlag = "Failure Detection Interrupt Flag"
                        case FailureDetectionInterruptEnable = "Failure Detection Interrupt Enable"
                        case PowerReductionTWI0 = "Power Reduction TWI0"
                        case PowerReductionSerialPeripheralInterface0 = "Power Reduction Serial Peripheral Interface 0"
                        case PowerReductionPeripheralTouchController = "Power Reduction Peripheral Touch Controller"
                        case PowerReductionUSART2 = "Power Reduction USART2"
                        case PowerReductionSerialPeripheralInterface1 = "Power Reduction Serial Peripheral Interface 1"
                        case PowerReductionTWI1 = "Power Reduction TWI1"
                        case ExternalResetDisable = "External Reset Disable"
                        case PreserveEEPROMmemorythroughtheChipErasecycle = "Preserve EEPROM memory through the Chip Erase cycle"
                        case PinChangeMaskbits = "Pin Change Mask bits"
                        case USARTBaudratebits = "USART Baud rate bits"
                        case TWIBitratebits = "TWI Bit rate bits"
                        case TimerCounter2OutputCompareAbits = "Timer/Counter2 Output Compare A bits"
                        case USARTRXStartInterruptEnable = "USART RX Start Interrupt Enable"
                        case USARTRXStart = "USART RX Start"
                        case Startframedetectionenable = "Start frame detection enable"
                        case CharacterSizetogetherwithUCSZ0inUCSR1C = "Character Size - together with UCSZ0 in UCSR1C"
                        case CharacterSizetogetherwithUCSZ12inUCSR1B = "Character Size - together with UCSZ12 in UCSR1B"
                        case TimerCounter3OutputCompareMatchBInterruptEnable = "Timer/Counter3 Output Compare Match B Interrupt Enable"
                        case TimerCounter3OutputCompareMatchAInterruptEnable = "Timer/Counter3 Output Compare Match A Interrupt Enable"
                        case WaveformGenerationModebit3 = "Waveform Generation Mode bit 3"
                        case WaveformGenerationModebit2 = "Waveform Generation Mode bit 2"
                        case TimerCounter4OutputCompareMatchBInterruptEnable = "Timer/Counter4 Output Compare Match B Interrupt Enable"
                        case TimerCounter4OutputCompareMatchAInterruptEnable = "Timer/Counter4 Output Compare Match A Interrupt Enable"
                        case ADCDigitalInputDisable = "ADC Digital Input Disable"
                        case CompareOutputModeFastPWM = "Compare Output Mode, Fast PWM"
                        case LCDDisplayConfiguration = "LCD Display Configuration"
                        case LCDContrastControl = "LCD Contrast Control"
                        case PinChangeMask = "Pin Change Mask"
                        case LCDmemorybitsegment = "LCD memory bit segment"
                        case PinChangeMaskRegisterpin8 = "Pin Change Mask Register pin 8"
                        case PinChangeMaskRegisterpin9 = "Pin Change Mask Register pin 9"
                        case PinChangeMaskRegisterpin10 = "Pin Change Mask Register pin 10"
                        case PinChangeMaskRegisterpin11 = "Pin Change Mask Register pin 11"
                        case PinChangeMaskRegisterpin12 = "Pin Change Mask Register pin 12"
                        case PinChangeMaskRegisterpin13 = "Pin Change Mask Register pin 13"
                        case PinChangeMaskRegisterpin14 = "Pin Change Mask Register pin 14"
                        case PinChangeMaskRegisterpin15 = "Pin Change Mask Register pin 15"
                        case PinChangeMaskRegisterpin0 = "Pin Change Mask Register pin 0"
                        case PinChangeMaskRegisterpin1 = "Pin Change Mask Register pin 1"
                        case PinChangeMaskRegisterpin2 = "Pin Change Mask Register pin 2"
                        case PinChangeMaskRegisterpin3 = "Pin Change Mask Register pin 3"
                        case PinChangeMaskRegisterpin4 = "Pin Change Mask Register pin 4"
                        case PinChangeMaskRegisterpin5 = "Pin Change Mask Register pin 5"
                        case PinChangeMaskRegisterpin6 = "Pin Change Mask Register pin 6"
                        case PinChangeMaskRegisterpin7 = "Pin Change Mask Register pin 7"
                        case ClockSelection = "Clock Selection"
                        case ClearTimerCounteronCompareMatch = "Clear Timer/Counter on Compare Match"
                        case TimerCounter1OutputCompareInterruptEnable = "Timer/Counter1 Output Compare Interrupt Enable"
                        case WakeuptimerCalibrationFlag = "Wake-up timer Calibration Flag"
                        case DeepUndervoltageEarlyWarningInterruptFlag = "Deep Under-voltage Early Warning Interrupt Flag"
                        case DeepUndervoltageEarlyWarningInterruptEnable = "Deep Under-voltage Early Warning Interrupt Enable"
                        case PulseWidthModulationofOCoutput = "Pulse Width Modulation of OC output"
                        case PulseWidthModulationModulationofOPCoutput = "Pulse Width Modulation Modulation of OPC output"
                        case PrechargeFETdisable = "Precharge FET disable"
                        case JTAGDisable = "JTAG Disable"
                        case thirtyTwokHzCrystalOscillatorEnable = "32 kHz Crystal Oscillator Enable"
                        case AsynchronousClockSelect = "Asynchronous Clock Select"
                        case ClockSelect0bits = "Clock Select0 bits"
                        case BootResetvectorEnableddefaultaddress0000 = "Boot Reset vector Enabled (default address=$0000)"
                        case CompareOutputMode5Bbits = "Compare Output Mode 5B, bits"
                        case CompareOutputMode5Cbits = "Compare Output Mode 5C, bits"
                        case InputCapture5NoiseCanceler = "Input Capture 5 Noise Canceler"
                        case PrescalersourceofTimerCounter5 = "Prescaler source of Timer/Counter 5"
                        case ForceOutputCompare5A = "Force Output Compare 5A"
                        case ForceOutputCompare5B = "Force Output Compare 5B"
                        case ForceOutputCompare5C = "Force Output Compare 5C"
                        case InputCaptureFlag5 = "Input Capture Flag 5"
                        case OutputCompareFlag5C = "Output Compare Flag 5C"
                        case OutputCompareFlag5B = "Output Compare Flag 5B"
                        case OutputCompareFlag5A = "Output Compare Flag 5A"
                        case CompareOutputMode4Cbits = "Compare Output Mode 4C, bits"
                        case PrescalersourceofTimerCounter4 = "Prescaler source of Timer/Counter 4"
                        case ForceOutputCompare4A = "Force Output Compare 4A"
                        case ForceOutputCompare4B = "Force Output Compare 4B"
                        case ForceOutputCompare4C = "Force Output Compare 4C"
                        case InputCaptureFlag4 = "Input Capture Flag 4"
                        case OutputCompareFlag4C = "Output Compare Flag 4C"
                        case PowerReductionUSART3 = "Power Reduction USART3"
                        case SerialprogramdownloadingSPIenable = "Serial program downloading (SPI) enable"
                        case HysteresisMode = "Hysteresis Mode"
                        case LowPowerMode = "Low Power Mode"
                        case InterruptMode = "Interrupt Mode"
                        case OutputBufferEnable = "Output Buffer Enable"
                        case RuninStandbyMode = "Run in Standby Mode"
                        case NegativeInputMUXSelection = "Negative Input MUX Selection"
                        case PositiveInputMUXSelection = "Positive Input MUX Selection"
                        case InvertACOutput = "Invert AC Output"
                        case DACvoltagereference = "DAC voltage reference"
                        case AnalogComparator0InterruptEnable = "Analog Comparator 0 Interrupt Enable"
                        case AnalogComparatorState = "Analog Comparator State"
                        case ADCFreerunmode = "ADC Freerun mode"
                        case ADCResolution = "ADC Resolution"
                        case Runstandbymode = "Run standby mode"
                        case AccumulationSamples = "Accumulation Samples"
                        case ClockPrescaler = "Clock Pre-scaler"
                        case ReferenceSelection = "Reference Selection"
                        case SampleCapacitanceSelection = "Sample Capacitance Selection"
                        case SamplingDelaySelection = "Sampling Delay Selection"
                        case AutomaticSamplingDelayVariation = "Automatic Sampling Delay Variation"
                        case InitialDelaySelection = "Initial Delay Selection"
                        case WindowComparatorMode = "Window Comparator Mode"
                        case Samplelenght = "Sample lenght"
                        case StartConversionOperation = "Start Conversion Operation"
                        case StartEventInputEnable = "Start Event Input Enable"
                        case ResultReadyInterruptEnable = "Result Ready Interrupt Enable"
                        case WindowComparatorInterruptEnable = "Window Comparator Interrupt Enable"
                        case ResultReadyFlag = "Result Ready Flag"
                        case WindowComparatorFlag = "Window Comparator Flag"
                        case Debugrun = "Debug run"
                        case Temporary = "Temporary"
                        case DutyCycle = "Duty Cycle"
                        case Operationinsleepmode = "Operation in sleep mode"
                        case Operationinactivemode = "Operation in active mode"
                        case Samplefrequency = "Sample frequency"
                        case Bodlevel = "Bod level"
                        case voltagelevelmonitorlevel = "voltage level monitor level"
                        case voltagelevelmonitorinterrruptenable = "voltage level monitor interrrupt enable"
                        case Configuration = "Configuration"
                        case Voltagelevelmonitorinterruptflag = "Voltage level monitor interrupt flag"
                        case Voltagelevelmonitorstatus = "Voltage level monitor status"
                        case RuninStandby = "Run in Standby"
                        case SequentialSelection = "Sequential Selection"
                        case InterruptModeforLUT0 = "Interrupt Mode for LUT0"
                        case InterruptModeforLUT1 = "Interrupt Mode for LUT1"
                        case InterruptModeforLUT2 = "Interrupt Mode for LUT2"
                        case InterruptModeforLUT3 = "Interrupt Mode for LUT3"
                        case InterruptFlags = "Interrupt Flags"
                        case LUTEnable = "LUT Enable"
                        case ClockSourceSelection = "Clock Source Selection"
                        case FilterSelection = "Filter Selection"
                        case OutputEnable = "Output Enable"
                        case EdgeDetectionEnable = "Edge Detection Enable"
                        case LUTInput0SourceSelection = "LUT Input 0 Source Selection"
                        case LUTInput1SourceSelection = "LUT Input 1 Source Selection"
                        case LUTInput2SourceSelection = "LUT Input 2 Source Selection"
                        case TruthTable = "Truth Table"
                        case Clockselect = "Clock select"
                        case Systemclockout = "System clock out"
                        case Prescalerenable = "Prescaler enable"
                        case Prescalerdivision = "Prescaler division"
                        case lockebable = "lock ebable"
                        case SystemOscillatorchanging = "System Oscillator changing"
                        case twentyMHzoscillatorstatus = "20MHz oscillator status"
                        case thirtyTwoKHzoscillatorstatus = "32KHz oscillator status"
                        case three2768kHzCrystalOscillatorstatus = "32.768 kHz Crystal Oscillator status"
                        case ExternalClockstatus = "External Clock status"
                        case Runstandby = "Run standby"
                        case Calibration = "Calibration"
                        case Oscillatortemperaturecoefficient = "Oscillator temperature coefficient"
                        case Lock = "Lock"
                        case Select = "Select"
                        case Crystalstartuptime = "Crystal startup time"
                        case CCPsignature = "CCP signature"
                        case NExclusiveOrVFlag = "N Exclusive Or V Flag"
                        case TransferBit = "Transfer Bit"
                        case GlobalInterruptEnableFlag = "Global Interrupt Enable Flag"
                        case RoundrobinSchedulingEnable = "Round-robin Scheduling Enable"
                        case CompactVectorTable = "Compact Vector Table"
                        case Level0InterruptExecuting = "Level 0 Interrupt Executing"
                        case Level1InterruptExecuting = "Level 1 Interrupt Executing"
                        case NonmaskableInterruptExecuting = "Non-maskable Interrupt Executing"
                        case InterruptLevelPriority = "Interrupt Level Priority"
                        case InterruptVectorwithHighPriority = "Interrupt Vector with High Priority"
                        case EnableCRCscan = "Enable CRC scan"
                        case EnableNMITrigger = "Enable NMI Trigger"
                        case ResetCRCscan = "Reset CRC scan"
                        case CRCSource = "CRC Source"
                        case CRCFlashAccessMode = "CRC Flash Access Mode"
                        case CRCBusy = "CRC Busy"
                        case CRCOk = "CRC Ok"
                        case Softwareeventonchannels = "Software event on channels"
                        case Generatorselector = "Generator selector"
                        case Channelselector = "Channel selector"
                        case WatchdogTimeoutPeriod = "Watchdog Timeout Period"
                        case WatchdogWindowTimeoutPeriod = "Watchdog Window Timeout Period"
                        case BODOperationinSleepMode = "BOD Operation in Sleep Mode"
                        case BODOperationinActiveMode = "BOD Operation in Active Mode"
                        case BODSampleFrequency = "BOD Sample Frequency"
                        case BODLevel = "BOD Level"
                        case FrequencySelect = "Frequency Select"
                        case OscillatorLock = "Oscillator Lock"
                        case EEPROMSave = "EEPROM Save"
                        case ResetPinConfiguration = "Reset Pin Configuration"
                        case StartupTime = "Startup Time"
                        case LockBits = "Lock Bits"
                        case Command = "Command"
                        case Applicationcodewriteprotect = "Application code write protect"
                        case BootLock = "Boot Lock"
                        case Flashbusy = "Flash busy"
                        case EEPROMbusy = "EEPROM busy"
                        case Writeerror = "Write error"
                        case EEPROMReady = "EEPROM Ready"
                        case PinInterrupt = "Pin Interrupt"
                        case SlewRateLimitEnable = "Slew Rate Limit Enable"
                        case InputSenseConfiguration = "Input/Sense Configuration"
                        case Pullupenable = "Pullup enable"
                        case InvertedIOEnable = "Inverted I/O Enable"
                        case EventOutputA = "Event Output A"
                        case EventOutputB = "Event Output B"
                        case EventOutputC = "Event Output C"
                        case EventOutputD = "Event Output D"
                        case EventOutputE = "Event Output E"
                        case EventOutputF = "Event Output F"
                        case CCLLUT0 = "CCL LUT0"
                        case CCLLUT1 = "CCL LUT1"
                        case CCLLUT2 = "CCL LUT2"
                        case CCLLUT3 = "CCL LUT3"
                        case PortMultiplexerUSART0 = "Port Multiplexer USART0"
                        case PortMultiplexerUSART1 = "Port Multiplexer USART1"
                        case PortMultiplexerUSART2 = "Port Multiplexer USART2"
                        case PortMultiplexerUSART3 = "Port Multiplexer USART3"
                        case PortMultiplexerSPI0 = "Port Multiplexer SPI0"
                        case PortMultiplexerTWI0 = "Port Multiplexer TWI0"
                        case PortMultiplexerTCA0 = "Port Multiplexer TCA0"
                        case PortMultiplexerTCB0 = "Port Multiplexer TCB0"
                        case PortMultiplexerTCB1 = "Port Multiplexer TCB1"
                        case PortMultiplexerTCB2 = "Port Multiplexer TCB2"
                        case PortMultiplexerTCB3 = "Port Multiplexer TCB3"
                        case PoweronResetflag = "Power on Reset flag"
                        case BrownoutdetectorResetflag = "Brown out detector Reset flag"
                        case ExternalResetflag = "External Reset flag"
                        case WatchdogResetflag = "Watch dog Reset flag"
                        case SoftwareResetflag = "Software Reset flag"
                        case UPDIResetflag = "UPDI Reset flag"
                        case Softwareresetenable = "Software reset enable"
                        case Correctionenable = "Correction enable"
                        case PrescalingFactor = "Prescaling Factor"
                        case RunInStandby = "Run In Standby"
                        case CTRLASynchronizationBusyFlag = "CTRLA Synchronization Busy Flag"
                        case CountSynchronizationBusyFlag = "Count Synchronization Busy Flag"
                        case PeriodSynchronizationBusyFlag = "Period Synchronization Busy Flag"
                        case ComparatorSynchronizationBusyFlag = "Comparator Synchronization Busy Flag"
                        case OverflowInterruptenable = "Overflow Interrupt enable"
                        case CompareMatchInterruptenable = "Compare Match Interrupt enable"
                        case OverflowInterruptFlag = "Overflow Interrupt Flag"
                        case CompareMatchInterrupt = "Compare Match Interrupt"
                        case Runindebug = "Run in debug"
                        case ErrorCorrectionValue = "Error Correction Value"
                        case ErrorCorrectionSignBit = "Error Correction Sign Bit"
                        case Period = "Period"
                        case PeriodicInterrupt = "Periodic Interrupt"
                        case Sleepenable = "Sleep enable"
                        case Sleepmode = "Sleep mode"
                        case EnableModule = "Enable Module"
                        case Prescaler = "Prescaler"
                        case EnableDoubleSpeed = "Enable Double Speed"
                        case HostOperationEnable = "Host Operation Enable"
                        case DataOrderSetting = "Data Order Setting"
                        case SPIMode = "SPI Mode"
                        case ClientSelectDisable = "Client Select Disable"
                        case BufferWriteMode = "Buffer Write Mode"
                        case BufferModeEnable = "Buffer Mode Enable"
                        case InterruptEnable = "Interrupt Enable"
                        case ClientSelectTriggerInterruptEnable = "Client Select Trigger Interrupt Enable"
                        case DataRegisterEmptyInterruptEnable = "Data Register Empty Interrupt Enable"
                        case TransferCompleteInterruptEnable = "Transfer Complete Interrupt Enable"
                        case ReceiveCompleteInterruptEnable = "Receive Complete Interrupt Enable"
                        case BufferOverflow = "Buffer Overflow"
                        case ClientSelectTriggerInterruptFlag = "Client Select Trigger Interrupt Flag"
                        case DataRegisterEmptyInterruptFlag = "Data Register Empty Interrupt Flag"
                        case TransferCompleteInterruptFlag = "Transfer Complete Interrupt Flag"
                        case ReceiveCompleteInterruptFlag = "Receive Complete Interrupt Flag"
                        case WriteCollision = "Write Collision"
                        case InterruptFlag = "Interrupt Flag"
                        case Externalbreakenable = "External break enable"
                        case OCDMessageRead = "OCD Message Read"
                        case ModuleEnable = "Module Enable"
                        case Waveformgenerationmode = "Waveform generation mode"
                        case AutoLockUpdate = "Auto Lock Update"
                        case Compare0Enable = "Compare 0 Enable"
                        case Compare1Enable = "Compare 1 Enable"
                        case Compare2Enable = "Compare 2 Enable"
                        case Compare0WaveformOutputValue = "Compare 0 Waveform Output Value"
                        case Compare1WaveformOutputValue = "Compare 1 Waveform Output Value"
                        case Compare2WaveformOutputValue = "Compare 2 Waveform Output Value"
                        case SplitModeEnable = "Split Mode Enable"
                        case Direction = "Direction"
                        case LockUpdate = "Lock Update"
                        case PeriodBufferValid = "Period Buffer Valid"
                        case Compare0BufferValid = "Compare 0 Buffer Valid"
                        case Compare1BufferValid = "Compare 1 Buffer Valid"
                        case Compare2BufferValid = "Compare 2 Buffer Valid"
                        case CountonEventInput = "Count on Event Input"
                        case EventAction = "Event Action"
                        case OverflowInterrupt = "Overflow Interrupt"
                        case Compare0Interrupt = "Compare 0 Interrupt"
                        case Compare1Interrupt = "Compare 1 Interrupt"
                        case Compare2Interrupt = "Compare 2 Interrupt"
                        case DebugRun = "Debug Run"
                        case LowCompare0Enable = "Low Compare 0 Enable"
                        case LowCompare1Enable = "Low Compare 1 Enable"
                        case LowCompare2Enable = "Low Compare 2 Enable"
                        case HighCompare0Enable = "High Compare 0 Enable"
                        case HighCompare1Enable = "High Compare 1 Enable"
                        case HighCompare2Enable = "High Compare 2 Enable"
                        case LowCompare0OutputValue = "Low Compare 0 Output Value"
                        case LowCompare1OutputValue = "Low Compare 1 Output Value"
                        case LowCompare2OutputValue = "Low Compare 2 Output Value"
                        case HighCompare0OutputValue = "High Compare 0 Output Value"
                        case HighCompare1OutputValue = "High Compare 1 Output Value"
                        case HighCompare2OutputValue = "High Compare 2 Output Value"
                        case LowUnderflowInterruptEnable = "Low Underflow Interrupt Enable"
                        case HighUnderflowInterruptEnable = "High Underflow Interrupt Enable"
                        case LowCompare0InterruptEnable = "Low Compare 0 Interrupt Enable"
                        case LowCompare1InterruptEnable = "Low Compare 1 Interrupt Enable"
                        case LowCompare2InterruptEnable = "Low Compare 2 Interrupt Enable"
                        case LowUnderflowInterruptFlag = "Low Underflow Interrupt Flag"
                        case HighUnderflowInterruptFlag = "High Underflow Interrupt Flag"
                        case LowCompare2InterruptFlag = "Low Compare 2 Interrupt Flag"
                        case LowCompare1InterruptFlag = "Low Compare 1 Interrupt Flag"
                        case LowCompare0InterruptFlag = "Low Compare 0 Interrupt Flag"
                        case SynchronizeUpdate = "Synchronize Update"
                        case RunStandby = "Run Standby"
                        case TimerMode = "Timer Mode"
                        case PinOutputEnable = "Pin Output Enable"
                        case PinInitialState = "Pin Initial State"
                        case AsynchronousEnable = "Asynchronous Enable"
                        case EventInputEnable = "Event Input Enable"
                        case EventEdge = "Event Edge"
                        case InputCaptureNoiseCancellationFilter = "Input Capture Noise Cancellation Filter"
                        case CaptureorTimeout = "Capture or Timeout"
                        case Run = "Run"
                        case FMPlusEnable = "FM Plus Enable"
                        case SDAHoldTime = "SDA Hold Time"
                        case SDASetupTime = "SDA Setup Time"
                        case DualControlEnable = "Dual Control Enable"
                        case EnableTWIHost = "Enable TWI Host"
                        case SmartModeEnable = "Smart Mode Enable"
                        case InactiveBusTimeout = "Inactive Bus Timeout"
                        case QuickCommandEnable = "Quick Command Enable"
                        case WriteInterruptEnable = "Write Interrupt Enable"
                        case ReadInterruptEnable = "Read Interrupt Enable"
                        case AcknowledgeAction = "Acknowledge Action"
                        case Flush = "Flush"
                        case BusState = "Bus State"
                        case BusError = "Bus Error"
                        case ArbitrationLost = "Arbitration Lost"
                        case ReceivedAcknowledge = "Received Acknowledge"
                        case ClockHold = "Clock Hold"
                        case WriteInterruptFlag = "Write Interrupt Flag"
                        case ReadInterruptFlag = "Read Interrupt Flag"
                        case EnableTWIClient = "Enable TWI Client"
                        case PromiscuousModeEnable = "Promiscuous Mode Enable"
                        case StopInterruptEnable = "Stop Interrupt Enable"
                        case AddressStopInterruptEnable = "Address/Stop Interrupt Enable"
                        case DataInterruptEnable = "Data Interrupt Enable"
                        case ClientAddressorStop = "Client Address or Stop"
                        case ReadWriteDirection = "Read/Write Direction"
                        case Collision = "Collision"
                        case AddressStopInterruptFlag = "Address/Stop Interrupt Flag"
                        case DataInterruptFlag = "Data Interrupt Flag"
                        case AddressEnable = "Address Enable"
                        case AddressMask = "Address Mask"
                        case RXData = "RX Data"
                        case ReceiverDataRegister = "Receiver Data Register"
                        case TransmitDataRegister = "Transmit Data Register"
                        case TransmitDataRegisterCHSIZE9bit = "Transmit Data Register (CHSIZE=9bit)"
                        case WaitForBreak = "Wait For Break"
                        case BreakDetectedFlag = "Break Detected Flag"
                        case InconsistentSyncFieldInterruptFlag = "Inconsistent Sync Field Interrupt Flag"
                        case ReceiveStartInterrupt = "Receive Start Interrupt"
                        case DataRegisterEmptyFlag = "Data Register Empty Flag"
                        case TransmitInterruptFlag = "Transmit Interrupt Flag"
                        case RS485Modeinternaltransmitter = "RS485 Mode internal transmitter"
                        case AutobaudErrorInterruptEnable = "Auto-baud Error Interrupt Enable"
                        case LoopbackModeEnable = "Loop-back Mode Enable"
                        case ReceiverStartFrameInterruptEnable = "Receiver Start Frame Interrupt Enable"
                        case TransmitCompleteInterruptEnable = "Transmit Complete Interrupt Enable"
                        case ReceiverMode = "Receiver Mode"
                        case OpenDrainModeEnable = "Open Drain Mode Enable"
                        case Recieverenable = "Reciever enable"
                        case CommunicationMode = "Communication Mode"
                        case SPIHostModeClockPhase = "SPI Host Mode, Clock Phase"
                        case SPIHostModeDataOrder = "SPI Host Mode, Data Order"
                        case StopBitMode = "Stop Bit Mode"
                        case AutoBaudWindow = "Auto Baud Window"
                        case IrDAEventInputEnable = "IrDA Event Input Enable"
                        case Transmitpulselength = "Transmit pulse length"
                        case ReceiverPulseLenght = "Receiver Pulse Lenght"
                        case AC0referenceselect = "AC0 reference select"
                        case ADC0referenceselect = "ADC0 reference select"
                        case AC0DACREFreferenceenable = "AC0 DACREF reference enable"
                        case ADC0referenceenable = "ADC0 reference enable"
                        case Window = "Window"
                        case Syncronizationbusy = "Syncronization busy"
                        case Lockenable = "Lock enable"
                        case PinChangeEnablebits = "Pin Change Enable bits"
                        case PinChangeEnablemask = "Pin Change Enable mask"
                        case USARTBaudRateRegister = "USART Baud Rate Register"
                        case PinChangeMaskinterrupt = "Pin Change Mask interrupt"
                        case LCDDisplayConfigurations = "LCD Display Configurations"
                        case AT90S44148515compatibilitymode = "AT90S4414/8515 compatibility mode"
                        case CharacterSizeBit2 = "Character Size Bit 2"
                        case USARTBaudRateRegisterbit11 = "USART Baud Rate Register bit 11"
                        case SleepModeSelectBit0 = "Sleep Mode Select Bit 0"
                        case WaitStateSelectorLimitbits = "Wait State Selector Limit bits"
                        case WaitStateSelectBitsforLowerSectorbits = "Wait State Select Bits for Lower Sector, bits"
                        case WaitStateSelectBitsforUpperSectorbit1 = "Wait State Select Bits for Upper Sector, bit 1"
                        case ExternalSRAMXMEMEnable = "External SRAM/XMEM Enable"
                        case WaitStateSelectBitsforUpperSectorbit0 = "Wait State Select Bits for Upper Sector, bit 0"
                        case SleepModeSelectBit1 = "Sleep Mode Select Bit 1"
                        case AT90S44348535compatibilitymode = "AT90S4434/8535 compatibility mode"
                        case AnlogComparatorMultiplexerEnable = "Anlog Comparator Multiplexer Enable"
                        case enableBODandSelectLevel = "Enable BOD and select level"
                        case resetDisabledEnablePB5asioPin = "Reset Disabled (Enable PB5 as i/o pin)"
                    }
                    
                    enum Mask: String, Codable {
                        case zeroX0E = "0x0E"
                        case zeroX01 = "0x01"
                        case zeroX80 = "0x80"
                        case zeroX40 = "0x40"
                        case zeroX20 = "0x20"
                        case zeroX10 = "0x10"
                        case zeroX08 = "0x08"
                        case zeroX06 = "0x06"
                        case zeroX3F = "0x3F"
                        case zeroX03 = "0x03"
                        case zeroX0C = "0x0C"
                        case zeroX30 = "0x30"
                        case zeroX04 = "0x04"
                        case zeroXFF = "0xFF"
                        case zeroXF8 = "0xF8"
                        case zeroXFE = "0xFE"
                        case zeroX02 = "0x02"
                        case zeroX70 = "0x70"
                        case zeroX07 = "0x07"
                        case zeroX0F = "0x0F"
                        case zeroXC0 = "0xC0"
                        case zeroX0FFF = "0x0FFF"
                        case zeroX18 = "0x18"
                        case zeroX1F = "0x1F"
                        case zeroX7F = "0x7F"
                        case zeroX7E = "0x7E"
                        case zeroX60 = "0x60"
                        case zeroXFFFF = "0xFFFF"
                        case zeroXF0 = "0xF0"
                        case zeroX8000 = "0x8000"
                        case zeroX27 = "0x27"
                        case zeroX03FF = "0x03FF"
                        case zeroX3C = "0x3C"
                        case zeroX01FF = "0x01FF"
                        case zeroX24 = "0x24"
                        case zeroXE0 = "0xE0"
                        case zeroX1C = "0x1C"
                        case zeroX07FF = "0x07FF"
                        case zeroXB0 = "0xB0"
                        case zeroXFC = "0xFC"
                        case zeroXFF00 = "0xFF00"
                        case zeroX00FF = "0x00FF"
                        case zeroX6 = "0x6"
                        case zeroX38 = "0x38"
                        case zeroX78 = "0x78"
                        case zeroX3E = "0x3E"
                        case zeroX7C = "0x7C"
                        case zeroX1E = "0x1E"
                    }
                    
                    enum Name: String, Codable {
                        case WDTIE = "WDTIE"
                        case WDTIF = "WDTIF"
                        case REFS0 = "REFS0"
                        case BODLEVEL = "BODLEVEL"
                        case TA0SEL = "TA0SEL"
                        case OCDEN = "OCDEN"
                        case JTAGEN = "JTAGEN"
                        case SPIEN = "SPIEN"
                        case WDTON = "WDTON"
                        case EESAVE = "EESAVE"
                        case BOOTSZ = "BOOTSZ"
                        case BOOTRST = "BOOTRST"
                        case CKDIV8 = "CKDIV8"
                        case CKOUT = "CKOUT"
                        case SUTCKSEL = "SUT_CKSEL"
                        case LB = "LB"
                        case BLB0 = "BLB0"
                        case BLB1 = "BLB1"
                        case JTD = "JTD"
                        case JTRF = "JTRF"
                        case SPIE = "SPIE"
                        case SPE = "SPE"
                        case DORD = "DORD"
                        case MSTR = "MSTR"
                        case CPOL = "CPOL"
                        case CPHA = "CPHA"
                        case SPR = "SPR"
                        case SPIF = "SPIF"
                        case WCOL = "WCOL"
                        case SPI2X = "SPI2X"
                        case SPD = "SPD"
                        case TWINT = "TWINT"
                        case TWEA = "TWEA"
                        case TWSTA = "TWSTA"
                        case TWSTO = "TWSTO"
                        case TWWC = "TWWC"
                        case TWEN = "TWEN"
                        case TWIE = "TWIE"
                        case TWS = "TWS"
                        case TWPS = "TWPS"
                        case TWA = "TWA"
                        case TWGCE = "TWGCE"
                        case RXC0 = "RXC0"
                        case TXC0 = "TXC0"
                        case UDRE0 = "UDRE0"
                        case FE0 = "FE0"
                        case DOR0 = "DOR0"
                        case UPE0 = "UPE0"
                        case U2X0 = "U2X0"
                        case MPCM0 = "MPCM0"
                        case RXCIE0 = "RXCIE0"
                        case TXCIE0 = "TXCIE0"
                        case UDRIE0 = "UDRIE0"
                        case RXEN0 = "RXEN0"
                        case TXEN0 = "TXEN0"
                        case UCSZ02 = "UCSZ02"
                        case RXB80 = "RXB80"
                        case TXB80 = "TXB80"
                        case UMSEL0 = "UMSEL0"
                        case UPM0 = "UPM0"
                        case USBS0 = "USBS0"
                        case UCSZ0 = "UCSZ0"
                        case UCPOL0 = "UCPOL0"
                        case RXC1 = "RXC1"
                        case TXC1 = "TXC1"
                        case UDRE1 = "UDRE1"
                        case FE1 = "FE1"
                        case DOR1 = "DOR1"
                        case UPE1 = "UPE1"
                        case U2X1 = "U2X1"
                        case MPCM1 = "MPCM1"
                        case RXCIE1 = "RXCIE1"
                        case TXCIE1 = "TXCIE1"
                        case UDRIE1 = "UDRIE1"
                        case RXEN1 = "RXEN1"
                        case TXEN1 = "TXEN1"
                        case UCSZ12 = "UCSZ12"
                        case RXB81 = "RXB81"
                        case TXB81 = "TXB81"
                        case UMSEL1 = "UMSEL1"
                        case UPM1 = "UPM1"
                        case USBS1 = "USBS1"
                        case UCSZ1 = "UCSZ1"
                        case UCPOL1 = "UCPOL1"
                        case I = "I"
                        case T = "T"
                        case H = "H"
                        case S = "S"
                        case V = "V"
                        case N = "N"
                        case Z = "Z"
                        case C = "C"
                        case PUD = "PUD"
                        case IVSEL = "IVSEL"
                        case IVCE = "IVCE"
                        case WDRF = "WDRF"
                        case BORF = "BORF"
                        case EXTRF = "EXTRF"
                        case PORF = "PORF"
                        case SRE = "SRE"
                        case SRL = "SRL"
                        case SRW1 = "SRW1"
                        case SRW0 = "SRW0"
                        case XMBK = "XMBK"
                        case XMM = "XMM"
                        case OSCCAL = "OSCCAL"
                        case CLKPCE = "CLKPCE"
                        case CLKPS = "CLKPS"
                        case SM = "SM"
                        case SE = "SE"
                        case RAMPZ0 = "RAMPZ0"
                        case GPIOR = "GPIOR"
                        case GPIOR07 = "GPIOR07"
                        case GPIOR06 = "GPIOR06"
                        case GPIOR05 = "GPIOR05"
                        case GPIOR04 = "GPIOR04"
                        case GPIOR03 = "GPIOR03"
                        case GPIOR02 = "GPIOR02"
                        case GPIOR01 = "GPIOR01"
                        case GPIOR00 = "GPIOR00"
                        case SPMIE = "SPMIE"
                        case RWWSB = "RWWSB"
                        case RWWSRE = "RWWSRE"
                        case BLBSET = "BLBSET"
                        case PGWRT = "PGWRT"
                        case PGERS = "PGERS"
                        case SPMEN = "SPMEN"
                        case ISC3 = "ISC3"
                        case ISC2 = "ISC2"
                        case ISC1 = "ISC1"
                        case ISC0 = "ISC0"
                        case ISC7 = "ISC7"
                        case ISC6 = "ISC6"
                        case ISC5 = "ISC5"
                        case ISC4 = "ISC4"
                        case INT = "INT"
                        case INTF = "INTF"
                        case EEAR = "EEAR"
                        case EEDR = "EEDR"
                        case EERIE = "EERIE"
                        case EEMWE = "EEMWE"
                        case EEWE = "EEWE"
                        case EERE = "EERE"
                        case FOC0A = "FOC0A"
                        case WGM00 = "WGM00"
                        case COM0A = "COM0A"
                        case WGM01 = "WGM01"
                        case CS0 = "CS0"
                        case OCR0A = "OCR0A"
                        case OCIE0A = "OCIE0A"
                        case TOIE0 = "TOIE0"
                        case OCF0A = "OCF0A"
                        case TOV0 = "TOV0"
                        case TSM = "TSM"
                        case PSR310 = "PSR310"
                        case COM1A = "COM1A"
                        case COM1B = "COM1B"
                        case COM1C = "COM1C"
                        case WGM1 = "WGM1"
                        case ICNC1 = "ICNC1"
                        case ICES1 = "ICES1"
                        case CS1 = "CS1"
                        case FOC1A = "FOC1A"
                        case FOC1B = "FOC1B"
                        case FOC1C = "FOC1C"
                        case ICIE1 = "ICIE1"
                        case OCIE1C = "OCIE1C"
                        case OCIE1B = "OCIE1B"
                        case OCIE1A = "OCIE1A"
                        case TOIE1 = "TOIE1"
                        case ICF1 = "ICF1"
                        case OCF1C = "OCF1C"
                        case OCF1B = "OCF1B"
                        case OCF1A = "OCF1A"
                        case TOV1 = "TOV1"
                        case COM3A = "COM3A"
                        case COM3B = "COM3B"
                        case COM3C = "COM3C"
                        case WGM3 = "WGM3"
                        case ICNC3 = "ICNC3"
                        case ICES3 = "ICES3"
                        case CS3 = "CS3"
                        case FOC3A = "FOC3A"
                        case FOC3B = "FOC3B"
                        case FOC3C = "FOC3C"
                        case ICIE3 = "ICIE3"
                        case OCIE3C = "OCIE3C"
                        case OCIE3B = "OCIE3B"
                        case OCIE3A = "OCIE3A"
                        case TOIE3 = "TOIE3"
                        case ICF3 = "ICF3"
                        case OCF3C = "OCF3C"
                        case OCF3B = "OCF3B"
                        case OCF3A = "OCF3A"
                        case TOV3 = "TOV3"
                        case FOC2A = "FOC2A"
                        case WGM20 = "WGM20"
                        case COM2A = "COM2A"
                        case WGM21 = "WGM21"
                        case CS2 = "CS2"
                        case OCIE2A = "OCIE2A"
                        case TOIE2 = "TOIE2"
                        case OCF2A = "OCF2A"
                        case TOV2 = "TOV2"
                        case PSR2 = "PSR2"
                        case EXCLK = "EXCLK"
                        case AS2 = "AS2"
                        case TCN2UB = "TCN2UB"
                        case OCR2UB = "OCR2UB"
                        case TCR2UB = "TCR2UB"
                        case WDCE = "WDCE"
                        case WDE = "WDE"
                        case WDP = "WDP"
                        case REFS = "REFS"
                        case ADLAR = "ADLAR"
                        case MUX = "MUX"
                        case ADEN = "ADEN"
                        case ADSC = "ADSC"
                        case ADATE = "ADATE"
                        case ADIF = "ADIF"
                        case ADIE = "ADIE"
                        case ADPS = "ADPS"
                        case ADHSM = "ADHSM"
                        case ADTS = "ADTS"
                        case ADC7D = "ADC7D"
                        case ADC6D = "ADC6D"
                        case ADC5D = "ADC5D"
                        case ADC4D = "ADC4D"
                        case ADC3D = "ADC3D"
                        case ADC2D = "ADC2D"
                        case ADC1D = "ADC1D"
                        case ADC0D = "ADC0D"
                        case ACME = "ACME"
                        case ACD = "ACD"
                        case ACBG = "ACBG"
                        case ACO = "ACO"
                        case ACI = "ACI"
                        case ACIE = "ACIE"
                        case ACIC = "ACIC"
                        case ACIS = "ACIS"
                        case AIN1D = "AIN1D"
                        case AIN0D = "AIN0D"
                        case ABRQ = "ABRQ"
                        case OVRQ = "OVRQ"
                        case TTC = "TTC"
                        case SYNTTC = "SYNTTC"
                        case LISTEN = "LISTEN"
                        case TEST = "TEST"
                        case ENASTB = "ENASTB"
                        case SWRES = "SWRES"
                        case OVRG = "OVRG"
                        case TXBSY = "TXBSY"
                        case RXBSY = "RXBSY"
                        case ENFG = "ENFG"
                        case BOFF = "BOFF"
                        case ERRP = "ERRP"
                        case CANIT = "CANIT"
                        case BOFFIT = "BOFFIT"
                        case OVRTIM = "OVRTIM"
                        case BXOK = "BXOK"
                        case SERG = "SERG"
                        case CERG = "CERG"
                        case FERG = "FERG"
                        case AERG = "AERG"
                        case ENIT = "ENIT"
                        case ENBOFF = "ENBOFF"
                        case ENRX = "ENRX"
                        case ENTX = "ENTX"
                        case ENERR = "ENERR"
                        case ENBX = "ENBX"
                        case ENERG = "ENERG"
                        case ENOVRT = "ENOVRT"
                        case ENMOB = "ENMOB"
                        case IEMOB = "IEMOB"
                        case SIT = "SIT"
                        case BRP = "BRP"
                        case SJW = "SJW"
                        case PRS = "PRS"
                        case PHS2 = "PHS2"
                        case PHS1 = "PHS1"
                        case SMP = "SMP"
                        case TPRSC = "TPRSC"
                        case CANTIM = "CANTIM"
                        case TIMTTC = "TIMTTC"
                        case TEC = "TEC"
                        case REC = "REC"
                        case HPMOB = "HPMOB"
                        case CGP = "CGP"
                        case MOBNB = "MOBNB"
                        case AINC = "AINC"
                        case INDX = "INDX"
                        case DLCW = "DLCW"
                        case TXOK = "TXOK"
                        case RXOK = "RXOK"
                        case BERR = "BERR"
                        case SERR = "SERR"
                        case CERR = "CERR"
                        case FERR = "FERR"
                        case AERR = "AERR"
                        case CONMOB = "CONMOB"
                        case RPLV = "RPLV"
                        case IDE = "IDE"
                        case DLC = "DLC"
                        case IDT = "IDT"
                        case RTRTAG = "RTRTAG"
                        case RB1TAG = "RB1TAG"
                        case RB0TAG = "RB0TAG"
                        case IDMSK = "IDMSK"
                        case RTRMSK = "RTRMSK"
                        case IDEMSK = "IDEMSK"
                        case TIMSTM = "TIMSTM"
                        case MSG = "MSG"
                        case PSC2RB = "PSC2RB"
                        case PSC0RB = "PSC0RB"
                        case PSCRV = "PSCRV"
                        case RSTDISBL = "RSTDISBL"
                        case DWEN = "DWEN"
                        case PCST0 = "PCST0"
                        case PICR0 = "PICR0"
                        case PCAE0B = "PCAE0B"
                        case PISEL0B = "PISEL0B"
                        case PELEV0B = "PELEV0B"
                        case PFLTE0B = "PFLTE0B"
                        case PRFM0B = "PRFM0B"
                        case PCAE0A = "PCAE0A"
                        case PISEL0A = "PISEL0A"
                        case PELEV0A = "PELEV0A"
                        case PFLTE0A = "PFLTE0A"
                        case PRFM0A = "PRFM0A"
                        case PPRE0 = "PPRE0"
                        case PBFM0 = "PBFM0"
                        case PAOC0B = "PAOC0B"
                        case PAOC0A = "PAOC0A"
                        case PARUN0 = "PARUN0"
                        case PCCYC0 = "PCCYC0"
                        case PRUN0 = "PRUN0"
                        case PFIFTY0 = "PFIFTY0"
                        case PALOCK0 = "PALOCK0"
                        case PLOCK0 = "PLOCK0"
                        case PMODE0 = "PMODE0"
                        case POP0 = "POP0"
                        case PCLKSEL0 = "PCLKSEL0"
                        case PSYNC0 = "PSYNC0"
                        case POEN0B = "POEN0B"
                        case POEN0A = "POEN0A"
                        case PSEIE0 = "PSEIE0"
                        case PEVE0B = "PEVE0B"
                        case PEVE0A = "PEVE0A"
                        case PEOPE0 = "PEOPE0"
                        case PSEI0 = "PSEI0"
                        case PEV0B = "PEV0B"
                        case PEV0A = "PEV0A"
                        case PRN0 = "PRN0"
                        case PEOP0 = "PEOP0"
                        case PCST2 = "PCST2"
                        case PICR2 = "PICR2"
                        case PCAE2B = "PCAE2B"
                        case PISEL2B = "PISEL2B"
                        case PELEV2B = "PELEV2B"
                        case PFLTE2B = "PFLTE2B"
                        case PRFM2B = "PRFM2B"
                        case PCAE2A = "PCAE2A"
                        case PISEL2A = "PISEL2A"
                        case PELEV2A = "PELEV2A"
                        case PFLTE2A = "PFLTE2A"
                        case PRFM2A = "PRFM2A"
                        case PPRE2 = "PPRE2"
                        case PBFM2 = "PBFM2"
                        case PAOC2B = "PAOC2B"
                        case PAOC2A = "PAOC2A"
                        case PARUN2 = "PARUN2"
                        case PCCYC2 = "PCCYC2"
                        case PRUN2 = "PRUN2"
                        case PFIFTY2 = "PFIFTY2"
                        case PALOCK2 = "PALOCK2"
                        case PLOCK2 = "PLOCK2"
                        case PMODE2 = "PMODE2"
                        case POP2 = "POP2"
                        case PCLKSEL2 = "PCLKSEL2"
                        case POME2 = "POME2"
                        case POMV2B = "POMV2B"
                        case POMV2A = "POMV2A"
                        case POS2 = "POS2"
                        case PSYNC2 = "PSYNC2"
                        case PSYNC22 = "PSYNC2_" // Duplicate?
                        case POEN2D = "POEN2D"
                        case POEN2B = "POEN2B"
                        case POEN2C = "POEN2C"
                        case POEN2A = "POEN2A"
                        case PSEIE2 = "PSEIE2"
                        case PEVE2B = "PEVE2B"
                        case PEVE2A = "PEVE2A"
                        case PEOPE2 = "PEOPE2"
                        case PSEI2 = "PSEI2"
                        case PEV2B = "PEV2B"
                        case PEV2A = "PEV2A"
                        case PRN2 = "PRN2"
                        case PEOP2 = "PEOP2"
                        case PCAE1B = "PCAE1B"
                        case PISEL1B = "PISEL1B"
                        case PELEV1B = "PELEV1B"
                        case PFLTE1B = "PFLTE1B"
                        case PRFM1B = "PRFM1B"
                        case PCAE1A = "PCAE1A"
                        case PISEL1A = "PISEL1A"
                        case PELEV1A = "PELEV1A"
                        case PFLTE1A = "PFLTE1A"
                        case PRFM1A = "PRFM1A"
                        case PPRE1 = "PPRE1"
                        case PBFM1 = "PBFM1"
                        case PAOC1B = "PAOC1B"
                        case PAOC1A = "PAOC1A"
                        case PARUN1 = "PARUN1"
                        case PCCYC1 = "PCCYC1"
                        case PRUN1 = "PRUN1"
                        case PSYNC1 = "PSYNC1"
                        case PSYNC12 = "PSYNC1_" // Duplicate?
                        case POEN1B = "POEN1B"
                        case POEN1A = "POEN1A"
                        case SPIPS = "SPIPS"
                        case PLLF = "PLLF"
                        case PLLE = "PLLE"
                        case PLOCK = "PLOCK"
                        case PRPSC2 = "PRPSC2"
                        case PRPSC1 = "PRPSC1"
                        case PRPSC0 = "PRPSC0"
                        case PRTIM1 = "PRTIM1"
                        case PRTIM0 = "PRTIM0"
                        case PRSPI = "PRSPI"
                        case PRUSART0 = "PRUSART0"
                        case PRADC = "PRADC"
                        case OCIE0B = "OCIE0B"
                        case OCF0B = "OCF0B"
                        case COM0B = "COM0B"
                        case WGM0 = "WGM0"
                        case FOC0B = "FOC0B"
                        case WGM02 = "WGM02"
                        case TCNT0 = "TCNT0"
                        case OCR0B = "OCR0B"
                        case ICPSEL1 = "ICPSEL1"
                        case PSRSYNC = "PSRSYNC"
                        case TCNT1 = "TCNT1"
                        case OCR1A = "OCR1A"
                        case OCR1B = "OCR1B"
                        case ICR1 = "ICR1"
                        case ADASCR = "ADASCR"
                        case ADTS3 = "ADTS3"
                        case ADTS2 = "ADTS2"
                        case ADTS1 = "ADTS1"
                        case ADTS0 = "ADTS0"
                        case ACMP0D = "ACMP0D"
                        case AMP0PD = "AMP0PD"
                        case AMP0ND = "AMP0ND"
                        case ADC10D = "ADC10D"
                        case ADC9D = "ADC9D"
                        case ADC8D = "ADC8D"
                        case AMP0EN = "AMP0EN"
                        case AMP0IS = "AMP0IS"
                        case AMP0G = "AMP0G"
                        case AMP0TS = "AMP0TS"
                        case AMP1EN = "AMP1EN"
                        case AMP1IS = "AMP1IS"
                        case AMP1G = "AMP1G"
                        case AMP1TS = "AMP1TS"
                        case WDIF = "WDIF"
                        case WDIE = "WDIE"
                        case EEPM = "EEPM"
                        case AC0EN = "AC0EN"
                        case AC0IE = "AC0IE"
                        case AC0IS = "AC0IS"
                        case AC0M = "AC0M"
                        case AC2EN = "AC2EN"
                        case AC2IE = "AC2IE"
                        case AC2IS = "AC2IS"
                        case AC2M = "AC2M"
                        case ACCKDIV = "ACCKDIV"
                        case AC2IF = "AC2IF"
                        case AC1IF = "AC1IF"
                        case AC0IF = "AC0IF"
                        case AC2O = "AC2O"
                        case AC1O = "AC1O"
                        case AC0O = "AC0O"
                        case PSC1RB = "PSC1RB"
                        case EUDR = "EUDR"
                        case UTxS = "UTxS"
                        case URxS = "URxS"
                        case EUSART = "EUSART"
                        case EUSBS = "EUSBS"
                        case EMCH = "EMCH"
                        case BODR = "BODR"
                        case FEM = "FEM"
                        case F1617 = "F1617"
                        case STP = "STP"
                        case MUBRR = "MUBRR"
                        case AC1EN = "AC1EN"
                        case AC1IE = "AC1IE"
                        case AC1IS = "AC1IS"
                        case AC1ICE = "AC1ICE"
                        case AC1M = "AC1M"
                        case DAC = "DAC"
                        case DAATE = "DAATE"
                        case DATS = "DATS"
                        case DALA = "DALA"
                        case DAOE = "DAOE"
                        case DAEN = "DAEN"
                        case PSR10 = "PSR10"
                        case ADC = "ADC"
                        case UDR = "UDR"
                        case RXC = "RXC"
                        case TXC = "TXC"
                        case UDRE = "UDRE"
                        case FE = "FE"
                        case DOR = "DOR"
                        case UPE = "UPE"
                        case U2X = "U2X"
                        case MPCM = "MPCM"
                        case RXCIE = "RXCIE"
                        case TXCIE = "TXCIE"
                        case UDRIE = "UDRIE"
                        case RXEN = "RXEN"
                        case TXEN = "TXEN"
                        case UCSZ2 = "UCSZ2"
                        case RXB8 = "RXB8"
                        case TXB8 = "TXB8"
                        case UPM = "UPM"
                        case USBS = "USBS"
                        case UCSZ = "UCSZ"
                        case UCPOL = "UCPOL"
                        case UBRR = "UBRR"
                        case OCR0RB = "OCR0RB"
                        case OCR0SB = "OCR0SB"
                        case OCR0RA = "OCR0RA"
                        case OCR0SA = "OCR0SA"
                        case POAC0B = "POAC0B"
                        case POAC0A = "POAC0A"
                        case OCR2RB = "OCR2RB"
                        case OCR2SB = "OCR2SB"
                        case OCR2RA = "OCR2RA"
                        case OCR2SA = "OCR2SA"
                        case POAC2B = "POAC2B"
                        case POAC2A = "POAC2A"
                        case PFIFTY1 = "PFIFTY1"
                        case PALOCK1 = "PALOCK1"
                        case PLOCK1 = "PLOCK1"
                        case PMODE1 = "PMODE1"
                        case POP1 = "POP1"
                        case PCLKSEL1 = "PCLKSEL1"
                        case PSEIE1 = "PSEIE1"
                        case PEVE1B = "PEVE1B"
                        case PEVE1A = "PEVE1A"
                        case PEOPE1 = "PEOPE1"
                        case PSEI1 = "PSEI1"
                        case PEV1B = "PEV1B"
                        case PEV1A = "PEV1A"
                        case PRN1 = "PRN1"
                        case PEOP1 = "PEOP1"
                        case PCST1 = "PCST1"
                        case PICR1 = "PICR1"
                        case OCR1RB = "OCR1RB"
                        case OCR1SB = "OCR1SB"
                        case OCR1RA = "OCR1RA"
                        case OCR1SA = "OCR1SA"
                        case POAC1B = "POAC1B"
                        case POAC1A = "POAC1A"
                        case PSC2RBA = "PSC2RBA"
                        case PSCINRB = "PSCINRB"
                        case DACH = "DACH"
                        case ADNCDIS = "ADNCDIS"
                        case ADSSEN = "ADSSEN"
                        case ACMP1MD = "ACMP1MD"
                        case AMP0GS = "AMP0GS"
                        case AC3EN = "AC3EN"
                        case AC3IE = "AC3IE"
                        case AC3IS = "AC3IS"
                        case AC3OEA = "AC3OEA"
                        case AC3M = "AC3M"
                        case AC3IF = "AC3IF"
                        case AC3O = "AC3O"
                        case AC3OI = "AC3OI"
                        case AC3OE = "AC3OE"
                        case AC3H = "AC3H"
                        case AC2OI = "AC2OI"
                        case AC2OE = "AC2OE"
                        case AC2H = "AC2H"
                        case AC1OI = "AC1OI"
                        case AC1OE = "AC1OE"
                        case AC1H = "AC1H"
                        case RSTDIS = "RSTDIS"
                        case CKRC81 = "CKRC81"
                        case PRPSCR = "PRPSCR"
                        case CLKCCE = "CLKCCE"
                        case CLKRDY = "CLKRDY"
                        case CLKC = "CLKC"
                        case COUT = "COUT"
                        case CSUT = "CSUT"
                        case CKSEL = "CKSEL"
                        case BGCC = "BGCC"
                        case BGCR = "BGCR"
                        case NVMBSY = "NVMBSY"
                        case EEPAGE = "EEPAGE"
                        case PISEL0A1 = "PISEL0A1"
                        case PISEL0B1 = "PISEL0B1"
                        case PEOEPE0 = "PEOEPE0"
                        case PASDLK2 = "PASDLK2"
                        case PBFM21 = "PBFM21"
                        case PELEV2A1 = "PELEV2A1"
                        case PELEV2B1 = "PELEV2B1"
                        case PISEL2A1 = "PISEL2A1"
                        case PISEL2B1 = "PISEL2B1"
                        case PEOEPE2 = "PEOEPE2"
                        case PASDLY2 = "PASDLY2"
                        case WGM13 = "WGM13"
                        case SIGRD = "SIGRD"
                        case DACL = "DACL"
                        case AMP0POSD = "AMP0POSD"
                        case PICR21 = "PICR21"
                        case HWBE = "HWBE"
                        case PORTC = "PORTC"
                        case DDC = "DDC"
                        case PINC = "PINC"
                        case EEMPE = "EEMPE"
                        case EEPE = "EEPE"
                        case PLLP = "PLLP"
                        case FLERRE = "FLERRE"
                        case NAKINE = "NAKINE"
                        case NAKOUTE = "NAKOUTE"
                        case RXSTPE = "RXSTPE"
                        case RXOUTE = "RXOUTE"
                        case STALLEDE = "STALLEDE"
                        case TXINE = "TXINE"
                        case CTRLDIR = "CTRLDIR"
                        case CURRBK = "CURRBK"
                        case CFGOK = "CFGOK"
                        case OVERFI = "OVERFI"
                        case UNDERFI = "UNDERFI"
                        case DTSEQ = "DTSEQ"
                        case NBUSYBK = "NBUSYBK"
                        case EPSIZE = "EPSIZE"
                        case EPBK = "EPBK"
                        case ALLOC = "ALLOC"
                        case EPTYPE = "EPTYPE"
                        case EPDIR = "EPDIR"
                        case STALLRQ = "STALLRQ"
                        case STALLRQC = "STALLRQC"
                        case RSTDT = "RSTDT"
                        case EPEN = "EPEN"
                        case EPRST = "EPRST"
                        case FIFOCON = "FIFOCON"
                        case NAKINI = "NAKINI"
                        case RWAL = "RWAL"
                        case NAKOUTI = "NAKOUTI"
                        case RXSTPI = "RXSTPI"
                        case RXOUTI = "RXOUTI"
                        case STALLEDI = "STALLEDI"
                        case TXINI = "TXINI"
                        case FNCERR = "FNCERR"
                        case ADDEN = "ADDEN"
                        case UADD = "UADD"
                        case UPRSME = "UPRSME"
                        case EORSME = "EORSME"
                        case WAKEUPE = "WAKEUPE"
                        case EORSTE = "EORSTE"
                        case SOFE = "SOFE"
                        case SUSPE = "SUSPE"
                        case UPRSMI = "UPRSMI"
                        case EORSMI = "EORSMI"
                        case WAKEUPI = "WAKEUPI"
                        case EORSTI = "EORSTI"
                        case SOFI = "SOFI"
                        case SUSPI = "SUSPI"
                        case RSTCPU = "RSTCPU"
                        case RMWKUP = "RMWKUP"
                        case DETACH = "DETACH"
                        case USBE = "USBE"
                        case FRZCLK = "FRZCLK"
                        case REGDIS = "REGDIS"
                        case UPWE = "UPWE"
                        case UPDRV = "UPDRV"
                        case SCKI = "SCKI"
                        case DATAI = "DATAI"
                        case DPI = "DPI"
                        case DMI = "DMI"
                        case PS2EN = "PS2EN"
                        case USBRF = "USBRF"
                        case PRUSB = "PRUSB"
                        case PRUSART1 = "PRUSART1"
                        case RCON = "RCON"
                        case EXTON = "EXTON"
                        case RCCKSEL = "RCCKSEL"
                        case EXCKSEL = "EXCKSEL"
                        case RCSUT = "RCSUT"
                        case EXSUT = "EXSUT"
                        case RCE = "RCE"
                        case EXTE = "EXTE"
                        case CLKS = "CLKS"
                        case PCINT = "PCINT"
                        case PCIF = "PCIF"
                        case PCIE = "PCIE"
                        case CTSEN = "CTSEN"
                        case RTSEN = "RTSEN"
                        case WDEWIF = "WDEWIF"
                        case WDEWIE = "WDEWIE"
                        case WCLKD = "WCLKD"
                        case PRTIM3 = "PRTIM3"
                        case PRTWI = "PRTWI"
                        case PRTIM2 = "PRTIM2"
                        case TWAM = "TWAM"
                        case LSM = "LSM"
                        case STOI = "STOI"
                        case HNPERRI = "HNPERRI"
                        case ROLEEXI = "ROLEEXI"
                        case BCERRI = "BCERRI"
                        case VBERRI = "VBERRI"
                        case SRPI = "SRPI"
                        case STOE = "STOE"
                        case HNPERRE = "HNPERRE"
                        case ROLEEXE = "ROLEEXE"
                        case BCERRE = "BCERRE"
                        case VBERRE = "VBERRE"
                        case SRPE = "SRPE"
                        case HNPREQ = "HNPREQ"
                        case SRPREQ = "SRPREQ"
                        case SRPSEL = "SRPSEL"
                        case VBUSHWC = "VBUSHWC"
                        case VBUSREQ = "VBUSREQ"
                        case VBUSRQC = "VBUSRQC"
                        case OTGTCON7 = "OTGTCON_7"
                        case PAGE = "PAGE"
                        case VALUE2 = "VALUE_2"
                        case IDTI = "IDTI"
                        case VBUSTI = "VBUSTI"
                        case SPEED = "SPEED"
                        case ID = "ID"
                        case VBUS = "VBUS"
                        case HOST = "HOST"
                        case OTGPADE = "OTGPADE"
                        case IDTE = "IDTE"
                        case VBUSTE = "VBUSTE"
                        case UIMOD = "UIMOD"
                        case UIDE = "UIDE"
                        case UVCONE = "UVCONE"
                        case UVREGE = "UVREGE"
                        case COUNTER = "COUNTER"
                        case CRC16 = "CRC16"
                        case TIMEOUT = "TIMEOUT"
                        case PID = "PID"
                        case DATAPID = "DATAPID"
                        case DATATGL = "DATATGL"
                        case NAKEDE = "NAKEDE"
                        case PERRE = "PERRE"
                        case TXSTPE = "TXSTPE"
                        case TXOUTE = "TXOUTE"
                        case RXSTALLE = "RXSTALLE"
                        case RXINE = "RXINE"
                        case NBUSYK = "NBUSYK"
                        case PSIZE = "PSIZE"
                        case PBK = "PBK"
                        case PTYPE = "PTYPE"
                        case PTOKEN = "PTOKEN"
                        case PEPNUM = "PEPNUM"
                        case PFREEZE = "PFREEZE"
                        case INMODE = "INMODE"
                        case PEN = "PEN"
                        case PRST = "PRST"
                        case NAKEDI = "NAKEDI"
                        case PERRI = "PERRI"
                        case TXSTPI = "TXSTPI"
                        case TXOUTI = "TXOUTI"
                        case RXSTALLI = "RXSTALLI"
                        case RXINI = "RXINI"
                        case HWUPE = "HWUPE"
                        case HSOFE = "HSOFE"
                        case RXRSME = "RXRSME"
                        case RSMEDE = "RSMEDE"
                        case RSTE = "RSTE"
                        case DDISCE = "DDISCE"
                        case DCONNE = "DCONNE"
                        case UHUPI = "UHUPI"
                        case HSOFI = "HSOFI"
                        case RXRSMI = "RXRSMI"
                        case RSMEDI = "RSMEDI"
                        case RSTI = "RSTI"
                        case DDISCI = "DDISCI"
                        case DCONNI = "DCONNI"
                        case RESUME = "RESUME"
                        case RESET = "RESET"
                        case SOFEN = "SOFEN"
                        case OCIE2B = "OCIE2B"
                        case OCF2B = "OCF2B"
                        case COM2B = "COM2B"
                        case WGM2 = "WGM2"
                        case FOC2B = "FOC2B"
                        case WGM22 = "WGM22"
                        case OCR2AUB = "OCR2AUB"
                        case OCR2BUB = "OCR2BUB"
                        case TCR2AUB = "TCR2AUB"
                        case TCR2BUB = "TCR2BUB"
                        case PSRASY = "PSRASY"
                        case PCIF0 = "PCIF0"
                        case PCIE0 = "PCIE0"
                        case CKOPT = "CKOPT"
                        case BODEN = "BODEN"
                        case CS02 = "CS02"
                        case CS01 = "CS01"
                        case CS00 = "CS00"
                        case TICIE1 = "TICIE1"
                        case OCIE2 = "OCIE2"
                        case OCF2 = "OCF2"
                        case FOC2 = "FOC2"
                        case COM2 = "COM2"
                        case URSEL = "URSEL"
                        case UMSEL = "UMSEL"
                        case ADFR = "ADFR"
                        case SELFPRGEN = "SELFPRGEN"
                        case SUT = "SUT"
                        case VADMUX = "VADMUX"
                        case VADEN = "VADEN"
                        case VADSC = "VADSC"
                        case VADCCIF = "VADCCIF"
                        case VADCCIE = "VADCCIE"
                        case BGD = "BGD"
                        case DUVRD = "DUVRD"
                        case CPS = "CPS"
                        case DFE = "DFE"
                        case CFE = "CFE"
                        case CTPB = "CTPB"
                        case RFLB = "RFLB"
                        case CKOE = "CKOE"
                        case OCDRF = "OCDRF"
                        case BODRF = "BODRF"
                        case OSISEL0 = "OSISEL0"
                        case OSIST = "OSIST"
                        case OSIEN = "OSIEN"
                        case PA1DID = "PA1DID"
                        case PA0DID = "PA0DID"
                        case PRVRM = "PRVRM"
                        case PRVADC = "PRVADC"
                        case BPPLE = "BPPLE"
                        case BPPL = "BPPL"
                        case SCD = "SCD"
                        case DOCD = "DOCD"
                        case COCD = "COCD"
                        case DHCD = "DHCD"
                        case CHCD = "CHCD"
                        case SCIF = "SCIF"
                        case DOCIF = "DOCIF"
                        case COCIF = "COCIF"
                        case DHCIF = "DHCIF"
                        case CHCIF = "CHCIF"
                        case SCIE = "SCIE"
                        case DOCIE = "DOCIE"
                        case COCIE = "COCIE"
                        case DHCIE = "DHCIE"
                        case CHCIE = "CHCIE"
                        case CS = "CS"
                        case TCW1 = "TCW1"
                        case ICEN1 = "ICEN1"
                        case ICS1 = "ICS1"
                        case WGM10 = "WGM10"
                        case TCW0 = "TCW0"
                        case ICEN0 = "ICEN0"
                        case ICNC0 = "ICNC0"
                        case ICES0 = "ICES0"
                        case ICS0 = "ICS0"
                        case ICIE0 = "ICIE0"
                        case ICF0 = "ICF0"
                        case CADEN = "CADEN"
                        case CADPOL = "CADPOL"
                        case CADUB = "CADUB"
                        case CADAS = "CADAS"
                        case CADSI = "CADSI"
                        case CADSE = "CADSE"
                        case CADACIE = "CADACIE"
                        case CADRCIE = "CADRCIE"
                        case CADICIE = "CADICIE"
                        case CADACIF = "CADACIF"
                        case CADRCIF = "CADRCIF"
                        case CADICIF = "CADICIF"
                        case ROCS = "ROCS"
                        case ROCWIF = "ROCWIF"
                        case ROCWIE = "ROCWIE"
                        case EPINT = "EPINT"
                        case BYCT = "BYCT"
                        case DAT = "DAT"
                        case EPNUM = "EPNUM"
                        case FNUM = "FNUM"
                        case CMUX = "CMUX"
                        case AIN7D = "AIN7D"
                        case AIN6D = "AIN6D"
                        case AIN5D = "AIN5D"
                        case AIN4D = "AIN4D"
                        case AIN3D = "AIN3D"
                        case AIN2D = "AIN2D"
                        case FOC0 = "FOC0"
                        case COM0 = "COM0"
                        case OCIE0 = "OCIE0"
                        case OCF0 = "OCF0"
                        case INT0 = "INT0"
                        case INT1 = "INT1"
                        case INT2 = "INT2"
                        case INTF2 = "INTF2"
                        case OCDR = "OCDR"
                        case WDTOE = "WDTOE"
                        case OCR0 = "OCR0"
                        case TCNT2 = "TCNT2"
                        case OCR2 = "OCR2"
                        case SPDR = "SPDR"
                        case TWBR = "TWBR"
                        case TWD = "TWD"
                        case OSCSEL = "OSCSEL"
                        case VADC = "VADC"
                        case CADVSE = "CADVSE"
                        case CADIC = "CADIC"
                        case CADAC = "CADAC"
                        case CADAC0 = "CADAC0"
                        case CADRCC = "CADRCC"
                        case CADRDC = "CADRDC"
                        case TWBCIF = "TWBCIF"
                        case TWBCIE = "TWBCIE"
                        case TWBDT = "TWBDT"
                        case TWBCIP = "TWBCIP"
                        case CBE = "CBE"
                        case EPID = "EPID"
                        case HCPT = "HCPT"
                        case OCPT = "OCPT"
                        case SCPT = "SCPT"
                        case CHCDL = "CHCDL"
                        case DHCDL = "DHCDL"
                        case COCDL = "COCDL"
                        case DOCDL = "DOCDL"
                        case SCDL = "SCDL"
                        case BATTPVL = "BATTPVL"
                        case CHGDISC = "CHGDISC"
                        case CHGDIF = "CHGDIF"
                        case CHGDIE = "CHGDIE"
                        case ROCD = "ROCD"
                        case BGSCDE = "BGSCDE"
                        case BGSCDIF = "BGSCDIF"
                        case BGSCDIE = "BGSCDIE"
                        case FCAL = "FCAL"
                        case GPIOR2 = "GPIOR2"
                        case GPIOR1 = "GPIOR1"
                        case GPIOR0 = "GPIOR0"
                        case LBSET = "LBSET"
                        case DUVRDINIT = "DUVRDINIT"
                        case PSCRB = "PSCRB"
                        case PSCRVA = "PSCRVA"
                        case PSCRVB = "PSCRVB"
                        case OVFG = "OVFG"
                        case ACCKSEL = "ACCKSEL"
                        case PRCAN = "PRCAN"
                        case PRPSC = "PRPSC"
                        case PRLIN = "PRLIN"
                        case ISRCEN = "ISRCEN"
                        case AREFEN = "AREFEN"
                        case AMP2PD = "AMP2PD"
                        case AMPCMP0 = "AMPCMP0"
                        case AMPCMP1 = "AMPCMP1"
                        case AMP2EN = "AMP2EN"
                        case AMP2IS = "AMP2IS"
                        case AMP2G = "AMP2G"
                        case AMPCMP2 = "AMPCMP2"
                        case AMP2TS = "AMP2TS"
                        case LSWRES = "LSWRES"
                        case LIN13 = "LIN13"
                        case LCONF = "LCONF"
                        case LENA = "LENA"
                        case LCMD = "LCMD"
                        case LIDST = "LIDST"
                        case LBUSY = "LBUSY"
                        case LERR = "LERR"
                        case LIDOK = "LIDOK"
                        case LTXOK = "LTXOK"
                        case LRXOK = "LRXOK"
                        case LENERR = "LENERR"
                        case LENIDOK = "LENIDOK"
                        case LENTXOK = "LENTXOK"
                        case LENRXOK = "LENRXOK"
                        case LABORT = "LABORT"
                        case LTOERR = "LTOERR"
                        case LOVERR = "LOVERR"
                        case LFERR = "LFERR"
                        case LSERR = "LSERR"
                        case LPERR = "LPERR"
                        case LCERR = "LCERR"
                        case LBERR = "LBERR"
                        case LDISR = "LDISR"
                        case LBT = "LBT"
                        case LDIV = "LDIV"
                        case LTXDL = "LTXDL"
                        case LRXDL = "LRXDL"
                        case LP = "LP"
                        case LID = "LID"
                        case LAINC = "LAINC"
                        case LINDX = "LINDX"
                        case LDATA = "LDATA"
                        case PEV = "PEV"
                        case PEOP = "PEOP"
                        case PEVE = "PEVE"
                        case PEOPE = "PEOPE"
                        case POVEN2 = "POVEN2"
                        case PISEL2 = "PISEL2"
                        case PELEV2 = "PELEV2"
                        case PFLTE2 = "PFLTE2"
                        case PAOC2 = "PAOC2"
                        case PRFM2 = "PRFM2"
                        case POVEN1 = "POVEN1"
                        case PISEL1 = "PISEL1"
                        case PELEV1 = "PELEV1"
                        case PFLTE1 = "PFLTE1"
                        case PAOC1 = "PAOC1"
                        case PRFM1 = "PRFM1"
                        case POVEN0 = "POVEN0"
                        case PISEL0 = "PISEL0"
                        case PELEV0 = "PELEV0"
                        case PFLTE0 = "PFLTE0"
                        case PAOC0 = "PAOC0"
                        case PRFM0 = "PRFM0"
                        case PPRE = "PPRE"
                        case PCLKSEL = "PCLKSEL"
                        case PCCYC = "PCCYC"
                        case PRUN = "PRUN"
                        case PULOCK = "PULOCK"
                        case PMODE = "PMODE"
                        case POPB = "POPB"
                        case POPA = "POPA"
                        case POCRRB = "POCR_RB"
                        case POCR2SB = "POCR2SB"
                        case POCR2RA = "POCR2RA"
                        case POCR2SA = "POCR2SA"
                        case POCR1SB = "POCR1SB"
                        case POCR1RA = "POCR1RA"
                        case POCR1SA = "POCR1SA"
                        case POCR0SB = "POCR0SB"
                        case POCR0RA = "POCR0RA"
                        case POCR0SA = "POCR0SA"
                        case OCR1C = "OCR1C"
                        case UDR1 = "UDR1"
                        case UBRR1 = "UBRR1"
                        case COM4A = "COM4A"
                        case COM4B = "COM4B"
                        case FOC4A = "FOC4A"
                        case FOC4B = "FOC4B"
                        case PWM4A = "PWM4A"
                        case PWM4B = "PWM4B"
                        case PWM4X = "PWM4X"
                        case PSR4 = "PSR4"
                        case DTPS4 = "DTPS4"
                        case CS4 = "CS4"
                        case COM4A1S = "COM4A1S"
                        case COM4A0S = "COM4A0S"
                        case COM4B1S = "COM4B1S"
                        case COM4B0S = "COM4B0S"
                        case COM4D = "COM4D"
                        case FOC4D = "FOC4D"
                        case PWM4D = "PWM4D"
                        case FPIE4 = "FPIE4"
                        case FPEN4 = "FPEN4"
                        case FPNC4 = "FPNC4"
                        case FPES4 = "FPES4"
                        case FPAC4 = "FPAC4"
                        case FPF4 = "FPF4"
                        case WGM4 = "WGM4"
                        case TLOCK4 = "TLOCK4"
                        case ENHC4 = "ENHC4"
                        case OC4OE = "OC4OE"
                        case TC4 = "TC4"
                        case OCR4A = "OCR4A"
                        case OCR4B = "OCR4B"
                        case OCR4C = "OCR4C"
                        case OCR4D = "OCR4D"
                        case OCIE4D = "OCIE4D"
                        case OCIE4A = "OCIE4A"
                        case OCIE4B = "OCIE4B"
                        case TOIE4 = "TOIE4"
                        case OCF4D = "OCF4D"
                        case OCF4A = "OCF4A"
                        case OCF4B = "OCF4B"
                        case TOV4 = "TOV4"
                        case DT4L = "DT4L"
                        case TCNT3 = "TCNT3"
                        case OCR3A = "OCR3A"
                        case OCR3B = "OCR3B"
                        case OCR3C = "OCR3C"
                        case ICR3 = "ICR3"
                        case MUX5 = "MUX5"
                        case ADC13D = "ADC13D"
                        case ADC12D = "ADC12D"
                        case ADC11D = "ADC11D"
                        case RCFREQ = "RCFREQ"
                        case RAMPZ = "RAMPZ"
                        case PRTIM4 = "PRTIM4"
                        case PINDIV = "PINDIV"
                        case PINMUX = "PINMUX"
                        case PLLUSB = "PLLUSB"
                        case PLLTM = "PLLTM"
                        case PDIV = "PDIV"
                        case UENUM = "UENUM"
                        case Res = "Res"
                        case EEAR8 = "EEAR8"
                        case EEAR9 = "EEAR9"
                        case BODS = "BODS"
                        case BODSE = "BODSE"
                        case RXSIE = "RXSIE"
                        case RXS = "RXS"
                        case SFDE = "SFDE"
                        case ACOE = "ACOE"
                        case M103C = "M103C"
                        case SRW10 = "SRW10"
                        case SM2 = "SM2"
                        case SRW11 = "SRW11"
                        case XDIVEN = "XDIVEN"
                        case XDIV = "XDIV"
                        case PSR0 = "PSR0"
                        case PSR321 = "PSR321"
                        case AS0 = "AS0"
                        case TCN0UB = "TCN0UB"
                        case OCR0UB = "OCR0UB"
                        case TCR0UB = "TCR0UB"
                        case TICIE3 = "TICIE3"
                        case OSCSEL0 = "OSCSEL0"
                        case PBOVCE = "PBOVCE"
                        case PBOE3 = "PBOE3"
                        case PBOE0 = "PBOE0"
                        case SBSY = "SBSY"
                        case SCMD = "SCMD"
                        case VADICPS = "VADICPS"
                        case VADACRB = "VADACRB"
                        case VADICRB = "VADICRB"
                        case CADICPS = "CADICPS"
                        case CADACRB = "CADACRB"
                        case CADICRB = "CADICRB"
                        case ADPSEL = "ADPSEL"
                        case ADCMS = "ADCMS"
                        case ADIDES = "ADIDES"
                        case ADADES = "ADADES"
                        case CADRCM = "CADRCM"
                        case CADRCT = "CADRCT"
                        case CADG = "CADG"
                        case CADPDM = "CADPDM"
                        case CADDSEL = "CADDSEL"
                        case VADREFS = "VADREFS"
                        case VADPDM = "VADPDM"
                        case VADACIF = "VADACIF"
                        case VADICIF = "VADICIF"
                        case VADACIE = "VADACIE"
                        case VADICIE = "VADICIE"
                        case BGSC = "BGSC"
                        case BGCN = "BGCN"
                        case BGCL = "BGCL"
                        case BGPLE = "BGPLE"
                        case BGPL = "BGPL"
                        case SWEN = "SWEN"
                        case LOCK = "LOCK"
                        case PLLCIF = "PLLCIF"
                        case PLLCIE = "PLLCIE"
                        case ISC01 = "ISC01"
                        case ISC00 = "ISC00"
                        case INTF0 = "INTF0"
                        case WDCL = "WDCL"
                        case WDCLE = "WDCLE"
                        case WUTIF = "WUTIF"
                        case WUTIE = "WUTIE"
                        case WUTR = "WUTR"
                        case WUTE = "WUTE"
                        case WUTP = "WUTP"
                        case CKSELSUT = "CKSEL_SUT"
                        case UDORD0 = "UDORD0"
                        case UCPHA0 = "UCPHA0"
                        case UDORD1 = "UDORD1"
                        case UCPHA1 = "UCPHA1"
                        case EXCLKAMR = "EXCLKAMR"
                        case COM5A = "COM5A"
                        case COM5B = "COM5B"
                        case COM5C = "COM5C"
                        case WGM5 = "WGM5"
                        case ICNC5 = "ICNC5"
                        case ICES5 = "ICES5"
                        case CS5 = "CS5"
                        case FOC5A = "FOC5A"
                        case FOC5B = "FOC5B"
                        case FOC5C = "FOC5C"
                        case ICIE5 = "ICIE5"
                        case OCIE5C = "OCIE5C"
                        case OCIE5B = "OCIE5B"
                        case OCIE5A = "OCIE5A"
                        case TOIE5 = "TOIE5"
                        case ICF5 = "ICF5"
                        case OCF5C = "OCF5C"
                        case OCF5B = "OCF5B"
                        case OCF5A = "OCF5A"
                        case TOV5 = "TOV5"
                        case COM4C = "COM4C"
                        case ICNC4 = "ICNC4"
                        case ICES4 = "ICES4"
                        case FOC4C = "FOC4C"
                        case ICIE4 = "ICIE4"
                        case OCIE4C = "OCIE4C"
                        case ICF4 = "ICF4"
                        case OCF4C = "OCF4C"
                        case PALTD = "PALTD"
                        case PALTU = "PALTU"
                        case PARDFI = "PARDFI"
                        case PARUFI = "PARUFI"
                        case MAFSA0L = "MAFSA0L"
                        case MAFSA0H = "MAFSA0H"
                        case MAFPA0L = "MAFPA0L"
                        case MAFPA0H = "MAFPA0H"
                        case MAFSA1L = "MAFSA1L"
                        case MAFSA1H = "MAFSA1H"
                        case MAFPA1L = "MAFPA1L"
                        case MAFPA1H = "MAFPA1H"
                        case MAFSA2L = "MAFSA2L"
                        case MAFSA2H = "MAFSA2H"
                        case MAFPA2L = "MAFPA2L"
                        case MAFPA2H = "MAFPA2H"
                        case MAFSA3L = "MAFSA3L"
                        case MAFSA3H = "MAFSA3H"
                        case MAFPA3L = "MAFPA3L"
                        case MAFPA3H = "MAFPA3H"
                        case MAF3EN = "MAF3EN"
                        case MAF2EN = "MAF2EN"
                        case MAF1EN = "MAF1EN"
                        case MAF0EN = "MAF0EN"
                        case AACK3SETPD = "AACK_3_SET_PD"
                        case AACK3IAMCOORD = "AACK_3_I_AM_COORD"
                        case AACK2SETPD = "AACK_2_SET_PD"
                        case AACK2IAMCOORD = "AACK_2_I_AM_COORD"
                        case AACK1SETPD = "AACK_1_SET_PD"
                        case AACK1IAMCOORD = "AACK_1_I_AM_COORD"
                        case AACK0SETPD = "AACK_0_SET_PD"
                        case AACK0IAMCOORD = "AACK_0_I_AM_COORD"
                        case AESREQUEST = "AES_REQUEST"
                        case AESMODE = "AES_MODE"
                        case AESDIR = "AES_DIR"
                        case AESIM = "AES_IM"
                        case AESER = "AES_ER"
                        case AESDONE = "AES_DONE"
                        case AESSTATE = "AES_STATE"
                        case AESKEY = "AES_KEY"
                        case CCADONE = "CCA_DONE"
                        case CCASTATUS = "CCA_STATUS"
                        case TSTSTATUS = "TST_STATUS"
                        case TRXSTATUS = "TRX_STATUS"
                        case TRACSTATUS = "TRAC_STATUS"
                        case TRXCMD = "TRX_CMD"
                        case Res7 = "Res7"
                        case PMUEN = "PMU_EN"
                        case PMUSTART = "PMU_START"
                        case PMUIFINV = "PMU_IF_INV"
                        case PAEXTEN = "PA_EXT_EN"
                        case IRQ2EXTEN = "IRQ_2_EXT_EN"
                        case TXAUTOCRCON = "TX_AUTO_CRC_ON"
                        case PLLTXFLT = "PLL_TX_FLT"
                        case TXPWR = "TX_PWR"
                        case RXCRCVALID = "RX_CRC_VALID"
                        case RNDVALUE = "RND_VALUE"
                        case RSSI = "RSSI"
                        case EDLEVEL = "ED_LEVEL"
                        case CCAREQUEST = "CCA_REQUEST"
                        case CCAMODE = "CCA_MODE"
                        case CHANNEL = "CHANNEL"
                        case CCACSTHRES = "CCA_CS_THRES"
                        case CCAEDTHRES = "CCA_ED_THRES"
                        case PDTTHRES = "PDT_THRES"
                        case SFDVALUE = "SFD_VALUE"
                        case RXSAFEMODE = "RX_SAFE_MODE"
                        case OQPSKDATARATE = "OQPSK_DATA_RATE"
                        case ANTSEL = "ANT_SEL"
                        case ANTDIVEN = "ANT_DIV_EN"
                        case ANTEXTSWEN = "ANT_EXT_SW_EN"
                        case ANTCTRL = "ANT_CTRL"
                        case AWAKEEN = "AWAKE_EN"
                        case TXENDEN = "TX_END_EN"
                        case AMIEN = "AMI_EN"
                        case CCAEDDONEEN = "CCA_ED_DONE_EN"
                        case RXENDEN = "RX_END_EN"
                        case RXSTARTEN = "RX_START_EN"
                        case PLLUNLOCKEN = "PLL_UNLOCK_EN"
                        case PLLLOCKEN = "PLL_LOCK_EN"
                        case AWAKE = "AWAKE"
                        case TXEND = "TX_END"
                        case AMI = "AMI"
                        case CCAEDDONE = "CCA_ED_DONE"
                        case RXEND = "RX_END"
                        case RXSTART = "RX_START"
                        case PLLUNLOCK = "PLL_UNLOCK"
                        case PLLLOCK = "PLL_LOCK"
                        case MAF3AMIEN = "MAF_3_AMI_EN"
                        case MAF2AMIEN = "MAF_2_AMI_EN"
                        case MAF1AMIEN = "MAF_1_AMI_EN"
                        case MAF0AMIEN = "MAF_0_AMI_EN"
                        case TXSTARTEN = "TX_START_EN"
                        case MAF3AMI = "MAF_3_AMI"
                        case MAF2AMI = "MAF_2_AMI"
                        case MAF1AMI = "MAF_1_AMI"
                        case MAF0AMI = "MAF_0_AMI"
                        case TXSTART = "TX_START"
                        case AVREGEXT = "AVREG_EXT"
                        case AVDDOK = "AVDD_OK"
                        case AVDDOK2 = "AVDDOK" // Duplicate?
                        case DVREGEXT = "DVREG_EXT"
                        case DVDDOK = "DVDD_OK"
                        case BATLOW = "BAT_LOW"
                        case BATLOWEN = "BAT_LOW_EN"
                        case BATMONOK = "BATMON_OK"
                        case BATMONHR = "BATMON_HR"
                        case BATMONVTH = "BATMON_VTH"
                        case XTALMODE = "XTAL_MODE"
                        case XTALTRIM = "XTAL_TRIM"
                        case CCNUMBER = "CC_NUMBER"
                        case CCBAND = "CC_BAND"
                        case RXPDTDIS = "RX_PDT_DIS"
                        case RXOVERRIDE = "RX_OVERRIDE"
                        case RXPDTLEVEL = "RX_PDT_LEVEL"
                        case RXRPCCTRL = "RX_RPC_CTRL"
                        case RXRPCEN = "RX_RPC_EN"
                        case PDTRPCEN = "PDT_RPC_EN"
                        case PLLRPCEN = "PLL_RPC_EN"
                        case Res0 = "Res0"
                        case IPANRPCEN = "IPAN_RPC_EN"
                        case XAHRPCEN = "XAH_RPC_EN"
                        case AACKFLTRRESFT = "AACK_FLTR_RES_FT"
                        case AACKUPLDRESFT = "AACK_UPLD_RES_FT"
                        case AACKACKTIME = "AACK_ACK_TIME"
                        case AACKPROMMODE = "AACK_PROM_MODE"
                        case FTNSTART = "FTN_START"
                        case PLLCFSTART = "PLL_CF_START"
                        case PLLDCUSTART = "PLL_DCU_START"
                        case PARTNUM = "PART_NUM"
                        case VERSIONNUM = "VERSION_NUM"
                        case MANID07 = "MAN_ID_07"
                        case MANID06 = "MAN_ID_06"
                        case MANID05 = "MAN_ID_05"
                        case MANID04 = "MAN_ID_04"
                        case MANID03 = "MAN_ID_03"
                        case MANID02 = "MAN_ID_02"
                        case MANID01 = "MAN_ID_01"
                        case MANID00 = "MAN_ID_00"
                        case MANID = "MAN_ID_"
                        case SHORTADDR07 = "SHORT_ADDR_07"
                        case SHORTADDR06 = "SHORT_ADDR_06"
                        case SHORTADDR05 = "SHORT_ADDR_05"
                        case SHORTADDR04 = "SHORT_ADDR_04"
                        case SHORTADDR03 = "SHORT_ADDR_03"
                        case SHORTADDR02 = "SHORT_ADDR_02"
                        case SHORTADDR01 = "SHORT_ADDR_01"
                        case SHORTADDR00 = "SHORT_ADDR_00"
                        case SHORTADDR = "SHORT_ADDR_"
                        case PANID07 = "PAN_ID_07"
                        case PANID06 = "PAN_ID_06"
                        case PANID05 = "PAN_ID_05"
                        case PANID04 = "PAN_ID_04"
                        case PANID03 = "PAN_ID_03"
                        case PANID02 = "PAN_ID_02"
                        case PANID01 = "PAN_ID_01"
                        case PANID00 = "PAN_ID_00"
                        case PANID = "PAN_ID_"
                        case IEEEADDR07 = "IEEE_ADDR_07"
                        case IEEEADDR06 = "IEEE_ADDR_06"
                        case IEEEADDR05 = "IEEE_ADDR_05"
                        case IEEEADDR04 = "IEEE_ADDR_04"
                        case IEEEADDR03 = "IEEE_ADDR_03"
                        case IEEEADDR02 = "IEEE_ADDR_02"
                        case IEEEADDR01 = "IEEE_ADDR_01"
                        case IEEEADDR00 = "IEEE_ADDR_00"
                        case IEEEADDR = "IEEE_ADDR_"
                        case MAXFRAMERETRIES = "MAX_FRAME_RETRIES"
                        case MAXCSMARETRIES = "MAX_CSMA_RETRIES"
                        case SLOTTEDOPERATION = "SLOTTED_OPERATION"
                        case CSMASEED07 = "CSMA_SEED_07"
                        case CSMASEED06 = "CSMA_SEED_06"
                        case CSMASEED05 = "CSMA_SEED_05"
                        case CSMASEED04 = "CSMA_SEED_04"
                        case CSMASEED03 = "CSMA_SEED_03"
                        case CSMASEED02 = "CSMA_SEED_02"
                        case CSMASEED01 = "CSMA_SEED_01"
                        case CSMASEED00 = "CSMA_SEED_00"
                        case AACKFVNMODE = "AACK_FVN_MODE"
                        case AACKSETPD = "AACK_SET_PD"
                        case AACKDISACK = "AACK_DIS_ACK"
                        case AACKIAMCOORD = "AACK_I_AM_COORD"
                        case CSMASEED1 = "CSMA_SEED_1"
                        case MAXBE = "MAX_BE"
                        case MINBE = "MIN_BE"
                        case TSTCTRLDIG = "TST_CTRL_DIG"
                        case RXLENGTH = "RX_LENGTH"
                        case SCTSTRHH = "SCTSTRHH"
                        case SCTSTRHL = "SCTSTRHL"
                        case SCTSTRLH = "SCTSTRLH"
                        case SCTSTRLL = "SCTSTRLL"
                        case SCOCR1HH = "SCOCR1HH"
                        case SCOCR1HL = "SCOCR1HL"
                        case SCOCR1LH = "SCOCR1LH"
                        case SCOCR1LL = "SCOCR1LL"
                        case SCOCR2HH = "SCOCR2HH"
                        case SCOCR2HL = "SCOCR2HL"
                        case SCOCR2LH = "SCOCR2LH"
                        case SCOCR2LL = "SCOCR2LL"
                        case SCOCR3HH = "SCOCR3HH"
                        case SCOCR3HL = "SCOCR3HL"
                        case SCOCR3LH = "SCOCR3LH"
                        case SCOCR3LL = "SCOCR3LL"
                        case SCTSRHH = "SCTSRHH"
                        case SCTSRHL = "SCTSRHL"
                        case SCTSRLH = "SCTSRLH"
                        case SCTSRLL = "SCTSRLL"
                        case SCBTSRHH = "SCBTSRHH"
                        case SCBTSRHL = "SCBTSRHL"
                        case SCBTSRLH = "SCBTSRLH"
                        case SCBTSRLL = "SCBTSRLL"
                        case SCCNTHH = "SCCNTHH"
                        case SCCNTHL = "SCCNTHL"
                        case SCCNTLH = "SCCNTLH"
                        case SCCNTLL = "SCCNTLL"
                        case IRQSBO = "IRQSBO"
                        case IRQSOF = "IRQSOF"
                        case IRQSCP = "IRQSCP"
                        case IRQMBO = "IRQMBO"
                        case IRQMOF = "IRQMOF"
                        case IRQMCP = "IRQMCP"
                        case SCBSY = "SCBSY"
                        case SCBTSM = "SCBTSM"
                        case SCCKDIV = "SCCKDIV"
                        case SCEECLK = "SCEECLK"
                        case SCENBO = "SCENBO"
                        case SCRES = "SCRES"
                        case SCMBTS = "SCMBTS"
                        case SCEN = "SCEN"
                        case SCCKSEL = "SCCKSEL"
                        case SCTSE = "SCTSE"
                        case SCCMP = "SCCMP"
                        case SCCS3 = "SCCS3"
                        case SCCS2 = "SCCS2"
                        case SCCS1 = "SCCS1"
                        case SCRSTRHH = "SCRSTRHH"
                        case SCRSTRHL = "SCRSTRHL"
                        case SCRSTRLH = "SCRSTRLH"
                        case SCRSTRLL = "SCRSTRLL"
                        case REFOK = "REFOK"
                        case ACCH = "ACCH"
                        case ADTHT = "ADTHT"
                        case ADSUT = "ADSUT"
                        case ADC15D = "ADC15D"
                        case ADC14D = "ADC14D"
                        case CAL = "CAL"
                        case PRRAM3 = "PRRAM3"
                        case PRRAM2 = "PRRAM2"
                        case PRRAM1 = "PRRAM1"
                        case PRRAM0 = "PRRAM0"
                        case PRTRX24 = "PRTRX24"
                        case PRTIM5 = "PRTIM5"
                        case PRPGA = "PRPGA"
                        case ENEAM = "ENEAM"
                        case AEAM = "AEAM"
                        case BGCALFINE = "BGCAL_FINE"
                        case BGCAL = "BGCAL"
                        case SLPTR = "SLPTR"
                        case TRXRST = "TRXRST"
                        case DRTSWOK = "DRTSWOK"
                        case ENDRT = "ENDRT"
                        case LLDRL = "LLDRL"
                        case LLDRH = "LLDRH"
                        case LLDONE = "LLDONE"
                        case LLCOMP = "LLCOMP"
                        case LLCAL = "LLCAL"
                        case LLTCO = "LLTCO"
                        case LLSHORT = "LLSHORT"
                        case LLENCAL = "LLENCAL"
                        case PFDRV = "PFDRV"
                        case PEDRV = "PEDRV"
                        case PDDRV = "PDDRV"
                        case PBDRV = "PBDRV"
                        case PGDRV = "PGDRV"
                        case XDIV6 = "XDIV6"
                        case XDIV5 = "XDIV5"
                        case XDIV4 = "XDIV4"
                        case XDIV3 = "XDIV3"
                        case XDIV2 = "XDIV2"
                        case XDIV1 = "XDIV1"
                        case XDIV0 = "XDIV0"
                        case PABUFLT = "PA_BUF_LT"
                        case PALT = "PA_LT"
                        case M161C = "M161C"
                        case URSEL0 = "URSEL0"
                        case UBRR0 = "UBRR0"
                        case URSEL1 = "URSEL1"
                        case SM1 = "SM1"
                        case SM0 = "SM0"
                        case SPIF0 = "SPIF0"
                        case WCOL0 = "WCOL0"
                        case SPI2X0 = "SPI2X0"
                        case SPIE0 = "SPIE0"
                        case SPE0 = "SPE0"
                        case DORD0 = "DORD0"
                        case MSTR0 = "MSTR0"
                        case CPOL0 = "CPOL0"
                        case CPHA0 = "CPHA0"
                        case SPR01 = "SPR01"
                        case SPR00 = "SPR00"
                        case SPR10 = "SPR10"
                        case USISIF = "USISIF"
                        case USIOIF = "USIOIF"
                        case USIPF = "USIPF"
                        case USIDC = "USIDC"
                        case USICNT = "USICNT"
                        case USISIE = "USISIE"
                        case USIOIE = "USIOIE"
                        case USIWM = "USIWM"
                        case USICS = "USICS"
                        case USICLK = "USICLK"
                        case USITC = "USITC"
                        case LCDEN = "LCDEN"
                        case LCDAB = "LCDAB"
                        case LCDIF = "LCDIF"
                        case LCDIE = "LCDIE"
                        case LCDBD = "LCDBD"
                        case LCDCCD = "LCDCCD"
                        case LCDBL = "LCDBL"
                        case LCDCS = "LCDCS"
                        case LCD2B = "LCD2B"
                        case LCDMUX = "LCDMUX"
                        case LCDPM = "LCDPM"
                        case LCDPS = "LCDPS"
                        case LCDCD = "LCDCD"
                        case LCDDC = "LCDDC"
                        case LCDMDT = "LCDMDT"
                        case LCDCC = "LCDCC"
                        case PRLCD = "PRLCD"
                        case OCR2A = "OCR2A"
                        case USIDR = "USIDR"
                        case UDR0 = "UDR0"
                        case OCR2B = "OCR2B"
                        case SPDR0 = "SPDR0"
                        case CFD = "CFD"
                        case GPIOEN = "GPIOEN"
                        case TWAM0 = "TWAM0"
                        case TWS0 = "TWS0"
                        case TWAM1 = "TWAM1"
                        case XFDIF = "XFDIF"
                        case XFDIE = "XFDIE"
                        case PRTWI0 = "PRTWI0"
                        case PRSPI0 = "PRSPI0"
                        case PRPTC = "PRPTC"
                        case PRUSART2 = "PRUSART2"
                        case PRSPI1 = "PRSPI1"
                        case PRTWI1 = "PRTWI1"
                        case TWDR = "TWDR"
                        case RXSIE1 = "RXSIE1"
                        case RXS1 = "RXS1"
                        case SFDE1 = "SFDE1"
                        case TWINT1 = "TWINT1"
                        case TWEA1 = "TWEA1"
                        case TWSTA1 = "TWSTA1"
                        case TWSTO1 = "TWSTO1"
                        case TWWC1 = "TWWC1"
                        case TWEN1 = "TWEN1"
                        case TWIE1 = "TWIE1"
                        case TWS1 = "TWS1"
                        case TWPS1 = "TWPS1"
                        case WGM33 = "WGM33"
                        case WGM32 = "WGM32"
                        case WGM43 = "WGM43"
                        case WGM42 = "WGM42"
                        case SPIF1 = "SPIF1"
                        case WCOL1 = "WCOL1"
                        case SPI2X1 = "SPI2X1"
                        case SPIE1 = "SPIE1"
                        case SPE1 = "SPE1"
                        case DORD1 = "DORD1"
                        case MSTR1 = "MSTR1"
                        case CPOL1 = "CPOL1"
                        case CPHA1 = "CPHA1"
                        case SPR1 = "SPR1"
                        case SEG324 = "SEG324"
                        case SEG325 = "SEG325"
                        case SEG326 = "SEG326"
                        case SEG327 = "SEG327"
                        case SEG328 = "SEG328"
                        case SEG329 = "SEG329"
                        case SEG330 = "SEG330"
                        case SEG331 = "SEG331"
                        case SEG316 = "SEG316"
                        case SEG317 = "SEG317"
                        case SEG318 = "SEG318"
                        case SEG319 = "SEG319"
                        case SEG320 = "SEG320"
                        case SEG321 = "SEG321"
                        case SEG322 = "SEG322"
                        case SEG323 = "SEG323"
                        case SEG308 = "SEG308"
                        case SEG309 = "SEG309"
                        case SEG310 = "SEG310"
                        case SEG311 = "SEG311"
                        case SEG312 = "SEG312"
                        case SEG313 = "SEG313"
                        case SEG314 = "SEG314"
                        case SEG315 = "SEG315"
                        case SEG300 = "SEG300"
                        case SEG301 = "SEG301"
                        case SEG302 = "SEG302"
                        case SEG303 = "SEG303"
                        case SEG304 = "SEG304"
                        case SEG305 = "SEG305"
                        case SEG306 = "SEG306"
                        case SEG307 = "SEG307"
                        case SEG224 = "SEG224"
                        case SEG225 = "SEG225"
                        case SEG226 = "SEG226"
                        case SEG227 = "SEG227"
                        case SEG228 = "SEG228"
                        case SEG229 = "SEG229"
                        case SEG230 = "SEG230"
                        case SEG231 = "SEG231"
                        case SEG216 = "SEG216"
                        case SEG217 = "SEG217"
                        case SEG218 = "SEG218"
                        case SEG219 = "SEG219"
                        case SEG220 = "SEG220"
                        case SEG221 = "SEG221"
                        case SEG222 = "SEG222"
                        case SEG223 = "SEG223"
                        case SEG208 = "SEG208"
                        case SEG209 = "SEG209"
                        case SEG210 = "SEG210"
                        case SEG211 = "SEG211"
                        case SEG212 = "SEG212"
                        case SEG213 = "SEG213"
                        case SEG214 = "SEG214"
                        case SEG215 = "SEG215"
                        case SEG200 = "SEG200"
                        case SEG201 = "SEG201"
                        case SEG202 = "SEG202"
                        case SEG203 = "SEG203"
                        case SEG204 = "SEG204"
                        case SEG205 = "SEG205"
                        case SEG206 = "SEG206"
                        case SEG207 = "SEG207"
                        case SEG124 = "SEG124"
                        case SEG125 = "SEG125"
                        case SEG126 = "SEG126"
                        case SEG127 = "SEG127"
                        case SEG128 = "SEG128"
                        case SEG129 = "SEG129"
                        case SEG130 = "SEG130"
                        case SEG131 = "SEG131"
                        case SEG116 = "SEG116"
                        case SEG117 = "SEG117"
                        case SEG118 = "SEG118"
                        case SEG119 = "SEG119"
                        case SEG120 = "SEG120"
                        case SEG121 = "SEG121"
                        case SEG122 = "SEG122"
                        case SEG123 = "SEG123"
                        case SEG108 = "SEG108"
                        case SEG109 = "SEG109"
                        case SEG110 = "SEG110"
                        case SEG111 = "SEG111"
                        case SEG112 = "SEG112"
                        case SEG113 = "SEG113"
                        case SEG114 = "SEG114"
                        case SEG115 = "SEG115"
                        case SEG100 = "SEG100"
                        case SEG101 = "SEG101"
                        case SEG102 = "SEG102"
                        case SEG103 = "SEG103"
                        case SEG104 = "SEG104"
                        case SEG105 = "SEG105"
                        case SEG106 = "SEG106"
                        case SEG107 = "SEG107"
                        case SEG024 = "SEG024"
                        case SEG025 = "SEG025"
                        case SEG026 = "SEG026"
                        case SEG027 = "SEG027"
                        case SEG028 = "SEG028"
                        case SEG029 = "SEG029"
                        case SEG030 = "SEG030"
                        case SEG031 = "SEG031"
                        case SEG016 = "SEG016"
                        case SEG017 = "SEG017"
                        case SEG018 = "SEG018"
                        case SEG019 = "SEG019"
                        case SEG020 = "SEG020"
                        case SEG021 = "SEG021"
                        case SEG022 = "SEG022"
                        case SEG023 = "SEG023"
                        case SEG008 = "SEG008"
                        case SEG009 = "SEG009"
                        case SEG010 = "SEG010"
                        case SEG011 = "SEG011"
                        case SEG012 = "SEG012"
                        case SEG013 = "SEG013"
                        case SEG014 = "SEG014"
                        case SEG015 = "SEG015"
                        case SEG000 = "SEG000"
                        case SEG001 = "SEG001"
                        case SEG002 = "SEG002"
                        case SEG003 = "SEG003"
                        case SEG004 = "SEG004"
                        case SEG005 = "SEG005"
                        case SEG006 = "SEG006"
                        case SEG007 = "SEG007"
                        case PCINT8 = "PCINT8"
                        case PCINT9 = "PCINT9"
                        case PCINT10 = "PCINT10"
                        case PCINT11 = "PCINT11"
                        case PCINT12 = "PCINT12"
                        case PCINT13 = "PCINT13"
                        case PCINT14 = "PCINT14"
                        case PCINT15 = "PCINT15"
                        case PCINT0 = "PCINT0"
                        case PCINT1 = "PCINT1"
                        case PCINT2 = "PCINT2"
                        case PCINT3 = "PCINT3"
                        case PCINT4 = "PCINT4"
                        case PCINT5 = "PCINT5"
                        case PCINT6 = "PCINT6"
                        case PCINT7 = "PCINT7"
                        case CTC1 = "CTC1"
                        case WUTCF = "WUTCF"
                        case DUVD = "DUVD"
                        case DCD = "DCD"
                        case CCD = "CCD"
                        case DCDL = "DCDL"
                        case CCDL = "CCDL"
                        case DUVT = "DUVT"
                        case DUDL = "DUDL"
                        case DUVIF = "DUVIF"
                        case DUVIE = "DUVIE"
                        case PWMOC = "PWMOC"
                        case PWMOPC = "PWMOPC"
                        case PFD = "PFD"
                        case XOE = "XOE"
                        case ACS = "ACS"
                        case RXC2 = "RXC2"
                        case TXC2 = "TXC2"
                        case UDRE2 = "UDRE2"
                        case FE2 = "FE2"
                        case DOR2 = "DOR2"
                        case UPE2 = "UPE2"
                        case U2X2 = "U2X2"
                        case MPCM2 = "MPCM2"
                        case RXCIE2 = "RXCIE2"
                        case TXCIE2 = "TXCIE2"
                        case UDRIE2 = "UDRIE2"
                        case RXEN2 = "RXEN2"
                        case TXEN2 = "TXEN2"
                        case UCSZ22 = "UCSZ22"
                        case RXB82 = "RXB82"
                        case TXB82 = "TXB82"
                        case UMSEL2 = "UMSEL2"
                        case UPM2 = "UPM2"
                        case USBS2 = "USBS2"
                        case UCPOL2 = "UCPOL2"
                        case RXC3 = "RXC3"
                        case TXC3 = "TXC3"
                        case UDRE3 = "UDRE3"
                        case FE3 = "FE3"
                        case DOR3 = "DOR3"
                        case UPE3 = "UPE3"
                        case U2X3 = "U2X3"
                        case MPCM3 = "MPCM3"
                        case RXCIE3 = "RXCIE3"
                        case TXCIE3 = "TXCIE3"
                        case UDRIE3 = "UDRIE3"
                        case RXEN3 = "RXEN3"
                        case TXEN3 = "TXEN3"
                        case UCSZ32 = "UCSZ32"
                        case RXB83 = "RXB83"
                        case TXB83 = "TXB83"
                        case UMSEL3 = "UMSEL3"
                        case UPM3 = "UPM3"
                        case USBS3 = "USBS3"
                        case UCSZ3 = "UCSZ3"
                        case UCPOL3 = "UCPOL3"
                        case PRUSART3 = "PRUSART3"
                        case ENABLE = "ENABLE"
                        case HYSMODE = "HYSMODE"
                        case LPMODE = "LPMODE"
                        case INTMODE = "INTMODE"
                        case OUTEN = "OUTEN"
                        case RUNSTDBY = "RUNSTDBY"
                        case MUXNEG = "MUXNEG"
                        case MUXPOS = "MUXPOS"
                        case INVERT = "INVERT"
                        case DATA = "DATA"
                        case CMP = "CMP"
                        case STATE = "STATE"
                        case FREERUN = "FREERUN"
                        case RESSEL = "RESSEL"
                        case RUNSTBY = "RUNSTBY"
                        case SAMPNUM = "SAMPNUM"
                        case PRESC = "PRESC"
                        case REFSEL = "REFSEL"
                        case SAMPCAP = "SAMPCAP"
                        case SAMPDLY = "SAMPDLY"
                        case ASDV = "ASDV"
                        case INITDLY = "INITDLY"
                        case WINCM = "WINCM"
                        case SAMPLEN = "SAMPLEN"
                        case STCONV = "STCONV"
                        case STARTEI = "STARTEI"
                        case RESRDY = "RESRDY"
                        case WCMP = "WCMP"
                        case DBGRUN = "DBGRUN"
                        case TEMP = "TEMP"
                        case DUTYCYC = "DUTYCYC"
                        case SLEEP = "SLEEP"
                        case ACTIVE = "ACTIVE"
                        case SAMPFREQ = "SAMPFREQ"
                        case LVL = "LVL"
                        case VLMLVL = "VLMLVL"
                        case VLMIE = "VLMIE"
                        case VLMCFG = "VLMCFG"
                        case VLMIF = "VLMIF"
                        case VLMS = "VLMS"
                        case SEQSEL0 = "SEQSEL0"
                        case SEQSEL1 = "SEQSEL1"
                        case INTMODE0 = "INTMODE0"
                        case INTMODE1 = "INTMODE1"
                        case INTMODE2 = "INTMODE2"
                        case INTMODE3 = "INTMODE3"
                        case CLKSRC = "CLKSRC"
                        case FILTSEL = "FILTSEL"
                        case EDGEDET = "EDGEDET"
                        case INSEL0 = "INSEL0"
                        case INSEL1 = "INSEL1"
                        case INSEL2 = "INSEL2"
                        case TRUTH = "TRUTH"
                        case CLKSEL = "CLKSEL"
                        case CLKOUT = "CLKOUT"
                        case LOCKEN = "LOCKEN"
                        case SOSC = "SOSC"
                        case OSC20MS = "OSC20MS"
                        case OSC32KS = "OSC32KS"
                        case XOSC32KS = "XOSC32KS"
                        case EXTS = "EXTS"
                        case CAL20M = "CAL20M"
                        case TEMPCAL20M = "TEMPCAL20M"
                        case SEL = "SEL"
                        case CCP = "CCP"
                        case LVL0RR = "LVL0RR"
                        case CVT = "CVT"
                        case LVL0EX = "LVL0EX"
                        case LVL1EX = "LVL1EX"
                        case NMIEX = "NMIEX"
                        case LVL0PRI = "LVL0PRI"
                        case LVL1VEC = "LVL1VEC"
                        case NMIEN = "NMIEN"
                        case SRC = "SRC"
                        case MODE = "MODE"
                        case BUSY = "BUSY"
                        case OK = "OK"
                        case STROBE0 = "STROBE0"
                        case GENERATOR = "GENERATOR"
                        case PERIOD = "PERIOD"
                        case WINDOW = "WINDOW"
                        case FREQSEL = "FREQSEL"
                        case OSCLOCK = "OSCLOCK"
                        case RSTPINCFG = "RSTPINCFG"
                        case CRCSRC = "CRCSRC"
                        case CMD = "CMD"
                        case APCWP = "APCWP"
                        case BOOTLOCK = "BOOTLOCK"
                        case FBUSY = "FBUSY"
                        case EEBUSY = "EEBUSY"
                        case WRERROR = "WRERROR"
                        case EEREADY = "EEREADY"
                        case ISC = "ISC"
                        case PULLUPEN = "PULLUPEN"
                        case INVEN = "INVEN"
                        case EVOUTA = "EVOUTA"
                        case EVOUTB = "EVOUTB"
                        case EVOUTC = "EVOUTC"
                        case EVOUTD = "EVOUTD"
                        case EVOUTE = "EVOUTE"
                        case EVOUTF = "EVOUTF"
                        case LUT0 = "LUT0"
                        case LUT1 = "LUT1"
                        case LUT2 = "LUT2"
                        case LUT3 = "LUT3"
                        case USART0 = "USART0"
                        case USART1 = "USART1"
                        case USART2 = "USART2"
                        case USART3 = "USART3"
                        case SPI0 = "SPI0"
                        case TWI0 = "TWI0"
                        case TCA0 = "TCA0"
                        case TCB0 = "TCB0"
                        case TCB1 = "TCB1"
                        case TCB2 = "TCB2"
                        case TCB3 = "TCB3"
                        case SWRF = "SWRF"
                        case UPDIRF = "UPDIRF"
                        case SWRE = "SWRE"
                        case RTCEN = "RTCEN"
                        case CORREN = "CORREN"
                        case PRESCALER = "PRESCALER"
                        case CTRLABUSY = "CTRLABUSY"
                        case CNTBUSY = "CNTBUSY"
                        case PERBUSY = "PERBUSY"
                        case CMPBUSY = "CMPBUSY"
                        case OVF = "OVF"
                        case ERROR = "ERROR"
                        case SIGN = "SIGN"
                        case PITEN = "PITEN"
                        case CTRLBUSY = "CTRLBUSY"
                        case PI = "PI"
                        case SEN = "SEN"
                        case SMODE = "SMODE"
                        case CLK2X = "CLK2X"
                        case MASTER = "MASTER"
                        case SSD = "SSD"
                        case BUFWR = "BUFWR"
                        case BUFEN = "BUFEN"
                        case IE = "IE"
                        case SSIE = "SSIE"
                        case DREIE = "DREIE"
                        case BUFOVF = "BUFOVF"
                        case SSIF = "SSIF"
                        case DREIF = "DREIF"
                        case TXCIF = "TXCIF"
                        case RXCIF = "RXCIF"
                        case WRCOL = "WRCOL"
                        case IF = "IF"
                        case ENEXTBRK = "ENEXTBRK"
                        case OCDMR = "OCDMR"
                        case WGMODE = "WGMODE"
                        case ALUPD = "ALUPD"
                        case CMP0EN = "CMP0EN"
                        case CMP1EN = "CMP1EN"
                        case CMP2EN = "CMP2EN"
                        case CMP0OV = "CMP0OV"
                        case CMP1OV = "CMP1OV"
                        case CMP2OV = "CMP2OV"
                        case SPLITM = "SPLITM"
                        case DIR = "DIR"
                        case LUPD = "LUPD"
                        case PERBV = "PERBV"
                        case CMP0BV = "CMP0BV"
                        case CMP1BV = "CMP1BV"
                        case CMP2BV = "CMP2BV"
                        case CNTEI = "CNTEI"
                        case EVACT = "EVACT"
                        case CMP0 = "CMP0"
                        case CMP1 = "CMP1"
                        case CMP2 = "CMP2"
                        case LCMP0EN = "LCMP0EN"
                        case LCMP1EN = "LCMP1EN"
                        case LCMP2EN = "LCMP2EN"
                        case HCMP0EN = "HCMP0EN"
                        case HCMP1EN = "HCMP1EN"
                        case HCMP2EN = "HCMP2EN"
                        case LCMP0OV = "LCMP0OV"
                        case LCMP1OV = "LCMP1OV"
                        case LCMP2OV = "LCMP2OV"
                        case HCMP0OV = "HCMP0OV"
                        case HCMP1OV = "HCMP1OV"
                        case HCMP2OV = "HCMP2OV"
                        case LUNF = "LUNF"
                        case HUNF = "HUNF"
                        case LCMP0 = "LCMP0"
                        case LCMP1 = "LCMP1"
                        case LCMP2 = "LCMP2"
                        case SYNCUPD = "SYNCUPD"
                        case CNTMODE = "CNTMODE"
                        case CCMPEN = "CCMPEN"
                        case CCMPINIT = "CCMPINIT"
                        case ASYNC = "ASYNC"
                        case CAPTEI = "CAPTEI"
                        case EDGE = "EDGE"
                        case FILTER = "FILTER"
                        case CAPT = "CAPT"
                        case RUN = "RUN"
                        case FMPEN = "FMPEN"
                        case SDAHOLD = "SDAHOLD"
                        case SDASETUP = "SDASETUP"
                        case SMEN = "SMEN"
                        case QCEN = "QCEN"
                        case WIEN = "WIEN"
                        case RIEN = "RIEN"
                        case MCMD = "MCMD"
                        case ACKACT = "ACKACT"
                        case FLUSH = "FLUSH"
                        case BUSSTATE = "BUSSTATE"
                        case BUSERR = "BUSERR"
                        case ARBLOST = "ARBLOST"
                        case RXACK = "RXACK"
                        case CLKHOLD = "CLKHOLD"
                        case WIF = "WIF"
                        case RIF = "RIF"
                        case PMEN = "PMEN"
                        case PIEN = "PIEN"
                        case APIEN = "APIEN"
                        case DIEN = "DIEN"
                        case AP = "AP"
                        case COLL = "COLL"
                        case APIF = "APIF"
                        case DIF = "DIF"
                        case ADDREN = "ADDREN"
                        case ADDRMASK = "ADDRMASK"
                        case DATA8 = "DATA8"
                        case PERR = "PERR"
                        case WFB = "WFB"
                        case BDF = "BDF"
                        case ISFIF = "ISFIF"
                        case RXSIF = "RXSIF"
                        case RS485 = "RS485"
                        case ABEIE = "ABEIE"
                        case LBME = "LBME"
                        case RXMODE = "RXMODE"
                        case ODME = "ODME"
                        case SFDEN = "SFDEN"
                        case CMODE = "CMODE"
                        case UCPHA = "UCPHA"
                        case UDORD = "UDORD"
                        case CHSIZE = "CHSIZE"
                        case SBMODE = "SBMODE"
                        case ABW = "ABW"
                        case IREI = "IREI"
                        case TXPL = "TXPL"
                        case RXPL = "RXPL"
                        case AC0REFSEL = "AC0REFSEL"
                        case ADC0REFSEL = "ADC0REFSEL"
                        case AC0REFEN = "AC0REFEN"
                        case ADC0REFEN = "ADC0REFEN"
                        case SYNCBUSY = "SYNCBUSY"
                        case S8515C = "S8515C"
                        case S8535C = "S8535C"
                    }
                    
                    enum Values: String, Codable {
                        case CPUSLEEPMODE2 = "CPU_SLEEP_MODE2"
                        case ENUMBODLEVEL = "ENUM_BODLEVEL"
                        case ENUMBOOTSZ = "ENUM_BOOTSZ"
                        case ENUMSUTCKSEL = "ENUM_SUT_CKSEL"
                        case ENUMLB = "ENUM_LB"
                        case ENUMBLB = "ENUM_BLB"
                        case ENUMBLB2 = "ENUM_BLB2"
                        case COMMSCKRATE3BIT = "COMM_SCK_RATE_3BIT"
                        case COMMTWIPRESACLE = "COMM_TWI_PRESACLE"
                        case COMMUSARTMODE = "COMM_USART_MODE"
                        case COMMUPMPARITYMODE = "COMM_UPM_PARITY_MODE"
                        case COMMSTOPBITSEL = "COMM_STOP_BIT_SEL"
                        case CPUSECTORLIMITSXMEM = "CPU_SECTOR_LIMITS_XMEM"
                        case CPUWAITSTATES = "CPU_WAIT_STATES"
                        case CPUCLKPRESCALE4BITSSMALL = "CPU_CLK_PRESCALE_4_BITS_SMALL"
                        case CPUSLEEPMODE3BITS2 = "CPU_SLEEP_MODE_3BITS2"
                        case INTERRUPTSENSECONTROL = "INTERRUPT_SENSE_CONTROL"
                        case WAVEFORMGENMODE = "WAVEFORM_GEN_MODE"
                        case CLKSEL3BITEXT = "CLK_SEL_3BIT_EXT"
                        case CLKSEL3BIT = "CLK_SEL_3BIT"
                        case WDOGTIMERPRESCALE3BITS = "WDOG_TIMER_PRESCALE_3BITS"
                        case ANALOGADCVREF2 = "ANALOG_ADC_V_REF2"
                        case ANALOGADCPRESCALER = "ANALOG_ADC_PRESCALER"
                        case ANALOGADCAUTOTRIGGER2 = "ANALOG_ADC_AUTO_TRIGGER2"
                        case ANALOGCOMPINTERRUPT = "ANALOG_COMP_INTERRUPT"
                        case PSCFAULTMODEOPER = "PSC_FAULT_MODE_OPER"
                        case PSCPRESCALER = "PSC_PRESCALER"
                        case PSCALIGNMODE = "PSC_ALIGN_MODE"
                        case PSCSYNCSOURCE = "PSC_SYNC_SOURCE"
                        case MISC2BITCOUNT = "MISC_2BIT_COUNT"
                        case CPUSLEEPMODE3BITS4 = "CPU_SLEEP_MODE_3BITS4"
                        case WDOGTIMERPRESCALE4BITS = "WDOG_TIMER_PRESCALE_4BITS"
                        case COMMTRANSCHARSIZE = "COMM_TRANS_CHAR_SIZE"
                        case COMMTRANSCHARSIZE2 = "COMM_TRANS_CHAR_SIZE2"
                        case ANALOGDACAUTOTRIGGER = "ANALOG_DAC_AUTO_TRIGGER"
                        case ANALOGADCAUTOTRIGGER4BITS = "ANALOG_ADC_AUTO_TRIGGER_4BITS"
                        case EEPMODE = "EEP_MODE"
                        case PLLINPUTPRESCALER = "PLL_INPUT_PRESCALER"
                        case CPUSLEEPMODE3BITS = "CPU_SLEEP_MODE_3BITS"
                        case CPUSECTORLIMITS3 = "CPU_SECTOR_LIMITS3"
                        case CPUPINRELEASE = "CPU_PIN_RELEASE"
                        case COMMUSARTMODE2BIT = "COMM_USART_MODE_2BIT"
                        case INTERRUPTSENSECONTROL2 = "INTERRUPT_SENSE_CONTROL2"
                        case ENUMSUT = "ENUM_SUT"
                        case ANALOGCOMPSELECTIONBITS = "ANALOG_COMP_SELECTION_BITS"
                        case ENUMOSCSEL = "ENUM_OSCSEL"
                        case COMMTWBUSTIMEOUT = "COMM_TW_BUS_TIMEOUT"
                        case ANALOGADCMUXPOS = "ANALOG_ADC_MUXPOS"
                        case RAMPZBITF = "RAMPZ_BITF"
                        case ANALOGADCVREF3 = "ANALOG_ADC_V_REF3"
                        case ADCMUXSINGLENOTEMP = "ADC_MUX_SINGLE_NO_TEMP"
                        case ANALOGADCAUTOTRIGGER = "ANALOG_ADC_AUTO_TRIGGER"
                        case ADCMUXSINGLE = "ADC_MUX_SINGLE"
                        case CPUSLEEPMODE2BITS1 = "CPU_SLEEP_MODE_2BITS1"
                        case CPUSECTORLIMITS = "CPU_SECTOR_LIMITS"
                        case SYNCHRONIZATIONCOMMAND = "SYNCHRONIZATION_COMMAND"
                        case CADCCHOPPERMODESELECT = "C_ADC_CHOPPER_MODE_SELECT"
                        case SAMPLINGCLOCKSELECT = "SAMPLING_CLOCK_SELECT"
                        case INSTANTANEOUSDECIMATIONRATIOSELECT = "INSTANTANEOUS_DECIMATION_RATIO_SELECT"
                        case ACCUMULATEDDECIMATIONRATIOSELECT = "ACCUMULATED_DECIMATION_RATIO_SELECT"
                        case CADCREGULARCURRENTCOMPARATORMODE = "C_ADC_REGULAR_CURRENT_COMPARATOR_MODE"
                        case MISC4BITCOUNT = "MISC_4BIT_COUNT"
                        case CADCINPUTGAIN = "C_ADC_INPUT_GAIN"
                        case CADCPINDIAGNOSISMODE = "C_ADC_PIN_DIAGNOSIS_MODE"
                        case VADCREFERENCESELECT = "V_ADC_REFERENCE_SELECT"
                        case VADCPINDIAGNOSISMODE = "V_ADC_PIN_DIAGNOSIS_MODE"
                        case VADCCHANNELSELECT = "V_ADC_CHANNEL_SELECT"
                        case COMMUSARTMODE2BITMEGARF = "COMM_USART_MODE_2BIT_MEGARF"
                        case USARTCHARSIZEBITF = "USART_CHAR_SIZE_BITF"
                        case USARTCLKPOLARITYBITF = "USART_CLK_POLARITY_BITF"
                        case TWISTATUSBITF = "TWI_STATUS_BITF"
                        case SPICPOLBITF = "SPI_CPOL_BITF"
                        case SPICPHABITF = "SPI_CPHA_BITF"
                        case COMMSCKRATESPI2X = "COMM_SCK_RATE_SPI2X"
                        case TC0CLKSEL3BITEXT = "TC0_CLK_SEL_3BIT_EXT"
                        case TC0COM0ABITF = "TC0_COM0A_BITF"
                        case TC0COM0BBITF = "TC0_COM0B_BITF"
                        case TC0WGMBITF = "TC0_WGM_BITF"
                        case TC2COM2ABITF = "TC2_COM2A_BITF"
                        case TC2COM2BBITF = "TC2_COM2B_BITF"
                        case TC2CLKSEL3BIT = "TC2_CLK_SEL_3BIT"
                        case TC4COMNXBITF = "TC4_COMNX_BITF"
                        case TC1WGMXBITF = "TC1_WGMX_BITF"
                        case CLKSEL3BITNOEXTMEGARF = "CLK_SEL_3BIT_NOEXT_MEGARF"
                        case TC1COMNXBITF = "TC1_COMNX_BITF"
                        case CLKSEL3BITEXTMEGARF = "CLK_SEL_3BIT_EXT_MEGARF"
                        case PALTDbitf = "PALTD_bitf"
                        case PALTUbitf = "PALTU_bitf"
                        case AESMODEBITF = "AES_MODE_BITF"
                        case AESDIRECTIONBITF = "AES_DIRECTION_BITF"
                        case CCADONEbitf = "CCA_DONE_bitf"
                        case CCASTATUSbitf = "CCA_STATUS_bitf"
                        case TSTSTATUSbitf = "TST_STATUS_bitf"
                        case TRXSTATUSbitf = "TRX_STATUS_bitf"
                        case TRACSTATUSbitf = "TRAC_STATUS_bitf"
                        case TRXCMDbitf = "TRX_CMD_bitf"
                        case TXPWRbitf = "TX_PWR_bitf"
                        case RXCRCVALIDbitf = "RX_CRC_VALID_bitf"
                        case RSSIVALUEBITF = "RSSI_VALUE_BITF"
                        case EDLEVELBITF = "ED_LEVEL_BITF"
                        case CCAMODEbitf = "CCA_MODE_bitf"
                        case CHANNELbitf = "CHANNEL_bitf"
                        case PDTTHRESbitf = "PDT_THRES_bitf"
                        case SFDVALUEBITF = "SFD_VALUE_BITF"
                        case OQPSKDATARATEbitf = "OQPSK_DATA_RATE_bitf"
                        case ANTSELbitf = "ANT_SEL_bitf"
                        case ANTDIVENbitf = "ANT_DIV_EN_bitf"
                        case ANTEXTSWENbitf = "ANT_EXT_SW_EN_bitf"
                        case ANTCTRLbitf = "ANT_CTRL_bitf"
                        case AVREGEXTBITF = "AVREG_EXT_BITF"
                        case AVDDOKBITF = "AVDD_OK_BITF"
                        case DVREGEXTBITF = "DVREG_EXT_BITF"
                        case DVDDOKBITF = "DVDD_OK_BITF"
                        case BATMONOKbitf = "BATMON_OK_bitf"
                        case BATMONHRbitf = "BATMON_HR_bitf"
                        case BATMONVTHbitf = "BATMON_VTH_bitf"
                        case XTALMODEBITF = "XTAL_MODE_BITF"
                        case XTALTRIMbitf = "XTAL_TRIM_bitf"
                        case RXPDTLEVELBITF = "RX_PDT_LEVEL_BITF"
                        case RXRPCCTRLBITF = "RX_RPC_CTRL_BITF"
                        case AACKACKTIMEbitf = "AACK_ACK_TIME_bitf"
                        case PARTNUMbitf = "PART_NUM_bitf"
                        case VERSIONNUM2BITF = "VERSION_NUM_2_BITF"
                        case MANID0BITF = "MAN_ID_0_BITF"
                        case MANID1BITF = "MAN_ID_1_BITF"
                        case MAXFRAMERETRIESbitf = "MAX_FRAME_RETRIES_bitf"
                        case MAXCSMARETRIESbitf = "MAX_CSMA_RETRIES_bitf"
                        case SLOTTEDOPERATIONBITF = "SLOTTED_OPERATION_BITF"
                        case AACKFVNMODEbitf = "AACK_FVN_MODE_bitf"
                        case MAXBEbitf = "MAX_BE_bitf"
                        case MINBEbitf = "MIN_BE_bitf"
                        case TSTCTRLDIGBITF = "TST_CTRL_DIG_BITF"
                        case SCCKDIVBITF = "SCCKDIV_BITF"
                        case SCCS3BITF = "SCCS3_BITF"
                        case SCCS2BITF = "SCCS2_BITF"
                        case SCCS1BITF = "SCCS1_BITF"
                        case EEPMODE2 = "EEP_MODE2"
                        case OCDRDATABITF = "OCDR_DATA_BITF"
                        case INTERRUPTSENSECONTROL3 = "INTERRUPT_SENSE_CONTROL3"
                        case INTERRUPTREQENABLEBITF = "INTERRUPT_REQ_ENABLE_BITF"
                        case INTERRUPTEXTFLAGBITF = "INTERRUPT_EXT_FLAG_BITF"
                        case ANALOGADCVREF9 = "ANALOG_ADC_V_REF9"
                        case ANALOGADCTRACKANDHOLDTIME = "ANALOG_ADC_TRACK_AND_HOLD_TIME"
                        case ANALOGADCSTARTUPTIME = "ANALOG_ADC_STARTUP_TIME"
                        case OSCCALBITF = "OSCCAL_BITF"
                        case CPUCLKPRESCALE4BITSSMALLMEGARF = "CPU_CLK_PRESCALE_4_BITS_SMALL_MEGARF"
                        case NEMCRADDRESSBITF = "NEMCR_ADDRESS_BITF"
                        case BGCALFINEBITF = "BGCAL_FINE_BITF"
                        case BGCALBITF = "BGCAL_BITF"
                        case LLDRLVALUEBITF = "LLDRL_VALUE_BITF"
                        case LLDRHVALUEBITF = "LLDRH_VALUE_BITF"
                        case PADIObitf = "PAD_IO_bitf"
                        case PABUFLTbitf = "PA_BUF_LT_bitf"
                        case PALTbitf = "PA_LT_bitf"
                        case VERSIONNUMBITF = "VERSION_NUM_BITF"
                        case CLKSEL3BITSWAPPED = "CLK_SEL_3BIT_SWAPPED"
                        case ANALOGADCVREF6 = "ANALOG_ADC_V_REF6"
                        case ADCMUXDIFF = "ADC_MUX_DIFF"
                        case COMMUSIOP = "COMM_USI_OP"
                        case LCDPORTMASK = "LCD_PORT_MASK"
                        case LCDPRESCALE = "LCD_PRESCALE"
                        case MISC3BITCOUNT = "MISC_3BIT_COUNT"
                        case LCDDISPCONFDRIVE = "LCD_DISP_CONF_DRIVE"
                        case LCDCONTRAST = "LCD_CONTRAST"
                        case ENUMCFD = "ENUM_CFD"
                        case COMMTWIPRESCALE = "COMM_TWI_PRESCALE"
                        case LCDPORTMASK4BIT = "LCD_PORT_MASK_4BIT"
                        case CLKSEL3BITONLYPRESCALE = "CLK_SEL_3BIT_ONLY_PRESCALE"
                        case BATSHORTCIRCDELAY = "BAT_SHORT_CIRC_DELAY"
                        case BATOVERCURRENTDELAY = "BAT_OVER_CURRENT_DELAY"
                        case BATVOLTSENSE = "BAT_VOLT_SENSE"
                        case BATVOLTSENSE2 = "BAT_VOLT_SENSE2"
                        case BATDEEPUNDERDELAY = "BAT_DEEP_UNDER_DELAY"
                        case BATDEEPUNDERLEVEL = "BAT_DEEP_UNDER_LEVEL"
                        case ANALOGCADAACCTIME = "ANALOG_CADA_ACC_TIME"
                        case CPUSLEEPMODE3BITS3 = "CPU_SLEEP_MODE_3BITS3"
                        case CPUSECTORLIMITS2 = "CPU_SECTOR_LIMITS2"
                        case ADCMUXDIFF6 = "ADC_MUX_DIFF6"
                        case ACHYSMODE = "AC_HYSMODE"
                        case ACLPMODE = "AC_LPMODE"
                        case ACINTMODE = "AC_INTMODE"
                        case ACMUXNEG = "AC_MUXNEG"
                        case ACMUXPOS = "AC_MUXPOS"
                        case ADCRESSEL = "ADC_RESSEL"
                        case ADCSAMPNUM = "ADC_SAMPNUM"
                        case ADCPRESC = "ADC_PRESC"
                        case ADCREFSEL = "ADC_REFSEL"
                        case ADCASDV = "ADC_ASDV"
                        case ADCINITDLY = "ADC_INITDLY"
                        case ADCWINCM = "ADC_WINCM"
                        case ADCMUXPOS = "ADC_MUXPOS"
                        case ADCDUTYCYC = "ADC_DUTYCYC"
                        case BODSLEEP = "BOD_SLEEP"
                        case BODACTIVE = "BOD_ACTIVE"
                        case BODSAMPFREQ = "BOD_SAMPFREQ"
                        case BODLVL = "BOD_LVL"
                        case BODVLMLVL = "BOD_VLMLVL"
                        case BODVLMCFG = "BOD_VLMCFG"
                        case CCLSEQSEL0 = "CCL_SEQSEL0"
                        case CCLSEQSEL1 = "CCL_SEQSEL1"
                        case CCLINTMODE0 = "CCL_INTMODE0"
                        case CCLINTMODE1 = "CCL_INTMODE1"
                        case CCLINTMODE2 = "CCL_INTMODE2"
                        case CCLINTMODE3 = "CCL_INTMODE3"
                        case CCLCLKSRC = "CCL_CLKSRC"
                        case CCLFILTSEL = "CCL_FILTSEL"
                        case CCLEDGEDET = "CCL_EDGEDET"
                        case CCLINSEL0 = "CCL_INSEL0"
                        case CCLINSEL1 = "CCL_INSEL1"
                        case CCLINSEL2 = "CCL_INSEL2"
                        case CLKCTRLCLKSEL = "CLKCTRL_CLKSEL"
                        case CLKCTRLPDIV = "CLKCTRL_PDIV"
                        case CLKCTRLCSUT = "CLKCTRL_CSUT"
                        case CPUCCP = "CPU_CCP"
                        case CRCSCANSRC = "CRCSCAN_SRC"
                        case CRCSCANMODE = "CRCSCAN_MODE"
                        case EVSYSSTROBE0 = "EVSYS_STROBE0"
                        case EVSYSGENERATOR = "EVSYS_GENERATOR"
                        case EVSYSCHANNEL = "EVSYS_CHANNEL"
                        case FUSEPERIOD = "FUSE_PERIOD"
                        case FUSEWINDOW = "FUSE_WINDOW"
                        case FUSESLEEP = "FUSE_SLEEP"
                        case FUSEACTIVE = "FUSE_ACTIVE"
                        case FUSESAMPFREQ = "FUSE_SAMPFREQ"
                        case FUSELVL = "FUSE_LVL"
                        case FUSEFREQSEL = "FUSE_FREQSEL"
                        case FUSERSTPINCFG = "FUSE_RSTPINCFG"
                        case FUSECRCSRC = "FUSE_CRCSRC"
                        case FUSESUT = "FUSE_SUT"
                        case LOCKBITLB = "LOCKBIT_LB"
                        case NVMCTRLCMD = "NVMCTRL_CMD"
                        case PORTISC = "PORT_ISC"
                        case PORTMUXEVOUTA = "PORTMUX_EVOUTA"
                        case PORTMUXEVOUTB = "PORTMUX_EVOUTB"
                        case PORTMUXEVOUTC = "PORTMUX_EVOUTC"
                        case PORTMUXEVOUTD = "PORTMUX_EVOUTD"
                        case PORTMUXEVOUTE = "PORTMUX_EVOUTE"
                        case PORTMUXEVOUTF = "PORTMUX_EVOUTF"
                        case PORTMUXUSART0 = "PORTMUX_USART0"
                        case PORTMUXUSART1 = "PORTMUX_USART1"
                        case PORTMUXUSART2 = "PORTMUX_USART2"
                        case PORTMUXUSART3 = "PORTMUX_USART3"
                        case PORTMUXSPI0 = "PORTMUX_SPI0"
                        case PORTMUXTWI0 = "PORTMUX_TWI0"
                        case PORTMUXTCA0 = "PORTMUX_TCA0"
                        case PORTMUXTCB0 = "PORTMUX_TCB0"
                        case PORTMUXTCB1 = "PORTMUX_TCB1"
                        case PORTMUXTCB2 = "PORTMUX_TCB2"
                        case PORTMUXTCB3 = "PORTMUX_TCB3"
                        case RTCPRESCALER = "RTC_PRESCALER"
                        case RTCCLKSEL = "RTC_CLKSEL"
                        case RTCPERIOD = "RTC_PERIOD"
                        case SLPCTRLSMODE = "SLPCTRL_SMODE"
                        case SPIPRESC = "SPI_PRESC"
                        case SPIMODE = "SPI_MODE"
                        case TCASINGLECLKSEL = "TCA_SINGLE_CLKSEL"
                        case TCASINGLEWGMODE = "TCA_SINGLE_WGMODE"
                        case TCASINGLECMD = "TCA_SINGLE_CMD"
                        case TCASINGLEDIR = "TCA_SINGLE_DIR"
                        case TCASINGLEEVACT = "TCA_SINGLE_EVACT"
                        case TCASPLITCLKSEL = "TCA_SPLIT_CLKSEL"
                        case TCASPLITCMD = "TCA_SPLIT_CMD"
                        case TCBCLKSEL = "TCB_CLKSEL"
                        case TCBCNTMODE = "TCB_CNTMODE"
                        case TWISDAHOLD = "TWI_SDAHOLD"
                        case TWISDASETUP = "TWI_SDASETUP"
                        case TWITIMEOUT = "TWI_TIMEOUT"
                        case TWIMCMD = "TWI_MCMD"
                        case TWIACKACT = "TWI_ACKACT"
                        case TWIBUSSTATE = "TWI_BUSSTATE"
                        case TWISCMD = "TWI_SCMD"
                        case TWIAP = "TWI_AP"
                        case USARTRS485 = "USART_RS485"
                        case USARTRXMODE = "USART_RXMODE"
                        case USARTCMODE = "USART_CMODE"
                        case USARTNORMALCHSIZE = "USART_NORMAL_CHSIZE"
                        case USARTNORMALSBMODE = "USART_NORMAL_SBMODE"
                        case USARTNORMALPMODE = "USART_NORMAL_PMODE"
                        case USARTABW = "USART_ABW"
                        case VREFAC0REFSEL = "VREF_AC0REFSEL"
                        case VREFADC0REFSEL = "VREF_ADC0REFSEL"
                        case WDTPERIOD = "WDT_PERIOD"
                        case WDTWINDOW = "WDT_WINDOW"
                    }
                    
                    enum ReadWrite: String, Codable {
                        case read = "R"
                        case readWrite = "RW"
                        case write = "W"
                    }
                }
            }
        }
        
        struct ValueGroup: Codable {
            @Attribute var name: Name
            @Attribute var caption: Caption?
            let value: [Value]
            
            enum Name: String, Codable {
                case CPUSLEEPMODE2 = "CPU_SLEEP_MODE2"
                case ENUMSUTCKSEL = "ENUM_SUT_CKSEL"
                case ENUMBOOTSZ = "ENUM_BOOTSZ"
                case ENUMBODLEVEL = "ENUM_BODLEVEL"
                case ENUMLB = "ENUM_LB"
                case ENUMBLB = "ENUM_BLB"
                case ENUMBLB2 = "ENUM_BLB2"
                case COMMSCKRATE3BIT = "COMM_SCK_RATE_3BIT"
                case COMMTWIPRESACLE = "COMM_TWI_PRESACLE"
                case COMMUSARTMODE = "COMM_USART_MODE"
                case COMMUPMPARITYMODE = "COMM_UPM_PARITY_MODE"
                case COMMSTOPBITSEL = "COMM_STOP_BIT_SEL"
                case CPUSECTORLIMITSXMEM = "CPU_SECTOR_LIMITS_XMEM"
                case CPUWAITSTATES = "CPU_WAIT_STATES"
                case CPUCLKPRESCALE4BITSSMALL = "CPU_CLK_PRESCALE_4_BITS_SMALL"
                case CPUSLEEPMODE3BITS2 = "CPU_SLEEP_MODE_3BITS2"
                case OSCCALVALUEADDRESSES = "OSCCAL_VALUE_ADDRESSES"
                case INTERRUPTSENSECONTROL = "INTERRUPT_SENSE_CONTROL"
                case WAVEFORMGENMODE = "WAVEFORM_GEN_MODE"
                case CLKSEL3BITEXT = "CLK_SEL_3BIT_EXT"
                case CLKSEL3BIT = "CLK_SEL_3BIT"
                case WDOGTIMERPRESCALE3BITS = "WDOG_TIMER_PRESCALE_3BITS"
                case ANALOGADCVREF2 = "ANALOG_ADC_V_REF2"
                case ANALOGADCPRESCALER = "ANALOG_ADC_PRESCALER"
                case ANALOGADCAUTOTRIGGER2 = "ANALOG_ADC_AUTO_TRIGGER2"
                case ANALOGCOMPINTERRUPT = "ANALOG_COMP_INTERRUPT"
                case PSCFAULTMODEOPER = "PSC_FAULT_MODE_OPER"
                case PSCPRESCALER = "PSC_PRESCALER"
                case PSCALIGNMODE = "PSC_ALIGN_MODE"
                case PSCSYNCSOURCE = "PSC_SYNC_SOURCE"
                case MISC2BITCOUNT = "MISC_2BIT_COUNT"
                case CPUSLEEPMODE3BITS4 = "CPU_SLEEP_MODE_3BITS4"
                case WDOGTIMERPRESCALE4BITS = "WDOG_TIMER_PRESCALE_4BITS"
                case COMMTRANSCHARSIZE = "COMM_TRANS_CHAR_SIZE"
                case COMMTRANSCHARSIZE2 = "COMM_TRANS_CHAR_SIZE2"
                case ANALOGDACAUTOTRIGGER = "ANALOG_DAC_AUTO_TRIGGER"
                case ANALOGADCAUTOTRIGGER4BITS = "ANALOG_ADC_AUTO_TRIGGER_4BITS"
                case EEPMODE = "EEP_MODE"
                case PLLINPUTPRESCALER = "PLL_INPUT_PRESCALER"
                case CPUSLEEPMODE3BITS = "CPU_SLEEP_MODE_3BITS"
                case CPUSECTORLIMITS3 = "CPU_SECTOR_LIMITS3"
                case CPUPINRELEASE = "CPU_PIN_RELEASE"
                case COMMUSARTMODE2BIT = "COMM_USART_MODE_2BIT"
                case INTERRUPTSENSECONTROL2 = "INTERRUPT_SENSE_CONTROL2"
                case ENUMSUT = "ENUM_SUT"
                case ANALOGCOMPSELECTIONBITS = "ANALOG_COMP_SELECTION_BITS"
                case ENUMOSCSEL = "ENUM_OSCSEL"
                case COMMTWBUSTIMEOUT = "COMM_TW_BUS_TIMEOUT"
                case ANALOGADCMUXPOS = "ANALOG_ADC_MUXPOS"
                case RAMPZBITF = "RAMPZ_BITF"
                case ANALOGADCVREF3 = "ANALOG_ADC_V_REF3"
                case ADCMUXSINGLENOTEMP = "ADC_MUX_SINGLE_NO_TEMP"
                case ANALOGADCAUTOTRIGGER = "ANALOG_ADC_AUTO_TRIGGER"
                case ADCMUXSINGLE = "ADC_MUX_SINGLE"
                case CPUSECTORLIMITS = "CPU_SECTOR_LIMITS"
                case CPUSLEEPMODE2BITS1 = "CPU_SLEEP_MODE_2BITS1"
                case SYNCHRONIZATIONCOMMAND = "SYNCHRONIZATION_COMMAND"
                case CADCCHOPPERMODESELECT = "C_ADC_CHOPPER_MODE_SELECT"
                case SAMPLINGCLOCKSELECT = "SAMPLING_CLOCK_SELECT"
                case INSTANTANEOUSDECIMATIONRATIOSELECT = "INSTANTANEOUS_DECIMATION_RATIO_SELECT"
                case ACCUMULATEDDECIMATIONRATIOSELECT = "ACCUMULATED_DECIMATION_RATIO_SELECT"
                case CADCREGULARCURRENTCOMPARATORMODE = "C_ADC_REGULAR_CURRENT_COMPARATOR_MODE"
                case MISC4BITCOUNT = "MISC_4BIT_COUNT"
                case CADCINPUTGAIN = "C_ADC_INPUT_GAIN"
                case CADCPINDIAGNOSISMODE = "C_ADC_PIN_DIAGNOSIS_MODE"
                case VADCREFERENCESELECT = "V_ADC_REFERENCE_SELECT"
                case VADCPINDIAGNOSISMODE = "V_ADC_PIN_DIAGNOSIS_MODE"
                case VADCCHANNELSELECT = "V_ADC_CHANNEL_SELECT"
                case COMMUSARTMODE2BITMEGARF = "COMM_USART_MODE_2BIT_MEGARF"
                case USARTCHARSIZEBITF = "USART_CHAR_SIZE_BITF"
                case USARTCLKPOLARITYBITF = "USART_CLK_POLARITY_BITF"
                case TWISTATUSBITF = "TWI_STATUS_BITF"
                case SPICPOLBITF = "SPI_CPOL_BITF"
                case SPICPHABITF = "SPI_CPHA_BITF"
                case COMMSCKRATESPI2X = "COMM_SCK_RATE_SPI2X"
                case TC0CLKSEL3BITEXT = "TC0_CLK_SEL_3BIT_EXT"
                case TC0COM0ABITF = "TC0_COM0A_BITF"
                case TC0COM0BBITF = "TC0_COM0B_BITF"
                case TC0WGMBITF = "TC0_WGM_BITF"
                case TC2COM2ABITF = "TC2_COM2A_BITF"
                case TC2COM2BBITF = "TC2_COM2B_BITF"
                case TC2CLKSEL3BIT = "TC2_CLK_SEL_3BIT"
                case TC4COMNXBITF = "TC4_COMNX_BITF"
                case TC1WGMXBITF = "TC1_WGMX_BITF"
                case CLKSEL3BITNOEXTMEGARF = "CLK_SEL_3BIT_NOEXT_MEGARF"
                case TC1COMNXBITF = "TC1_COMNX_BITF"
                case CLKSEL3BITEXTMEGARF = "CLK_SEL_3BIT_EXT_MEGARF"
                case PALTDbitf = "PALTD_bitf"
                case PALTUbitf = "PALTU_bitf"
                case AESMODEBITF = "AES_MODE_BITF"
                case AESDIRECTIONBITF = "AES_DIRECTION_BITF"
                case CCADONEbitf = "CCA_DONE_bitf"
                case CCASTATUSbitf = "CCA_STATUS_bitf"
                case TSTSTATUSbitf = "TST_STATUS_bitf"
                case TRXSTATUSbitf = "TRX_STATUS_bitf"
                case TRACSTATUSbitf = "TRAC_STATUS_bitf"
                case TRXCMDbitf = "TRX_CMD_bitf"
                case TXPWRbitf = "TX_PWR_bitf"
                case RXCRCVALIDbitf = "RX_CRC_VALID_bitf"
                case RSSIVALUEBITF = "RSSI_VALUE_BITF"
                case EDLEVELBITF = "ED_LEVEL_BITF"
                case CCAMODEbitf = "CCA_MODE_bitf"
                case CHANNELbitf = "CHANNEL_bitf"
                case PDTTHRESbitf = "PDT_THRES_bitf"
                case SFDVALUEBITF = "SFD_VALUE_BITF"
                case OQPSKDATARATEbitf = "OQPSK_DATA_RATE_bitf"
                case ANTSELbitf = "ANT_SEL_bitf"
                case ANTDIVENbitf = "ANT_DIV_EN_bitf"
                case ANTEXTSWENbitf = "ANT_EXT_SW_EN_bitf"
                case ANTCTRLbitf = "ANT_CTRL_bitf"
                case AVREGEXTBITF = "AVREG_EXT_BITF"
                case AVDDOKBITF = "AVDD_OK_BITF"
                case DVREGEXTBITF = "DVREG_EXT_BITF"
                case DVDDOKBITF = "DVDD_OK_BITF"
                case BATMONOKbitf = "BATMON_OK_bitf"
                case BATMONHRbitf = "BATMON_HR_bitf"
                case BATMONVTHbitf = "BATMON_VTH_bitf"
                case XTALMODEBITF = "XTAL_MODE_BITF"
                case XTALTRIMbitf = "XTAL_TRIM_bitf"
                case RXPDTLEVELBITF = "RX_PDT_LEVEL_BITF"
                case RXRPCCTRLBITF = "RX_RPC_CTRL_BITF"
                case AACKACKTIMEbitf = "AACK_ACK_TIME_bitf"
                case PARTNUMbitf = "PART_NUM_bitf"
                case VERSIONNUM2BITF = "VERSION_NUM_2_BITF"
                case MANID0BITF = "MAN_ID_0_BITF"
                case MANID1BITF = "MAN_ID_1_BITF"
                case MAXFRAMERETRIESbitf = "MAX_FRAME_RETRIES_bitf"
                case MAXCSMARETRIESbitf = "MAX_CSMA_RETRIES_bitf"
                case SLOTTEDOPERATIONBITF = "SLOTTED_OPERATION_BITF"
                case AACKFVNMODEbitf = "AACK_FVN_MODE_bitf"
                case MAXBEbitf = "MAX_BE_bitf"
                case MINBEbitf = "MIN_BE_bitf"
                case TSTCTRLDIGBITF = "TST_CTRL_DIG_BITF"
                case SCCKDIVBITF = "SCCKDIV_BITF"
                case SCCS3BITF = "SCCS3_BITF"
                case SCCS2BITF = "SCCS2_BITF"
                case SCCS1BITF = "SCCS1_BITF"
                case EEPMODE2 = "EEP_MODE2"
                case OCDRDATABITF = "OCDR_DATA_BITF"
                case INTERRUPTSENSECONTROL3 = "INTERRUPT_SENSE_CONTROL3"
                case INTERRUPTREQENABLEBITF = "INTERRUPT_REQ_ENABLE_BITF"
                case INTERRUPTEXTFLAGBITF = "INTERRUPT_EXT_FLAG_BITF"
                case ANALOGADCVREF9 = "ANALOG_ADC_V_REF9"
                case ANALOGADCTRACKANDHOLDTIME = "ANALOG_ADC_TRACK_AND_HOLD_TIME"
                case ANALOGADCSTARTUPTIME = "ANALOG_ADC_STARTUP_TIME"
                case OSCCALBITF = "OSCCAL_BITF"
                case CPUCLKPRESCALE4BITSSMALLMEGARF = "CPU_CLK_PRESCALE_4_BITS_SMALL_MEGARF"
                case NEMCRADDRESSBITF = "NEMCR_ADDRESS_BITF"
                case BGCALFINEBITF = "BGCAL_FINE_BITF"
                case BGCALBITF = "BGCAL_BITF"
                case LLDRLVALUEBITF = "LLDRL_VALUE_BITF"
                case LLDRHVALUEBITF = "LLDRH_VALUE_BITF"
                case PADIObitf = "PAD_IO_bitf"
                case PABUFLTbitf = "PA_BUF_LT_bitf"
                case PALTbitf = "PA_LT_bitf"
                case VERSIONNUMBITF = "VERSION_NUM_BITF"
                case CLKSEL3BITSWAPPED = "CLK_SEL_3BIT_SWAPPED"
                case ANALOGADCVREF6 = "ANALOG_ADC_V_REF6"
                case ADCMUXDIFF = "ADC_MUX_DIFF"
                case COMMUSIOP = "COMM_USI_OP"
                case LCDPORTMASK = "LCD_PORT_MASK"
                case LCDPRESCALE = "LCD_PRESCALE"
                case MISC3BITCOUNT = "MISC_3BIT_COUNT"
                case LCDDISPCONFDRIVE = "LCD_DISP_CONF_DRIVE"
                case LCDCONTRAST = "LCD_CONTRAST"
                case ENUMCFD = "ENUM_CFD"
                case COMMTWIPRESCALE = "COMM_TWI_PRESCALE"
                case LCDPORTMASK4BIT = "LCD_PORT_MASK_4BIT"
                case CLKSEL3BITONLYPRESCALE = "CLK_SEL_3BIT_ONLY_PRESCALE"
                case BATSHORTCIRCDELAY = "BAT_SHORT_CIRC_DELAY"
                case BATOVERCURRENTDELAY = "BAT_OVER_CURRENT_DELAY"
                case BATVOLTSENSE = "BAT_VOLT_SENSE"
                case BATVOLTSENSE2 = "BAT_VOLT_SENSE2"
                case BATDEEPUNDERDELAY = "BAT_DEEP_UNDER_DELAY"
                case BATDEEPUNDERLEVEL = "BAT_DEEP_UNDER_LEVEL"
                case ANALOGCADAACCTIME = "ANALOG_CADA_ACC_TIME"
                case CPUSLEEPMODE3BITS3 = "CPU_SLEEP_MODE_3BITS3"
                case CPUSECTORLIMITS2 = "CPU_SECTOR_LIMITS2"
                case ADCMUXDIFF6 = "ADC_MUX_DIFF6"
                case ACHYSMODE = "AC_HYSMODE"
                case ACINTMODE = "AC_INTMODE"
                case ACLPMODE = "AC_LPMODE"
                case ACMUXNEG = "AC_MUXNEG"
                case ACMUXPOS = "AC_MUXPOS"
                case ADCDUTYCYC = "ADC_DUTYCYC"
                case ADCRESSEL = "ADC_RESSEL"
                case ADCSAMPNUM = "ADC_SAMPNUM"
                case ADCPRESC = "ADC_PRESC"
                case ADCREFSEL = "ADC_REFSEL"
                case ADCASDV = "ADC_ASDV"
                case ADCINITDLY = "ADC_INITDLY"
                case ADCWINCM = "ADC_WINCM"
                case ADCMUXPOS = "ADC_MUXPOS"
                case BODACTIVE = "BOD_ACTIVE"
                case BODSAMPFREQ = "BOD_SAMPFREQ"
                case BODSLEEP = "BOD_SLEEP"
                case BODLVL = "BOD_LVL"
                case BODVLMCFG = "BOD_VLMCFG"
                case BODVLMLVL = "BOD_VLMLVL"
                case CCLINTMODE0 = "CCL_INTMODE0"
                case CCLINTMODE1 = "CCL_INTMODE1"
                case CCLINTMODE2 = "CCL_INTMODE2"
                case CCLINTMODE3 = "CCL_INTMODE3"
                case CCLCLKSRC = "CCL_CLKSRC"
                case CCLEDGEDET = "CCL_EDGEDET"
                case CCLFILTSEL = "CCL_FILTSEL"
                case CCLINSEL0 = "CCL_INSEL0"
                case CCLINSEL1 = "CCL_INSEL1"
                case CCLINSEL2 = "CCL_INSEL2"
                case CCLSEQSEL0 = "CCL_SEQSEL0"
                case CCLSEQSEL1 = "CCL_SEQSEL1"
                case CLKCTRLCLKSEL = "CLKCTRL_CLKSEL"
                case CLKCTRLPDIV = "CLKCTRL_PDIV"
                case CLKCTRLCSUT = "CLKCTRL_CSUT"
                case CPUCCP = "CPU_CCP"
                case CRCSCANMODE = "CRCSCAN_MODE"
                case CRCSCANSRC = "CRCSCAN_SRC"
                case EVSYSGENERATOR = "EVSYS_GENERATOR"
                case EVSYSSTROBE0 = "EVSYS_STROBE0"
                case EVSYSCHANNEL = "EVSYS_CHANNEL"
                case FUSEACTIVE = "FUSE_ACTIVE"
                case FUSELVL = "FUSE_LVL"
                case FUSESAMPFREQ = "FUSE_SAMPFREQ"
                case FUSESLEEP = "FUSE_SLEEP"
                case FUSEFREQSEL = "FUSE_FREQSEL"
                case FUSECRCSRC = "FUSE_CRCSRC"
                case FUSERSTPINCFG = "FUSE_RSTPINCFG"
                case FUSESUT = "FUSE_SUT"
                case FUSEPERIOD = "FUSE_PERIOD"
                case FUSEWINDOW = "FUSE_WINDOW"
                case LOCKBITLB = "LOCKBIT_LB"
                case NVMCTRLCMD = "NVMCTRL_CMD"
                case PORTISC = "PORT_ISC"
                case PORTMUXEVOUTA = "PORTMUX_EVOUTA"
                case PORTMUXEVOUTC = "PORTMUX_EVOUTC"
                case PORTMUXEVOUTD = "PORTMUX_EVOUTD"
                case PORTMUXEVOUTF = "PORTMUX_EVOUTF"
                case PORTMUXTCA0 = "PORTMUX_TCA0"
                case PORTMUXTCB0 = "PORTMUX_TCB0"
                case PORTMUXTCB1 = "PORTMUX_TCB1"
                case PORTMUXTCB2 = "PORTMUX_TCB2"
                case PORTMUXTCB3 = "PORTMUX_TCB3"
                case PORTMUXSPI0 = "PORTMUX_SPI0"
                case PORTMUXTWI0 = "PORTMUX_TWI0"
                case PORTMUXUSART0 = "PORTMUX_USART0"
                case PORTMUXUSART1 = "PORTMUX_USART1"
                case PORTMUXUSART2 = "PORTMUX_USART2"
                case PORTMUXUSART3 = "PORTMUX_USART3"
                case RTCCLKSEL = "RTC_CLKSEL"
                case RTCPRESCALER = "RTC_PRESCALER"
                case RTCPERIOD = "RTC_PERIOD"
                case SLPCTRLSMODE = "SLPCTRL_SMODE"
                case SPIPRESC = "SPI_PRESC"
                case SPIMODE = "SPI_MODE"
                case TCASINGLECLKSEL = "TCA_SINGLE_CLKSEL"
                case TCASINGLEWGMODE = "TCA_SINGLE_WGMODE"
                case TCASINGLECMD = "TCA_SINGLE_CMD"
                case TCASINGLEDIR = "TCA_SINGLE_DIR"
                case TCASINGLEEVACT = "TCA_SINGLE_EVACT"
                case TCASPLITCLKSEL = "TCA_SPLIT_CLKSEL"
                case TCASPLITCMD = "TCA_SPLIT_CMD"
                case TCBCLKSEL = "TCB_CLKSEL"
                case TCBCNTMODE = "TCB_CNTMODE"
                case TWISDAHOLD = "TWI_SDAHOLD"
                case TWISDASETUP = "TWI_SDASETUP"
                case TWITIMEOUT = "TWI_TIMEOUT"
                case TWIACKACT = "TWI_ACKACT"
                case TWIMCMD = "TWI_MCMD"
                case TWIBUSSTATE = "TWI_BUSSTATE"
                case TWISCMD = "TWI_SCMD"
                case TWIAP = "TWI_AP"
                case USARTRS485 = "USART_RS485"
                case USARTRXMODE = "USART_RXMODE"
                case USARTCMODE = "USART_CMODE"
                case USARTNORMALCHSIZE = "USART_NORMAL_CHSIZE"
                case USARTNORMALPMODE = "USART_NORMAL_PMODE"
                case USARTNORMALSBMODE = "USART_NORMAL_SBMODE"
                case USARTABW = "USART_ABW"
                case VREFAC0REFSEL = "VREF_AC0REFSEL"
                case VREFADC0REFSEL = "VREF_ADC0REFSEL"
                case WDTPERIOD = "WDT_PERIOD"
                case WDTWINDOW = "WDT_WINDOW"
                case PORTMUXEVOUTB = "PORTMUX_EVOUTB"
                case PORTMUXEVOUTE = "PORTMUX_EVOUTE"
            }
            
            enum Caption: String, Codable {
                case OscillatorCalibrationValues = "Oscillator Calibration Values"
                case InterruptSenseControl = "Interrupt Sense Control"
                case AnalogChannelSelectionBitsselect = "Analog Channel Selection Bits select"
                case ADCVoltageReferenceSelection = "ADC Voltage Reference Selection"
                case InputChannelSelection = "Input Channel Selection"
                case HysteresisModeselect = "Hysteresis Mode select"
                case InterruptModeselect = "Interrupt Mode select"
                case LowPowerModeselect = "Low Power Mode select"
                case NegativeInputMUXSelection = "Negative Input MUX Selection"
                case PositiveInputMUXSelection = "Positive Input MUX Selection"
                case DutyCycleselect = "Duty Cycle select"
                case ADCResolutionselect = "ADC Resolution select"
                case AccumulationSamplesselect = "Accumulation Samples select"
                case ClockPrescalerselect = "Clock Pre-scaler select"
                case ReferenceSelection = "Reference Selection"
                case AutomaticSamplingDelayVariationselect = "Automatic Sampling Delay Variation select"
                case InitialDelaySelection = "Initial Delay Selection"
                case WindowComparatorModeselect = "Window Comparator Mode select"
                case AnalogChannelSelectionBits = "Analog Channel Selection Bits"
                case Operationinactivemodeselect = "Operation in active mode select"
                case Samplefrequencyselect = "Sample frequency select"
                case Operationinsleepmodeselect = "Operation in sleep mode select"
                case Bodlevelselect = "Bod level select"
                case Configurationselect = "Configuration select"
                case voltagelevelmonitorlevelselect = "voltage level monitor level select"
                case InterruptModeforLUT0select = "Interrupt Mode for LUT0 select"
                case InterruptModeforLUT1select = "Interrupt Mode for LUT1 select"
                case InterruptModeforLUT2select = "Interrupt Mode for LUT2 select"
                case InterruptModeforLUT3select = "Interrupt Mode for LUT3 select"
                case ClockSourceSelection = "Clock Source Selection"
                case EdgeDetectionEnableselect = "Edge Detection Enable select"
                case FilterSelection = "Filter Selection"
                case LUTInput0SourceSelection = "LUT Input 0 Source Selection"
                case LUTInput1SourceSelection = "LUT Input 1 Source Selection"
                case LUTInput2SourceSelection = "LUT Input 2 Source Selection"
                case SequentialSelection = "Sequential Selection"
                case Clockselect = "Clock select"
                case Prescalerdivisionselect = "Prescaler division select"
                case Crystalstartuptimeselect = "Crystal startup time select"
                case CCPsignatureselect = "CCP signature select"
                case CRCFlashAccessModeselect = "CRC Flash Access Mode select"
                case CRCSourceselect = "CRC Source select"
                case Generatorselector = "Generator selector"
                case Softwareeventonchannelsselect = "Software event on channels select"
                case Channelselector = "Channel selector"
                case BODOperationinActiveModeselect = "BOD Operation in Active Mode select"
                case BODLevelselect = "BOD Level select"
                case BODSampleFrequencyselect = "BOD Sample Frequency select"
                case BODOperationinSleepModeselect = "BOD Operation in Sleep Mode select"
                case FrequencySelect = "Frequency Select"
                case ResetPinConfigurationselect = "Reset Pin Configuration select"
                case StartupTimeselect = "Startup Time select"
                case WatchdogTimeoutPeriodselect = "Watchdog Timeout Period select"
                case WatchdogWindowTimeoutPeriodselect = "Watchdog Window Timeout Period select"
                case LockBitsselect = "Lock Bits select"
                case Commandselect = "Command select"
                case InputSenseConfigurationselect = "Input/Sense Configuration select"
                case EventOutputAselect = "Event Output A select"
                case EventOutputCselect = "Event Output C select"
                case EventOutputDselect = "Event Output D select"
                case EventOutputFselect = "Event Output F select"
                case PortMultiplexerTCA0select = "Port Multiplexer TCA0 select"
                case PortMultiplexerTCB0select = "Port Multiplexer TCB0 select"
                case PortMultiplexerTCB1select = "Port Multiplexer TCB1 select"
                case PortMultiplexerTCB2select = "Port Multiplexer TCB2 select"
                case PortMultiplexerTCB3select = "Port Multiplexer TCB3 select"
                case PortMultiplexerSPI0select = "Port Multiplexer SPI0 select"
                case PortMultiplexerTWI0select = "Port Multiplexer TWI0 select"
                case PortMultiplexerUSART0select = "Port Multiplexer USART0 select"
                case PortMultiplexerUSART1select = "Port Multiplexer USART1 select"
                case PortMultiplexerUSART2select = "Port Multiplexer USART2 select"
                case PortMultiplexerUSART3select = "Port Multiplexer USART3 select"
                case ClockSelect = "Clock Select"
                case PrescalingFactorselect = "Prescaling Factor select"
                case Periodselect = "Period select"
                case Sleepmodeselect = "Sleep mode select"
                case Prescalerselect = "Prescaler select"
                case SPIModeselect = "SPI Mode select"
                case ClockSelection = "Clock Selection"
                case Waveformgenerationmodeselect = "Waveform generation mode select"
                case Directionselect = "Direction select"
                case EventActionselect = "Event Action select"
                case TimerModeselect = "Timer Mode select"
                case SDAHoldTimeselect = "SDA Hold Time select"
                case SDASetupTimeselect = "SDA Setup Time select"
                case InactiveBusTimeoutselect = "Inactive Bus Timeout select"
                case AcknowledgeActionselect = "Acknowledge Action select"
                case BusStateselect = "Bus State select"
                case ClientAddressorStopselect = "Client Address or Stop select"
                case RS485Modeinternaltransmitterselect = "RS485 Mode internal transmitter select"
                case ReceiverModeselect = "Receiver Mode select"
                case CommunicationModeselect = "Communication Mode select"
                case CharacterSizeselect = "Character Size select"
                case ParityModeselect = "Parity Mode select"
                case StopBitModeselect = "Stop Bit Mode select"
                case AutoBaudWindowselect = "Auto Baud Window select"
                case AC0referenceselect = "AC0 reference select"
                case ADC0referenceselect = "ADC0 reference select"
                case Windowselect = "Window select"
                case EventOutputBselect = "Event Output B select"
                case EventOutputEselect = "Event Output E select"
            }
            
            struct Value: Codable {
                @Attribute var caption: Caption
                @Attribute var name: Name
                @Attribute var value: Value
                
                enum Caption: String, Codable {
                    case fourPointEightMHz = "4.8 MHz"
                    case ninePointSixMHz = "9.6 MHz"
                    case IntRCOsc128kHzStartUpTime14CK64ms = "Int. RC Osc. 128 kHz; Start-up time: 14 CK + 64 ms"
                    case IntRCOsc128kHzStartUpTime14CK4ms = "Int. RC Osc. 128 kHz; Start-up time: 14 CK + 4 ms"
                    case IntRCOsc128kHzStartUpTime14CK0ms = "Int. RC Osc. 128 kHz; Start-up time: 14 CK + 0 ms"
                    case IntRCOsc96MHzStartUpTime14CK64ms = "Int. RC Osc. 9.6 MHz; Start-up time: 14 CK + 64 ms"
                    case IntRCOsc96MHzStartUpTime14CK4ms = "Int. RC Osc. 9.6 MHz; Start-up time: 14 CK + 4 ms"
                    case IntRCOsc96MHzStartUpTime14CK0ms = "Int. RC Osc. 9.6 MHz; Start-up time: 14 CK + 0 ms"
                    case IntRCOsc48MHzStartUpTime14CK64ms = "Int. RC Osc. 4.8 MHz; Start-up time: 14 CK + 64 ms"
                    case IntRCOsc48MHzStartUpTime14CK4ms = "Int. RC Osc. 4.8 MHz; Start-up time: 14 CK + 4 ms"
                    case IntRCOsc48MHzStartUpTime14CK0ms = "Int. RC Osc. 4.8 MHz; Start-up time: 14 CK + 0 ms"
                    case ExtClockStartUpTime14CK64ms = "Ext. Clock; Start-up time: 14 CK + 64 ms"
                    case ExtClockStartUpTime14CK4ms = "Ext. Clock; Start-up time: 14 CK + 4 ms"
                    case ExtClockStartUpTime14CK0ms = "Ext. Clock; Start-up time: 14 CK + 0 ms"
                    case ExtClockStartuptime6CK0ms = "Ext. Clock; Start-up time: 6 CK + 0 ms"
                    case ExtClockStartuptime6CK41ms = "Ext. Clock; Start-up time: 6 CK + 4.1 ms"
                    case ExtClockStartuptime6CK65ms = "Ext. Clock; Start-up time: 6 CK + 65 ms"
                    case IntRCOscStartuptime6CK0ms = "Int. RC Osc.; Start-up time: 6 CK + 0 ms"
                    case IntRCOscStartuptime6CK41ms = "Int. RC Osc.; Start-up time: 6 CK + 4.1 ms"
                    case IntRCOscStartuptime6CK65ms = "Int. RC Osc.; Start-up time: 6 CK + 65 ms"
                    case ExtLowFreqCrystalStartuptime32KCK0msIntCap = "Ext. Low-Freq. Crystal; Start-up time: 32K CK + 0 ms; Int. Cap."
                    case ExtLowFreqCrystalStartuptime32KCK41msIntCap = "Ext. Low-Freq. Crystal; Start-up time: 32K CK + 4.1 ms; Int. Cap."
                    case ExtLowFreqCrystalStartuptime32KCK65msIntCap = "Ext. Low-Freq. Crystal; Start-up time: 32K CK + 65 ms; Int. Cap."
                    case ExtLowFreqCrystalStartuptime1KCK0msIntCap = "Ext. Low-Freq. Crystal; Start-up time: 1K CK + 0 ms; Int. Cap."
                    case ExtLowFreqCrystalStartuptime1KCK41msIntCap = "Ext. Low-Freq. Crystal; Start-up time: 1K CK + 4.1 ms; Int. Cap."
                    case ExtLowFreqCrystalStartuptime1KCK65msIntCap = "Ext. Low-Freq. Crystal; Start-up time: 1K CK + 65 ms; Int. Cap."
                    case ExtLowFreqCrystalStartuptime32KCK0ms = "Ext. Low-Freq. Crystal; Start-up time: 32K CK + 0 ms"
                    case ExtLowFreqCrystalStartuptime32KCK41ms = "Ext. Low-Freq. Crystal; Start-up time: 32K CK + 4.1 ms"
                    case ExtLowFreqCrystalStartuptime32KCK65ms = "Ext. Low-Freq. Crystal; Start-up time: 32K CK + 65 ms"
                    case ExtLowFreqCrystalStartuptime1KCK0ms = "Ext. Low-Freq. Crystal; Start-up time: 1K CK + 0 ms"
                    case ExtLowFreqCrystalStartuptime1KCK41ms = "Ext. Low-Freq. Crystal; Start-up time: 1K CK + 4.1 ms"
                    case ExtLowFreqCrystalStartuptime1KCK65ms = "Ext. Low-Freq. Crystal; Start-up time: 1K CK + 65 ms"
                    case ExtCrystalOsc0409MHzStartuptime258CK41ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time: 258 CK + 4.1 ms"
                    case ExtCrystalOsc0409MHzStartuptime258CK65ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time: 258 CK + 65 ms"
                    case ExtCrystalOsc0409MHzStartuptime1KCK0ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time: 1K CK + 0 ms"
                    case ExtCrystalOsc0409MHzStartuptime1KCK41ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time: 1K CK + 4.1 ms"
                    case ExtCrystalOsc0409MHzStartuptime1KCK65ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time: 1K CK + 65 ms"
                    case ExtCrystalOsc0930MHzStartuptime258CK41ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time: 258 CK + 4.1 ms"
                    case ExtCrystalOsc0930MHzStartuptime258CK65ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time: 258 CK + 65 ms"
                    case ExtCrystalOsc0930MHzStartuptime1KCK0ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time: 1K CK + 0 ms"
                    case ExtCrystalOsc0930MHzStartuptime1KCK41ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time: 1K CK + 4.1 ms"
                    case ExtCrystalOsc0930MHzStartuptime1KCK65ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time: 1K CK + 65 ms"
                    case ExtCrystalOsc3080MHzStartuptime258CK41ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time: 258 CK + 4.1 ms"
                    case ExtCrystalOsc3080MHzStartuptime258CK65ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time: 258 CK + 65 ms"
                    case ExtCrystalOsc3080MHzStartuptime1KCK0ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time: 1K CK + 0 ms"
                    case ExtCrystalOsc3080MHzStartuptime1KCK41ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time: 1K CK + 4.1 ms"
                    case ExtCrystalOsc3080MHzStartuptime1KCK65ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time: 1K CK + 65 ms"
                    case ExtCrystalOsc80160MHzStartuptime258CK41ms = "Ext. Crystal Osc. 8.0-16.0 MHz; Start-up time: 258 CK + 4.1 ms"
                    case ExtCrystalOsc80160MHzStartuptime258CK65ms = "Ext. Crystal Osc. 8.0-16.0 MHz; Start-up time: 258 CK + 65 ms"
                    case ExtCrystalOsc80160MHzStartuptime1KCK0ms = "Ext. Crystal Osc. 8.0-16.0 MHz; Start-up time: 1K CK + 0 ms"
                    case ExtCrystalOsc80160MHzStartuptime1KCK41ms = "Ext. Crystal Osc. 8.0-16.0 MHz; Start-up time: 1K CK + 4.1 ms"
                    case ExtCrystalOsc80160MHzStartuptime1KCK65ms = "Ext. Crystal Osc. 8.0-16.0 MHz; Start-up time: 1K CK + 65 ms"
                    case BootFlashsize512wordsstartaddress3E00 = "Boot Flash size=512 words start address=$3E00"
                    case BootFlashsize1024wordsstartaddress3C00 = "Boot Flash size=1024 words start address=$3C00"
                    case BootFlashsize2048wordsstartaddress3800 = "Boot Flash size=2048 words start address=$3800"
                    case BootFlashsize4096wordsstartaddress3000 = "Boot Flash size=4096 words start address=$3000"
                    case Brownoutdetectiondisabled = "Brown-out detection disabled"
                    case BrownoutdetectionatVCC41V = "Brown-out detection at VCC=4.1 V"
                    case BrownoutdetectionatVCC40V = "Brown-out detection at VCC=4.0 V"
                    case BrownoutdetectionatVCC39V = "Brown-out detection at VCC=3.9 V"
                    case BrownoutdetectionatVCC38V = "Brown-out detection at VCC=3.8 V"
                    case BrownoutdetectionatVCC27V = "Brown-out detection at VCC=2.7 V"
                    case BrownoutdetectionatVCC26V = "Brown-out detection at VCC=2.6 V"
                    case BrownoutdetectionatVCC25V = "Brown-out detection at VCC=2.5 V"
                    case Furtherprogrammingandverificationdisabled = "Further programming and verification disabled"
                    case Furtherprogrammingdisabled = "Further programming disabled"
                    case Nomemorylockfeaturesenabled = "No memory lock features enabled"
                    case LPMandSPMprohibitedinApplicationSection = "LPM and SPM prohibited in Application Section"
                    case LPMprohibitedinApplicationSection = "LPM prohibited in Application Section"
                    case SPMprohibitedinApplicationSection = "SPM prohibited in Application Section"
                    case NolockonSPMandLPMinApplicationSection = "No lock on SPM and LPM in Application Section"
                    case LPMandSPMprohibitedinBootSection = "LPM and SPM prohibited in Boot Section"
                    case LPMprohibitedinBootSection = "LPM prohibited in Boot Section"
                    case SPMprohibitedinBootSection = "SPM prohibited in Boot Section"
                    case NolockonSPMandLPMinBootSection = "No lock on SPM and LPM in Boot Section"
                    case fosc4 = "fosc/4"
                    case fosc16 = "fosc/16"
                    case fosc64 = "fosc/64"
                    case fosc128 = "fosc/128"
                    case fosc2 = "fosc/2"
                    case fosc8 = "fosc/8"
                    case fosc32 = "fosc/32"
                    case one = "1"
                    case four = "4"
                    case sixteen = "16"
                    case sixtyFour = "64"
                    case AsynchronousOperation = "Asynchronous Operation"
                    case SynchronousOperation = "Synchronous Operation"
                    case Disabled = "Disabled"
                    case Reserved = "Reserved"
                    case EnabledEvenParity = "Enabled, Even Parity"
                    case EnabledOddParity = "Enabled, Odd Parity"
                    case oneBit = "1-bit"
                    case twoBit = "2-bit"
                    case LSNAUS0x11000xFFFF = "LS = N/A, US = 0x1100 - 0xFFFF"
                    case LSXMEMSTART0x1FFFUS0x20000xFFFF = "LS = XMEMSTART - 0x1FFF, US = 0x2000 - 0xFFFF"
                    case LSXMEMSTART0x3FFFUS0x40000xFFFF = "LS = XMEMSTART - 0x3FFF, US = 0x4000 - 0xFFFF"
                    case LSXMEMSTART0x5FFFUS0x60000xFFFF = "LS = XMEMSTART - 0x5FFF, US = 0x6000 - 0xFFFF"
                    case LSXMEMSTART0x7FFFUS0x80000xFFFF = "LS = XMEMSTART - 0x7FFF, US = 0x8000 - 0xFFFF"
                    case LSXMEMSTART0x9FFFUS0xA0000xFFFF = "LS = XMEMSTART - 0x9FFF, US = 0xA000 - 0xFFFF"
                    case LSXMEMSTART0xBFFFUS0xC0000xFFFF = "LS = XMEMSTART - 0xBFFF, US = 0xC000 - 0xFFFF"
                    case LSXMEMSTART0xDFFFUS0xE0000xFFFF = "LS = XMEMSTART - 0xDFFF, US = 0xE000 - 0xFFFF"
                    case Nowaitstates = "No wait-states"
                    case Waitonecycleduringreadwritestrobe = "Wait one cycle during read/write strobe"
                    case Waittwocyclesduringreadwritestrobe = "Wait two cycles during read/write strobe"
                    case Waittwocyclesduringreadwriteandwaitonecyclebeforedrivingoutnewaddress = "Wait two cycles during read/write and wait one cycle before driving out new address"
                    case two = "2"
                    case eight = "8"
                    case thirtyTwo = "32"
                    case oneTwentyEight = "128"
                    case twoFiftySix = "256"
                    case Idle = "Idle"
                    case ADCNoiseReductionIfAvailable = "ADC Noise Reduction (If Available)"
                    case PowerDown = "Power Down"
                    case PowerSave = "Power Save"
                    case Standby = "Standby"
                    case OscillatorCalibrationValues = "Oscillator Calibration Values"
                    case eightyMHz = "8.0 MHz"
                    case InterruptSenseControl = "Interrupt Sense Control"
                    case LowLevelofINTX = "Low Level of INTX"
                    case AnyLogicalChangeofINTX = "Any Logical Change of INTX"
                    case FallingEdgeofINTX = "Falling Edge of INTX"
                    case RisingEdgeofINTX = "Rising Edge of INTX"
                    case Normal = "Normal"
                    case PWMPhaseCorrect = "PWM, Phase Correct"
                    case CTC = "CTC"
                    case FastPWM = "Fast PWM"
                    case NoClockSourceStopped = "No Clock Source (Stopped)"
                    case RunningNoPrescaling = "Running, No Prescaling"
                    case RunningCLK8 = "Running, CLK/8"
                    case RunningCLK64 = "Running, CLK/64"
                    case RunningCLK256 = "Running, CLK/256"
                    case RunningCLK1024 = "Running, CLK/1024"
                    case RunningExtClkTnFallingEdge = "Running, ExtClk Tn Falling Edge"
                    case RunningExtClkTnRisingEdge = "Running, ExtClk Tn Rising Edge"
                    case RunningCLK32 = "Running, CLK/32"
                    case RunningCLK128 = "Running, CLK/128"
                    case OscillatorCycles16K = "Oscillator Cycles 16K"
                    case OscillatorCycles32K = "Oscillator Cycles 32K"
                    case OscillatorCycles64K = "Oscillator Cycles 64K"
                    case OscillatorCycles128K = "Oscillator Cycles 128K"
                    case OscillatorCycles256K = "Oscillator Cycles 256K"
                    case OscillatorCycles512K = "Oscillator Cycles 512K"
                    case OscillatorCycles1024K = "Oscillator Cycles 1024K"
                    case OscillatorCycles2048K = "Oscillator Cycles 2048K"
                    case AREFInternalVrefturnedoff = "AREF, Internal Vref turned off"
                    case AVCCwithexternalcapacitoratAREFpin = "AVCC with external capacitor at AREF pin"
                    case Internal256VVoltageReferencewithexternalcapacitoratAREFpin = "Internal 2.56V Voltage Reference with external capacitor at AREF pin"
                    case FreeRunningmode = "Free Running mode"
                    case AnalogComparator = "Analog Comparator"
                    case ExternalInterruptRequest0 = "External Interrupt Request 0"
                    case TimerCounter0CompareMatchA = "Timer/Counter0 Compare Match A"
                    case TimerCounter0Overflow = "Timer/Counter0 Overflow"
                    case TimerCounter1CompareMatchB = "Timer/Counter1 Compare Match B"
                    case TimerCounter1Overflow = "Timer/Counter1 Overflow"
                    case TimerCounter1CaptureEvent = "Timer/Counter1 Capture Event"
                    case InterruptonToggle = "Interrupt on Toggle"
                    case InterruptonFallingEdge = "Interrupt on Falling Edge"
                    case InterruptonRisingEdge = "Interrupt on Rising Edge"
                    case BootFlashsize512wordsstartaddress7E00 = "Boot Flash size=512 words start address=$7E00"
                    case BootFlashsize1024wordsstartaddress7C00 = "Boot Flash size=1024 words start address=$7C00"
                    case BootFlashsize2048wordsstartaddress7800 = "Boot Flash size=2048 words start address=$7800"
                    case BootFlashsize4096wordsstartaddress7000 = "Boot Flash size=4096 words start address=$7000"
                    case BrownoutdetectionlevelatVCC41V = "Brown-out detection level at VCC=4.1 V"
                    case BrownoutdetectionlevelatVCC40V = "Brown-out detection level at VCC=4.0 V"
                    case BrownoutdetectionlevelatVCC39V = "Brown-out detection level at VCC=3.9 V"
                    case BrownoutdetectionlevelatVCC38V = "Brown-out detection level at VCC=3.8 V"
                    case BrownoutdetectionlevelatVCC27V = "Brown-out detection level at VCC=2.7 V"
                    case BrownoutdetectionlevelatVCC26V = "Brown-out detection level at VCC=2.6 V"
                    case BrownoutdetectionlevelatVCC25V = "Brown-out detection level at VCC=2.5 V"
                    case ExtCrystalOsc0409MHzStartuptime16KCK0ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time: 16K CK + 0 ms"
                    case ExtCrystalOsc0409MHzStartuptime16KCK41ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time: 16K CK + 4.1 ms"
                    case ExtCrystalOsc0409MHzStartuptime16KCK65ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time: 16K CK + 65 ms"
                    case ExtCrystalOsc0930MHzStartuptime16KCK0ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time: 16K CK + 0 ms"
                    case ExtCrystalOsc0930MHzStartuptime16KCK41ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time: 16K CK + 4.1 ms"
                    case ExtCrystalOsc0930MHzStartuptime16KCK65ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time: 16K CK + 65 ms"
                    case ExtCrystalOsc3080MHzStartuptime16KCK0ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time: 16K CK + 0 ms"
                    case ExtCrystalOsc3080MHzStartuptime16KCK41ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time: 16K CK + 4.1 ms"
                    case ExtCrystalOsc3080MHzStartuptime16KCK65ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time: 16K CK + 65 ms"
                    case ExtCrystalOsc80MHzStartuptime258CK41ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time: 258 CK + 4.1 ms"
                    case ExtCrystalOsc80MHzStartuptime258CK65ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time: 258 CK + 65 ms"
                    case ExtCrystalOsc80MHzStartuptime1KCK0ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time: 1K CK + 0 ms"
                    case ExtCrystalOsc80MHzStartuptime1KCK41ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time: 1K CK + 4.1 ms"
                    case ExtCrystalOsc80MHzStartuptime1KCK65ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time: 1K CK + 65 ms"
                    case ExtCrystalOsc80MHzStartuptime16KCK0ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time: 16K CK + 0 ms"
                    case ExtCrystalOsc80MHzStartuptime16KCK41ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time: 16K CK + 4.1 ms"
                    case ExtCrystalOsc80MHzStartuptime16KCK65ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time: 16K CK + 65 ms"
                    case BootFlashsize512wordsstartaddressFE00 = "Boot Flash size=512 words start address=$FE00"
                    case BootFlashsize1024wordsstartaddressFC00 = "Boot Flash size=1024 words start address=$FC00"
                    case BootFlashsize2048wordsstartaddressF800 = "Boot Flash size=2048 words start address=$F800"
                    case BootFlashsize2048wordsstartaddressF8002 = "Boot Flashsize=2048 words start address=$F800" // Duplicate
                    case BootFlashsize4096wordsstartaddressF000 = "Boot Flash size=4096 words start address=$F000"
                    case ExtClockStartuptimePWRDWNRESET6CK14CK0ms = "Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 0 ms"
                    case ExtClockStartuptimePWRDWNRESET6CK14CK41ms = "Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 4.1 ms"
                    case ExtClockStartuptimePWRDWNRESET6CK14CK65ms = "Ext. Clock; Start-up time PWRDWN/RESET: 6 CK/14 CK + 65 ms"
                    case IntRCOsc8MHzStartuptimePWRDWNRESET6CK14CK0ms = "Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 0 ms"
                    case IntRCOsc8MHzStartuptimePWRDWNRESET6CK14CK41ms = "Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 4.1 ms"
                    case IntRCOsc8MHzStartuptimePWRDWNRESET6CK14CK65ms = "Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 65 ms"
                    case ExtCrystalOsc0409MHzStartuptimePWRDWNRESET258CK14CK41ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms"
                    case ExtCrystalOsc0409MHzStartuptimePWRDWNRESET258CK14CK65ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms"
                    case ExtCrystalOsc0409MHzStartuptimePWRDWNRESET1KCK14CK0ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 0 ms"
                    case ExtCrystalOsc0409MHzStartuptimePWRDWNRESET1KCK14CK41ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 4.1 ms"
                    case ExtCrystalOsc0409MHzStartuptimePWRDWNRESET1KCK14CK65ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 65 ms"
                    case ExtCrystalOsc0409MHzStartuptimePWRDWNRESET16KCK14CK0ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 0 ms"
                    case ExtCrystalOsc0409MHzStartuptimePWRDWNRESET16KCK14CK41ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4.1 ms"
                    case ExtCrystalOsc0409MHzStartuptimePWRDWNRESET16KCK14CK65ms = "Ext. Crystal Osc. 0.4-0.9 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms"
                    case ExtCrystalOsc0930MHzStartuptimePWRDWNRESET258CK14CK41ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms"
                    case ExtCrystalOsc0930MHzStartuptimePWRDWNRESET258CK14CK65ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms"
                    case ExtCrystalOsc0930MHzStartuptimePWRDWNRESET1KCK14CK0ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 0 ms"
                    case ExtCrystalOsc0930MHzStartuptimePWRDWNRESET1KCK14CK41ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 4.1 ms"
                    case ExtCrystalOsc0930MHzStartuptimePWRDWNRESET1KCK14CK65ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 65 ms"
                    case ExtCrystalOsc0930MHzStartuptimePWRDWNRESET16KCK14CK0ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 0 ms"
                    case ExtCrystalOsc0930MHzStartuptimePWRDWNRESET16KCK14CK41ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4.1 ms"
                    case ExtCrystalOsc0930MHzStartuptimePWRDWNRESET16KCK14CK65ms = "Ext. Crystal Osc. 0.9-3.0 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms"
                    case ExtCrystalOsc3080MHzStartuptimePWRDWNRESET258CK14CK41ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms"
                    case ExtCrystalOsc3080MHzStartuptimePWRDWNRESET258CK14CK65ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms"
                    case ExtCrystalOsc3080MHzStartuptimePWRDWNRESET1KCK14CK0ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 0 ms"
                    case ExtCrystalOsc3080MHzStartuptimePWRDWNRESET1KCK14CK41ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 4.1 ms"
                    case ExtCrystalOsc3080MHzStartuptimePWRDWNRESET1KCK14CK65ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 65 ms"
                    case ExtCrystalOsc3080MHzStartuptimePWRDWNRESET16KCK14CK0ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 0 ms"
                    case ExtCrystalOsc3080MHzStartuptimePWRDWNRESET16KCK14CK41ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4.1 ms"
                    case ExtCrystalOsc3080MHzStartuptimePWRDWNRESET16KCK14CK65ms = "Ext. Crystal Osc. 3.0-8.0 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms"
                    case ExtCrystalOsc80MHzStartuptimePWRDWNRESET258CK14CK41ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms"
                    case ExtCrystalOsc80MHzStartuptimePWRDWNRESET258CK14CK65ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms"
                    case ExtCrystalOsc80MHzStartuptimePWRDWNRESET1KCK14CK0ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 0 ms"
                    case ExtCrystalOsc80MHzStartuptimePWRDWNRESET1KCK14CK41ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 4.1 ms"
                    case ExtCrystalOsc80MHzStartuptimePWRDWNRESET1KCK14CK65ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 1K CK /14 CK + 65 ms"
                    case ExtCrystalOsc80MHzStartuptimePWRDWNRESET16KCK14CK0ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 0 ms"
                    case ExtCrystalOsc80MHzStartuptimePWRDWNRESET16KCK14CK41ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4.1 ms"
                    case ExtCrystalOsc80MHzStartuptimePWRDWNRESET16KCK14CK65ms = "Ext. Crystal Osc. 8.0-    MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms"
                    case PLLclock16MHzStartuptimePWRDWNRESET1KCK14CK0ms = "PLL clock 16 MHz; Start-up time PWRDWN/RESET: 1K CK/14 CK + 0 ms"
                    case PLLclock16MHzStartuptimePWRDWNRESET1KCK14CK41ms = "PLL clock 16 MHz; Start-up time PWRDWN/RESET: 1K CK/14 CK + 4.1 ms"
                    case PLLclock16MHzStartuptimePWRDWNRESET1KCK14CK65ms = "PLL clock 16 MHz; Start-up time PWRDWN/RESET: 1K CK/14 CK + 65 ms"
                    case PLLclock16MHzStartuptimePWRDWNRESET16KCK14CK0ms = "PLL clock 16 MHz; Start-up time PWRDWN/RESET: 16K CK/14 CK + 0 ms"
                    case BrownoutdetectionatVCC45V = "Brown-out detection at VCC=4.5 V"
                    case BrownoutdetectionatVCC43V = "Brown-out detection at VCC=4.3 V"
                    case BrownoutdetectionatVCC44V = "Brown-out detection at VCC=4.4 V"
                    case BrownoutdetectionatVCC42V = "Brown-out detection at VCC=4.2 V"
                    case BrownoutdetectionatVCC28V = "Brown-out detection at VCC=2.8 V"
                    case BootFlashsize128wordsBootaddress0F80 = "Boot Flash size=128 words Boot address=$0F80"
                    case BootFlashsize128wordsBootaddress0F802 = "Boot Flashsize=128 words Boot address=$0F80" // Duplicate
                    case BootFlashsize256wordsBootaddress0F00 = "Boot Flash size=256 words Boot address=$0F00"
                    case BootFlashsize512wordsBootaddress0E00 = "Boot Flash size=512 words Boot address=$0E00"
                    case BootFlashsize1024wordsBootaddress0C00 = "Boot Flash size=1024 words Boot address=$0C00"
                    case NoactionPSCInputisignored = "No action, PSC Input is ignored"
                    case StopsignalJumptoOppositeDeadTimeandWait = "Stop signal, Jump to Opposite Dead-Time and Wait"
                    case StopsignalJumptoOppositeDeadTimeandWait2 = "Stop signal, Jump to Opposite Dead-Time and Wait." // Duplicate
                    case StopsignalExecuteOppositeDeadTimeandWait = "Stop signal, Execute Opposite Dead-Time and Wait"
                    case StopsignalExecuteOppositewhileFaultactive = "Stop signal, Execute Opposite while Fault active"
                    case Deactivateoutputswithoutchangingtiming = "Deactivate outputs without changing timing."
                    case StopsignalandInsertDeadTime = "Stop signal and Insert Dead-Time"
                    case HaltPSCandWaitforSoftwareAction = "Halt PSC and Wait for Software Action"
                    case EdgeRetriggerPSC = "Edge Retrigger PSC"
                    case FixedFrequencyEdgeRetriggerPSC = "Fixed Frequency Edge Retrigger PSC"
                    case Reserveddonotuse = "Reserved (do not use)"
                    case FixedFrequencyEdgeRetriggerPSCandDisactivateOutput = "Fixed Frequency Edge Retrigger PSC and Disactivate Output"
                    case NodivideronPSCinputclock = "No divider on PSC input clock"
                    case DividethePSCinputclockby4 = "Divide the PSC input clock by 4"
                    case DividethePSCinputclockby16 = "Divide the PSC input clock by 16"
                    case DividethePSCinputclockby64 = "Divide the PSC input clock by 64"
                    case OneRampMode = "One Ramp Mode"
                    case TwoRampMode = "Two Ramp Mode"
                    case FourRampMode = "Four Ramp Mode"
                    case CenterAlignedMode = "Center Aligned Mode"
                    case SendsignalonleadingedgeofPSCOUTn0 = "Send signal on leading edge of PSCOUTn0"
                    case SendsignalontrailingedgeofPSCOUTn0 = "Send signal on trailing edge of PSCOUTn0"
                    case SendsignalonleadingedgeofPSCOUTn1 = "Send signal on leading edge of PSCOUTn1"
                    case SendsignalontrailingedgeofPSCOUTn1 = "Send signal on trailing edge of PSCOUTn1"
                    case three = "3"
                    case OscillatorCycles2K = "Oscillator Cycles 2K"
                    case OscillatorCycles4K = "Oscillator Cycles 4K"
                    case OscillatorCycles8K = "Oscillator Cycles 8K"
                    case PLLclock16MHzRcStartuptimePWRDWNRESET1KCK14CK0ms = "PLL clock 16 MHz; Rc. Start-up time PWRDWN/RESET: 1K CK/14 CK + 0 ms"
                    case PLLclock4PLLinputExtClockStartuptimePWRDWNRESET6KCK14CK0ms = "PLL clock /4; PLL input: Ext. Clock; Start-up time PWRDWN/RESET: 6K CK/14 CK + 0 ms"
                    case PLLclock4PLLinputExtClockStartuptimePWRDWNRESET6KCK14CK4ms = "PLL clock /4; PLL input: Ext. Clock; Start-up time PWRDWN/RESET: 6K CK/14 CK + 4 ms"
                    case PLLclock4PLLinputExtClockStartuptimePWRDWNRESET6KCK14CK64ms = "PLL clock /4; PLL input: Ext. Clock; Start-up time PWRDWN/RESET: 6K CK/14 CK + 64 ms"
                    case PLLclock4PLLinputExtCrystalOscStartuptimePWRDWNRESET1KCK14CK0ms = "PLL clock /4; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 1K CK/14 CK + 0 ms"
                    case PLLclock4PLLinputExtCrystalOscStartuptimePWRDWNRESET1KCK14CK4ms = "PLL clock /4; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 1K CK/14 CK + 4 ms"
                    case PLLclock4PLLinputExtCrystalOscStartuptimePWRDWNRESET16KCK14CK4ms = "PLL clock /4; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4 ms"
                    case PLLclock4PLLinputExtCrystalOscStartuptimePWRDWNRESET16KCK14CK64ms = "PLL clock /4; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 16K CK/14 CK + 64 ms"
                    case ExtCrystalOscPLLinputExtCrystalOscStartuptimePWRDWNRESET1KCK14CK0ms = "Ext. Crystal Osc.; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 1K CK/14 CK + 0 ms"
                    case ExtCrystalOscPLLinputExtCrystalOscStartuptimePWRDWNRESET1KCK14CK4ms = "Ext. Crystal Osc.; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 1K CK/14 CK + 4 ms"
                    case ExtCrystalOscPLLinputExtCrystalOscStartuptimePWRDWNRESET16KCK14CK4ms = "Ext. Crystal Osc.; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4 ms"
                    case ExtCrystalOscPLLinputExtCrystalOscStartuptimePWRDWNRESET16KCK14CK64ms = "Ext. Crystal Osc.; PLL input: Ext. Crystal Osc.; Start-up time PWRDWN/RESET: 16K CK/14 CK + 64 ms"
                    case fiveBit = "5-bit"
                    case sixBit = "6-bit"
                    case sevenBit = "7-bit"
                    case eightBit = "8-bit"
                    case nineBit = "9-bit"
                    case thirteenBit = "13-bit"
                    case fourteenBit = "14-bit"
                    case fifteenBit = "15-bit"
                    case sixteenBit = "16-bit"
                    case seventeenBit = "17-bit"
                    case sixteenOr17 = "16 or 17"
                    case AnalogComparator0 = "Analog Comparator 0"
                    case AnalogComparator1 = "Analog Comparator 1"
                    case ExtCKPLLinRC8SUT6CK14CK0msCKSEL0000SUT00 = "Ext. CK; PLLin: RC8; SUT: 6CK/14CK+0ms; [CKSEL=0000 SUT=00]"
                    case ExtCKPLLinRC8MHzSUT6CK14CK41msCKSEL0000SUT01 = "Ext. CK; PLLin: RC8 MHz; SUT:6 CK/14CK+4.1 ms; [CKSEL=0000 SUT=01]"
                    case ExtCKPLLinRC8MHzSUT6CK14CK65msCKSEL0000SUT10 = "Ext. CK; PLLin: RC8 MHz; SUT:6 CK/14CK+65 ms; [CKSEL=0000 SUT=10]"
                    case RC8MHzPLLinRC8SUT6CK14CK0msCKSEL0010SUT00 = "RC8 MHz; PLLin: RC8; SUT: 6CK/14CK+0ms; [CKSEL=0010 SUT=00]"
                    case RC8MHzPLLinRC8SUT6CK14CK41msCKSEL0010SUT01 = "RC8 MHz; PLLin: RC8; SUT: 6CK/14CK+4.1 ms; [CKSEL=0010 SUT=01]"
                    case RC8MHzPLLinRC8SUT6CK14CK65msCKSEL0010SUT10 = "RC8 MHz; PLLin: RC8; SUT: 6CK/14CK+65 ms;  [CKSEL=0010 SUT=10]"
                    case XOSC93MHzPLLinRC8SUT258CK14CK41msCKSEL1000SUT00 = "XOSC.9-3MHz; PLLin: RC8; SUT: 258CK/14CK+4.1 ms; [CKSEL=1000 SUT=00]"
                    case XOSC93MHzPLLinRC8SUT258CK14CK65msCKSEL1000SUT01 = "XOSC.9-3MHz; PLLin: RC8; SUT: 258CK/14CK+65 ms; [CKSEL=1000 SUT=01]"
                    case XOSC93MHzPLLinRC8SUT1KCK14CK0msCKSEL1000SUT10 = "XOSC.9-3MHz; PLLin: RC8; SUT: 1KCK/14CK+0 ms; [CKSEL=1000 SUT=10]"
                    case XOSC93MHzPLLinRC8SUT1KCK14CK41msCKSEL1000SUT11 = "XOSC.9-3MHz; PLLin: RC8; SUT: 1KCK/14CK+4.1 ms; [CKSEL=1000 SUT=11]"
                    case XOSC93MHzPLLinRC8SUT1KCK14CK65msCKSEL1001SUT00 = "XOSC.9-3MHz; PLLin: RC8; SUT: 1KCK/14CK+65 ms; [CKSEL=1001 SUT=00]"
                    case XOSC93MHzPLLinRC8SUT16KCK14CK0msCKSEL1001SUT01 = "XOSC.9-3MHz; PLLin: RC8; SUT: 16KCK/14CK+0 ms; [CKSEL=1001 SUT=01]"
                    case XOSC93MHzPLLinRC8SUT16KCK14CK41msCKSEL1001SUT10 = "XOSC.9-3MHz; PLLin: RC8; SUT: 16KCK/14CK+4.1 ms; [CKSEL=1001 SUT=10]"
                    case XOSC93MHzPLLinRC8SUT16KCK14CK65msCKSEL1001SUT11 = "XOSC.9-3MHz; PLLin: RC8; SUT: 16KCK/14CK+65 ms;  [CKSEL=1001 SUT=11]"
                    case XOSC38MHzPLLinRC8SUT258CK14CK41msCKSEL1010SUT00 = "XOSC3-8MHz; PLLin: RC8; SUT: 258CK/14CK+4.1 ms; [CKSEL=1010 SUT=00]"
                    case XOSC38MHzPLLinRC8SUT258CK14CK65msCKSEL1010SUT01 = "XOSC3-8MHz; PLLin: RC8; SUT: 258CK/14CK+65 ms; [CKSEL=1010 SUT=01]"
                    case XOSC38MHzPLLinRC8SUT1KCK14CK0msCKSEL1010SUT10 = "XOSC3-8MHz; PLLin: RC8; SUT: 1KCK/14CK+0 ms; [CKSEL=1010 SUT=10]"
                    case XOSC38MHzPLLinRC8SUT1KCK14CK41msCKSEL1010SUT11 = "XOSC3-8MHz; PLLin: RC8; SUT: 1KCK/14CK+4.1 ms; [CKSEL=1010 SUT=11]"
                    case XOSC38MHzPLLinRC8SUT1KCK14CK65msCKSEL1011SUT00 = "XOSC3-8MHz; PLLin: RC8; SUT: 1KCK/14CK+65 ms;  [CKSEL=1011 SUT=00]"
                    case XOSC38MHzPLLinRC8SUT16KCK14CK0msCKSEL1011SUT01 = "XOSC3-8MHz; PLLin: RC8; SUT: 16KCK/14CK+0 ms; [CKSEL=1011 SUT=01]"
                    case XOSC38MHzPLLinRC8SUT16KCK14CK41msCKSEL1011SUT10 = "XOSC3-8MHz; PLLin: RC8; SUT: 16KCK/14CK+4.1 ms; [CKSEL=1011 SUT=10]"
                    case XOSC38MHzPLLinRC8SUT16KCK14CK65msCKSEL1011SUT11 = "XOSC3-8MHz; PLLin: RC8; SUT: 16KCK/14CK+65 ms;  [CKSEL=1011 SUT=11]"
                    case XOSC38MHzPLLinXOSCSUT258CK14CK41msCKSEL1100SUT00 = "XOSC3-8MHz; PLLin: XOSC; SUT: 258CK/14CK+4.1 ms; [CKSEL=1100 SUT=00]"
                    case XOSC38MHzPLLinXOSCSUT258CK14CK65msCKSEL1100SUT01 = "XOSC3-8MHz; PLLin: XOSC; SUT: 258CK/14CK+65 ms;  [CKSEL=1100 SUT=01]"
                    case XOSC38MHzPLLinXOSCSUT1KCK14CK0msCKSEL1100SUT10 = "XOSC3-8MHz; PLLin: XOSC; SUT: 1KCK/14CK+0 ms; [CKSEL=1100 SUT=10]"
                    case XOSC38MHzPLLinXOSCSUT1KCK14CK41msCKSEL1100SUT11 = "XOSC3-8MHz; PLLin: XOSC; SUT: 1KCK/14CK+4.1 ms; [CKSEL=1100 SUT=11]"
                    case XOSC38MHzPLLinXOSCSUT1KCK14CK65msCKSEL1101SUT00 = "XOSC3-8MHz; PLLin: XOSC; SUT: 1KCK/14CK+65 ms;  [CKSEL=1101 SUT=00"
                    case XOSC38MHzPLLinXOSCSUT16KCK14CK0msCKSEL1101SUT01 = "XOSC3-8MHz; PLLin: XOSC; SUT: 16KCK/14CK+0 ms; [CKSEL=1101 SUT=01]"
                    case XOSC38MHzPLLinXOSCSUT16KCK14CK41msCKSEL1101SUT10 = "XOSC3-8MHz; PLLin: XOSC; SUT: 16KCK/14CK+4.1 ms; [CKSEL=1101 SUT=10]"
                    case XOSC38MHzPLLinXOSCSUT16KCK14CK65msCKSEL1101SUT11 = "XOSC3-8MHz; PLLin: XOSC; SUT: 16KCK/14CK+65 ms;  [CKSEL=1101 SUT=11]"
                    case XOSC816MHzPLLinRC8SUT258CK14CK41msCKSEL1110SUT00 = "XOSC8-16MHz; PLLin: RC8; SUT: 258CK/14CK+4.1 ms; [CKSEL=1110 SUT=00]"
                    case XOSC816MHzPLLinRC8SUT258CK14CK65msCKSEL1110SUT01 = "XOSC8-16MHz; PLLin: RC8; SUT: 258CK/14CK+65 ms;  [CKSEL=1110 SUT=01]"
                    case XOSC816MHzPLLinRC8SUT1KCK14CK0msCKSEL1110SUT10 = "XOSC8-16MHz; PLLin: RC8; SUT: 1KCK/14CK+0 ms; [CKSEL=1110 SUT=10]"
                    case XOSC816MHzPLLinRC8SUT1KCK14CK41msCKSEL1110SUT11 = "XOSC8-16MHz; PLLin: RC8; SUT: 1KCK/14CK+4.1 ms; [CKSEL=1110 SUT=11]"
                    case XOSC816MHzPLLinRC8SUT1KCK14CK65msCKSEL1111SUT00 = "XOSC8-16MHz; PLLin: RC8; SUT: 1KCK/14CK+65 ms; [CKSEL=1111 SUT=00]"
                    case XOSC816MHzPLLinRC8SUT16KCK14CK0msCKSEL1111SUT01 = "XOSC8-16MHz; PLLin: RC8; SUT: 16KCK/14CK+0 ms; [CKSEL=1111 SUT=01]"
                    case XOSC816MHzPLLinRC8SUT16KCK14CK41msCKSEL1111SUT10 = "XOSC8-16MHz; PLLin: RC8; SUT: 16KCK/14CK+4.1 ms; [CKSEL=1111 SUT=10]"
                    case XOSC816MHzPLLinRC8SUT16KCK14CK65msCKSEL1111SUT11 = "XOSC8-16MHz; PLLin: RC8; SUT: 16KCK/14CK+65 ms;  [CKSEL=1111 SUT=11]"
                    case WD128KHzSUT1KCK14CK0msCKSEL0011SUT00 = "WD128 KHz; SUT: 1KCK/14CK+0 ms; [CKSEL=0011 SUT=00]"
                    case WD128KHzSUT1KCK14CK41msCKSEL0011SUT01 = "WD128 KHz; SUT: 1KCK/14CK+4.1 ms; [CKSEL=0011 SUT=01]"
                    case WD128KHzSUT1KCK14CK65msCKSEL0011SUT10 = "WD128 KHz; SUT: 1KCK/14CK+65 ms; [CKSEL=0011 SUT=10]"
                    case WD128KHzSUT16KCK14CK0msCKSEL0011SUT11 = "WD128 KHz; SUT: 16KCK/14CK+0 ms; [CKSEL=0011 SUT=11]"
                    case PLL4PLLinRC8SUT1KCK14CK0msCKSEL0001SUT00 = "PLL/4; PLLin: RC8; SUT: 1KCK/14CK+0 ms; [CKSEL=0001 SUT=00]"
                    case PLL4PLLinRC8SUT1KCK14CK4msCKSEL0001SUT01 = "PLL/4; PLLin: RC8; SUT: 1KCK/14CK+4 ms;   [CKSEL=0001 SUT=01]"
                    case PLL4PLLinRC8SUT1KCK14CK64msCKSEL0001SUT10 = "PLL/4; PLLin: RC8; SUT: 1KCK/14CK+64 ms;   [CKSEL=0001 SUT=10]"
                    case PLL4PLLinExtCKSUT16KCK14CK0msCKSEL0101SUT00 = "PLL/4; PLLin: Ext. CK; SUT: 16KCK/14CK+0 ms; [CKSEL=0101 SUT=00]"
                    case PLL4PLLinExtCKSUT16KCK14CK4msCKSEL0101SUT01 = "PLL/4; PLLin: Ext. CK; SUT: 16KCK/14CK+4 ms; [CKSEL=0101 SUT=01]"
                    case PLL4PLLinExtCKSUT16KCK14CK4msCKSEL0101SUT10 = "PLL/4; PLLin: Ext. CK; SUT: 16KCK/14CK+4 ms; [CKSEL=0101 SUT=10]"
                    case PLL4PLLinExtCKSUT16KCK14CK64msCKSEL0101SUT11 = "PLL/4; PLLin: Ext. CK; SUT: 16KCK/14CK+64 ms; [CKSEL=0101 SUT=11]"
                    case PLL4PLLinXOSCSUT1KCK14CK0msCKSEL0100SUT00 = "PLL/4; PLLin: XOSC; SUT: 1KCK/14CK+0 ms; [CKSEL=0100 SUT=00]"
                    case PLL4PLLinXOSCSUT1KCK14CK4msCKSEL0100SUT01 = "PLL/4; PLLin: XOSC; SUT: 1KCK/14CK+4 ms; [CKSEL=0100 SUT=01]"
                    case PLL4PLLinXOSCSUT1KCK14CK64msCKSEL0100SUT10 = "PLL/4; PLLin: XOSC; SUT: 1KCK/14CK+64 ms; [CKSEL=0100 SUT=10]"
                    case PLL4PLLinXOSCSUT16KCK14CK0msCKSEL0100SUT11 = "PLL/4; PLLin: XOSC; SUT: 16KCK/14CK+0 ms; [CKSEL=0100 SUT=11]"
                    case RC1MHzSUT1KCK14CK0msCKSEL0110SUT00 = "RC 1 MHz; SUT: 1KCK/14CK+0 ms; [CKSEL=0110 SUT=00]"
                    case RC1MHzSUT1KCK14CK41msCKSEL0110SUT01 = "RC 1 MHz; SUT: 1KCK/14CK+4.1 ms; [CKSEL=0110 SUT=01]"
                    case RC1MHzSUT1KCK14CK65msCKSEL0110SUT10 = "RC 1 MHz; SUT: 1KCK/14CK+65 ms;  [CKSEL=0110 SUT=10]"
                    case BrownoutdetectionatVCC18V = "Brown-out detection at VCC=1.8 V"
                    case BrownoutdetectionatVCC23V = "Brown-out detection at VCC=2.3 V"
                    case BrownoutdetectionatVCC22V = "Brown-out detection at VCC=2.2 V"
                    case BrownoutdetectionatVCC19V = "Brown-out detection at VCC=1.9 V"
                    case BrownoutdetectionatVCC20V = "Brown-out detection at VCC=2.0 V"
                    case PSC0ASYEvent = "PSC0ASY Event"
                    case PSC1ASYEvent = "PSC1ASY Event"
                    case PSC2ASYEvent = "PSC2ASY Event"
                    case Analogcomparator1 = "Analog comparator 1"
                    case Analogcomparator2 = "Analog comparator 2"
                    case tw0MHz = "2.0 MHz"
                    case tw0MHz2 = "2.0 MHz " // Duplicate
                    case twentyMHz = "20 MHz"
                    case BootFlashsize256wordsBootaddress1F00 = "Boot Flash size=256 words Boot address=$1F00"
                    case BootFlashsize512wordsBootaddress1E00 = "Boot Flash size=512 words Boot address=$1E00"
                    case BootFlashsize1024wordsBootaddress1C00 = "Boot Flash size=1024 words Boot address=$1C00"
                    case BootFlashsize2048wordsBootaddress1800 = "Boot Flash size=2048 words Boot address=$1800"
                    case BootFlashsize256wordsstartaddress1F00 = "Boot Flash size=256 words start address=$1F00"
                    case BootFlashsize512wordsstartaddress1E00 = "Boot Flash size=512 words start address=$1E00"
                    case BootFlashsize1024wordsstartaddress1C00 = "Boot Flash size=1024 words start address=$1C00"
                    case BootFlashsize2048wordsstartaddress1800 = "Boot Flash size=2048 words start address=$1800"
                    case BrownoutdetectionlevelatVCC29V = "Brown-out detection level at VCC=2.9 V"
                    case BrownoutdetectionlevelatVCC30V = "Brown-out detection level at VCC=3.0 V"
                    case BrownoutdetectionlevelatVCC35V = "Brown-out detection level at VCC=3.5 V"
                    case BrownoutdetectionlevelatVCC36V = "Brown-out detection level at VCC=3.6 V"
                    case BrownoutdetectionlevelatVCC43V = "Brown-out detection level at VCC=4.3 V"
                    case EraseandWriteinoneoperation = "Erase and Write in one operation"
                    case EraseOnly = "Erase Only"
                    case WriteOnly = "Write Only"
                    case Clock4 = "Clock/4"
                    case Clock8 = "Clock/8"
                    case ExtendedStandby = "Extended Standby"
                    case BootFlashsize512wordsstartaddress7F00 = "Boot Flash size=512 words start address=$7F00"
                    case BootFlashsize1024wordsstartaddress7E00 = "Boot Flash size=1024 words start address=$7E00"
                    case BootFlashsize2408wordsstartaddress7C00 = "Boot Flash size=2408 words start address=$7C00"
                    case BootFlashsize4096wordsstartaddress7800 = "Boot Flash size=4096 words start address=$7800"
                    case BrownoutdetectiondisabledBODLEVEL111 = "Brown-out detection disabled; [BODLEVEL=111]"
                    case BrownoutdetectionatVCC24V = "Brown-out detection at VCC=2.4 V"
                    case BrownoutdetectionatVCC34V = "Brown-out detection at VCC=3.4 V"
                    case BrownoutdetectionatVCC35V = "Brown-out detection at VCC=3.5 V"
                    case LS0x21000x1FFFUS0x20000xFFFF = "LS = 0x2100 - 0x1FFF, US = 0x2000 - 0xFFFF"
                    case LS0x21000x3FFFUS0x40000xFFFF = "LS = 0x2100 - 0x3FFF, US = 0x4000 - 0xFFFF"
                    case LS0x21000x5FFFUS0x60000xFFFF = "LS = 0x2100 - 0x5FFF, US = 0x6000 - 0xFFFF"
                    case LS0x21000x7FFFUS0x80000xFFFF = "LS = 0x2100 - 0x7FFF, US = 0x8000 - 0xFFFF"
                    case LS0x21000x9FFFUS0xA0000xFFFF = "LS = 0x2100 - 0x9FFF, US = 0xA000 - 0xFFFF"
                    case LS0x21000xBFFFUS0xC0000xFFFF = "LS = 0x2100 - 0xBFFF, US = 0xC000 - 0xFFFF"
                    case LS0x21000xDFFFUS0xE0000xFFFF = "LS = 0x2100 - 0xDFFF, US = 0xE000 - 0xFFFF"
                    case None = "None"
                    case Px7 = "Px7"
                    case Px7Px6 = "Px7-Px6"
                    case Px7Px5 = "Px7-Px5"
                    case Px7Px4 = "Px7-Px4"
                    case Px7Px3 = "Px7-Px3"
                    case Px7Px2 = "Px7-Px2"
                    case FullPortX = "Full Port X"
                    case AsynchronousUSART = "Asynchronous USART"
                    case SynchronousUSART = "Synchronous USART"
                    case MasterSPI = "Master SPI"
                    case ExtClockStartuptime6CK4ms = "Ext. Clock; Start-up time: 6 CK + 4 ms"
                    case ExtClockStartuptime6CK64ms = "Ext. Clock; Start-up time: 6 CK + 64 ms"
                    case IntRCOsc1MHzStartuptime6CK0ms = "Int. RC Osc. 1 MHz; Start-up time: 6 CK + 0 ms"
                    case IntRCOsc1MHzStartuptime6CK4ms = "Int. RC Osc. 1 MHz; Start-up time: 6 CK + 4 ms"
                    case IntRCOsc1MHzStartuptime6CK64msdefaultvalue = "Int. RC Osc. 1 MHz; Start-up time: 6 CK + 64 ms; default value"
                    case IntRCOsc2MHzStartuptime6CK0ms = "Int. RC Osc. 2 MHz; Start-up time: 6 CK + 0 ms"
                    case IntRCOsc2MHzStartuptime6CK4ms = "Int. RC Osc. 2 MHz; Start-up time: 6 CK + 4 ms"
                    case IntRCOsc2MHzStartuptime6CK64ms = "Int. RC Osc. 2 MHz; Start-up time: 6 CK + 64 ms"
                    case IntRCOsc4MHzStartuptime6CK0ms = "Int. RC Osc. 4 MHz; Start-up time: 6 CK + 0 ms"
                    case IntRCOsc4MHzStartuptime6CK4ms = "Int. RC Osc. 4 MHz; Start-up time: 6 CK + 4 ms"
                    case IntRCOsc4MHzStartuptime6CK64ms = "Int. RC Osc. 4 MHz; Start-up time: 6 CK + 64 ms"
                    case IntRCOsc8MHzStartuptime6CK0ms = "Int. RC Osc. 8 MHz; Start-up time: 6 CK + 0 ms"
                    case IntRCOsc8MHzStartuptime6CK4ms = "Int. RC Osc. 8 MHz; Start-up time: 6 CK + 4 ms"
                    case IntRCOsc8MHzStartuptime6CK64ms = "Int. RC Osc. 8 MHz; Start-up time: 6 CK + 64 ms"
                    case ExtRCOsc09MHzStartuptime18CK0ms = "Ext. RC Osc.         -  0.9 MHz; Start-up time: 18 CK + 0 ms"
                    case ExtRCOsc09MHzStartuptime18CK4ms = "Ext. RC Osc.         -  0.9 MHz; Start-up time: 18 CK + 4 ms"
                    case ExtRCOsc09MHzStartuptime18CK64ms = "Ext. RC Osc.         -  0.9 MHz; Start-up time: 18 CK + 64 ms"
                    case ExtRCOsc09MHzStartuptime6CK4ms = "Ext. RC Osc.         -  0.9 MHz; Start-up time: 6 CK + 4 ms"
                    case ExtRCOsc09MHz30MHzStartuptime18CK0ms = "Ext. RC Osc. 0.9 MHz -  3.0 MHz; Start-up time: 18 CK + 0 ms"
                    case ExtRCOsc09MHz30MHzStartuptime18CK4ms = "Ext. RC Osc. 0.9 MHz -  3.0 MHz; Start-up time: 18 CK + 4 ms"
                    case ExtRCOsc09MHz30MHzStartuptime18CK64ms = "Ext. RC Osc. 0.9 MHz -  3.0 MHz; Start-up time: 18 CK + 64 ms"
                    case ExtRCOsc09MHz30MHzStartuptime6CK4ms = "Ext. RC Osc. 0.9 MHz -  3.0 MHz; Start-up time: 6 CK + 4 ms"
                    case ExtRCOsc30MHz80MHzStartuptime18CK0ms = "Ext. RC Osc. 3.0 MHz -  8.0 MHz; Start-up time: 18 CK + 0 ms"
                    case ExtRCOsc30MHz80MHzStartuptime18CK4ms = "Ext. RC Osc. 3.0 MHz -  8.0 MHz; Start-up time: 18 CK + 4 ms"
                    case ExtRCOsc30MHz80MHzStartuptime18CK64ms = "Ext. RC Osc. 3.0 MHz -  8.0 MHz; Start-up time: 18 CK + 64 ms"
                    case ExtRCOsc30MHz80MHzStartuptime6CK4ms = "Ext. RC Osc. 3.0 MHz -  8.0 MHz; Start-up time: 6 CK + 4 ms"
                    case ExtRCOsc80MHz120MHzStartuptime18CK0ms = "Ext. RC Osc. 8.0 MHz - 12.0 MHz; Start-up time: 18 CK + 0 ms"
                    case ExtRCOsc80MHz120MHzStartuptime18CK4ms = "Ext. RC Osc. 8.0 MHz - 12.0 MHz; Start-up time: 18 CK + 4 ms"
                    case ExtRCOsc80MHz120MHzStartuptime18CK64ms = "Ext. RC Osc. 8.0 MHz - 12.0 MHz; Start-up time: 18 CK + 64 ms"
                    case ExtRCOsc80MHz120MHzStartuptime6CK4ms = "Ext. RC Osc. 8.0 MHz - 12.0 MHz; Start-up time: 6 CK + 4 ms"
                    case ExtLowFreqCrystalStartuptime1KCK4ms = "Ext. Low-Freq. Crystal; Start-up time: 1K CK + 4 ms"
                    case ExtLowFreqCrystalStartuptime1KCK64ms = "Ext. Low-Freq. Crystal; Start-up time: 1K CK + 64 ms"
                    case ExtLowFreqCrystalStartuptime32KCK64ms = "Ext. Low-Freq. Crystal; Start-up time: 32K CK + 64 ms"
                    case ExtCrystalResonatorLowFreqStartuptime258CK4ms = "Ext. Crystal/Resonator Low Freq.; Start-up time: 258 CK + 4 ms"
                    case ExtCrystalResonatorLowFreqStartuptime258CK64ms = "Ext. Crystal/Resonator Low Freq.; Start-up time: 258 CK + 64 ms"
                    case ExtCrystalResonatorLowFreqStartuptime1KCK0ms = "Ext. Crystal/Resonator Low Freq.; Start-up time: 1K CK + 0 ms"
                    case ExtCrystalResonatorLowFreqStartuptime1KCK4ms = "Ext. Crystal/Resonator Low Freq.; Start-up time: 1K CK + 4 ms"
                    case ExtCrystalResonatorLowFreqStartuptime1KCK64ms = "Ext. Crystal/Resonator Low Freq.; Start-up time: 1K CK + 64 ms"
                    case ExtCrystalResonatorLowFreqStartuptime16KCK0ms = "Ext. Crystal/Resonator Low Freq.; Start-up time: 16K CK + 0 ms"
                    case ExtCrystalResonatorLowFreqStartuptime16KCK4ms = "Ext. Crystal/Resonator Low Freq.; Start-up time: 16K CK + 4 ms"
                    case ExtCrystalResonatorLowFreqStartuptime16KCK64ms = "Ext. Crystal/Resonator Low Freq.; Start-up time: 16K CK + 64 ms"
                    case ExtCrystalResonatorMediumFreqStartuptime258CK4ms = "Ext. Crystal/Resonator Medium Freq.; Start-up time: 258 CK + 4 ms"
                    case ExtCrystalResonatorMediumFreqStartuptime258CK64ms = "Ext. Crystal/Resonator Medium Freq.; Start-up time: 258 CK + 64 ms"
                    case ExtCrystalResonatorMediumFreqStartuptime1KCK0ms = "Ext. Crystal/Resonator Medium Freq.; Start-up time: 1K CK + 0 ms"
                    case ExtCrystalResonatorMediumFreqStartuptime1KCK4ms = "Ext. Crystal/Resonator Medium Freq.; Start-up time: 1K CK + 4 ms"
                    case ExtCrystalResonatorMediumFreqStartuptime1KCK64ms = "Ext. Crystal/Resonator Medium Freq.; Start-up time: 1K CK + 64 ms"
                    case ExtCrystalResonatorMediumFreqStartuptime16KCK0ms = "Ext. Crystal/Resonator Medium Freq.; Start-up time: 16K CK + 0 ms"
                    case ExtCrystalResonatorMediumFreqStartuptime16KCK4ms = "Ext. Crystal/Resonator Medium Freq.; Start-up time: 16K CK + 4 ms"
                    case ExtCrystalResonatorMediumFreqStartuptime16KCK64ms = "Ext. Crystal/Resonator Medium Freq.; Start-up time: 16K CK + 64 ms"
                    case ExtCrystalResonatorHighFreqStartuptime258CK4ms = "Ext. Crystal/Resonator High Freq.; Start-up time: 258 CK + 4 ms"
                    case ExtCrystalResonatorHighFreqStartuptime258CK64ms = "Ext. Crystal/Resonator High Freq.; Start-up time: 258 CK + 64 ms"
                    case ExtCrystalResonatorHighFreqStartuptime1KCK0ms = "Ext. Crystal/Resonator High Freq.; Start-up time: 1K CK + 0 ms"
                    case ExtCrystalResonatorHighFreqStartuptime1KCK4ms = "Ext. Crystal/Resonator High Freq.; Start-up time: 1K CK + 4 ms"
                    case ExtCrystalResonatorHighFreqStartuptime1KCK64ms = "Ext. Crystal/Resonator High Freq.; Start-up time: 1K CK + 64 ms"
                    case ExtCrystalResonatorHighFreqStartuptime16KCK0ms = "Ext. Crystal/Resonator High Freq.; Start-up time: 16K CK + 0 ms"
                    case ExtCrystalResonatorHighFreqStartuptime16KCK4ms = "Ext. Crystal/Resonator High Freq.; Start-up time: 16K CK + 4 ms"
                    case ExtCrystalResonatorHighFreqStartuptime16KCK64ms = "Ext. Crystal/Resonator High Freq.; Start-up time: 16K CK + 64 ms"
                    case AnyLogicalChangeinINTX = "Any Logical Change in INTX"
                    case tenMHz = "1.0 MHz"
                    case fortyMHz = "4.0 MHz"
                    case Startuptime6CK14CK4ms = "Start-up time 6 CK/14 CK + 4 ms"
                    case Startuptime6CK14CK8ms = "Start-up time 6 CK/14 CK + 8 ms"
                    case Startuptime6CK14CK16ms = "Start-up time 6 CK/14 CK + 16 ms"
                    case Startuptime6CK14CK32ms = "Start-up time 6 CK/14 CK + 32 ms"
                    case Startuptime6CK14CK64ms = "Start-up time 6 CK/14 CK + 64 ms"
                    case Startuptime6CK14CK128ms = "Start-up time 6 CK/14 CK + 128 ms"
                    case Startuptime6CK14CK256ms = "Start-up time 6 CK/14 CK + 256 ms"
                    case Startuptime6CK14CK512ms = "Start-up time 6 CK/14 CK + 512 ms"
                    case PowerOff = "Power Off"
                    case BootFlashsize256wordsstartaddressF00 = "Boot Flash size=256 words start address=$F00"
                    case BootFlashsize512wordsstartaddressE00 = "Boot Flash size=512 words start address=$E00"
                    case BootFlashsize1024wordsstartaddressC00 = "Boot Flash size=1024 words start address=$C00"
                    case BootFlashsize2048wordsstartaddress800 = "Boot Flash size=2048 words start address=$800"
                    case AIN1 = "AIN1"
                    case AIN2 = "AIN2"
                    case AIN3 = "AIN3"
                    case AIN4 = "AIN4"
                    case AIN5 = "AIN5"
                    case AIN6 = "AIN6"
                    case IntRCOsc1MHzStartuptime6CK64ms = "Int. RC Osc. 1 MHz; Start-up time: 6 CK + 64 ms"
                    case BootFlashsize128wordsstartaddress1F80 = "Boot Flash size=128 words start address=$1F80"
                    case Startuptime14CK4ms = "Start-up time 14 CK + 4 ms"
                    case Startuptime14CK8ms = "Start-up time 14 CK + 8 ms"
                    case Startuptime14CK16ms = "Start-up time 14 CK + 16 ms"
                    case Startuptime14CK32ms = "Start-up time 14 CK + 32 ms"
                    case Startuptime14CK64ms = "Start-up time 14 CK + 64 ms"
                    case Startuptime14CK128ms = "Start-up time 14 CK + 128 ms"
                    case Startuptime14CK256ms = "Start-up time 14 CK + 256 ms"
                    case Startuptime14CK512ms = "Start-up time 14 CK + 512 ms"
                    case Default = "Default"
                    case two50ms = "250ms"
                    case five00ms = "500ms"
                    case one000ms = "1000ms"
                    case two000ms = "2000ms"
                    case ADC = "ADC"
                    case AVCCreference = "AVCC reference"
                    case Internal256VVoltageReference = "Internal 2.56V Voltage Reference"
                    case AnalogChannelSelectionBitsselect = "Analog Channel Selection Bits select"
                    case ADCinputpin0 = "ADC input pin 0"
                    case ADCinputpin1 = "ADC input pin 1"
                    case ADCinputpin2 = "ADC input pin 2"
                    case ADCinputpin3 = "ADC input pin 3"
                    case ADCinputpin4 = "ADC input pin 4"
                    case ADCinputpin5 = "ADC input pin 5"
                    case ADCinputpin6 = "ADC input pin 6"
                    case ADCinputpin7 = "ADC input pin 7"
                    case ADCinputpin8 = "ADC input pin 8"
                    case ADCinputpin9 = "ADC input pin 9"
                    case ADCinputpin10 = "ADC input pin 10"
                    case Temperaturesensor = "Temperature sensor"
                    case InternalVCC4 = "Internal VCC / 4"
                    case Currentsource = "Current source"
                    case AnalogDifferentialAmplifier0 = "Analog Differential Amplifier 0"
                    case AnalogDifferentialAmplifier1 = "Analog Differential Amplifier 1"
                    case AnalogDifferentialAmplifier2 = "Analog Differential Amplifier 2"
                    case Bandgap = "Bandgap"
                    case zeroVGND = "0V (GND)"
                    case DefaultvalueofZpointerMSBs = "Default value of Z-pointer MSB's."
                    case BootFlashsize256wordsstartaddress3F00 = "Boot Flash size=256 words start address=$3F00"
                    case BootFlashsize256wordsBootaddress3F00 = "Boot Flash size=256 words Boot address=$3F00"
                    case BootFlashsize512wordsBootaddress3E00 = "Boot Flash size=512 words Boot address=$3E00"
                    case BootFlashsize1024wordsBootaddress3C00 = "Boot Flash size=1024 words Boot address=$3C00"
                    case BootFlashsize2048wordsBootaddress3800 = "Boot Flash size=2048 words Boot address=$3800"
                    case TimerCounter4Overflow = "Timer/Counter4 Overflow"
                    case TimerCounter4CompareMatchA = "Timer/Counter4 Compare Match A"
                    case TimerCounter4CompareMatchB = "Timer/Counter4 Compare Match B"
                    case TimerCounter4CompareMatchD = "Timer/Counter4 Compare Match D"
                    case IntRCOsc8MHzStartuptimePWRDWNRESET6CK14CK65msdefaultvalue = "Int. RC Osc. 8 MHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 65 ms; default value"
                    case IntRCOsc128kHzStartuptimePWRDWNRESET6CK14CK0ms = "Int. RC Osc. 128kHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 0 ms"
                    case IntRCOsc128kHzStartuptimePWRDWNRESET6CK14CK41ms = "Int. RC Osc. 128kHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 4.1 ms"
                    case IntRCOsc128kHzStartuptimePWRDWNRESET6CK14CK65ms = "Int. RC Osc. 128kHz; Start-up time PWRDWN/RESET: 6 CK/14 CK + 65 ms"
                    case ExtLowFreqCrystalStartuptimePWRDWNRESET1KCK14CK0ms = "Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 1K CK/14 CK + 0 ms"
                    case ExtLowFreqCrystalStartuptimePWRDWNRESET1KCK14CK41ms = "Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 1K CK/14 CK + 4.1 ms"
                    case ExtLowFreqCrystalStartuptimePWRDWNRESET1KCK14CK65ms = "Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 1K CK/14 CK + 65 ms"
                    case ExtLowFreqCrystalStartuptimePWRDWNRESET32KCK14CK0ms = "Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 32K CK/14 CK + 0 ms"
                    case ExtLowFreqCrystalStartuptimePWRDWNRESET32KCK14CK41ms = "Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 32K CK/14 CK + 4.1 ms"
                    case ExtLowFreqCrystalStartuptimePWRDWNRESET32KCK14CK65ms = "Ext. Low-Freq. Crystal; Start-up time PWRDWN/RESET: 32K CK/14 CK + 65 ms"
                    case ExtFullswingCrystalStartuptimePWRDWNRESET258CK14CK41ms = "Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: 258 CK/14 CK + 4.1 ms"
                    case ExtFullswingCrystalStartuptimePWRDWNRESET258CK14CK65ms = "Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: 258 CK/14 CK + 65 ms"
                    case ExtFullswingCrystalStartuptimePWRDWNRESET1KCK14CK0ms = "Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: 1K CK /14 CK + 0 ms"
                    case ExtFullswingCrystalStartuptimePWRDWNRESET1KCK14CK41ms = "Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: 1K CK /14 CK + 4.1 ms"
                    case ExtFullswingCrystalStartuptimePWRDWNRESET1KCK14CK65ms = "Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: 1K CK /14 CK + 65 ms"
                    case ExtFullswingCrystalStartuptimePWRDWNRESET16KCK14CK0ms = "Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: 16K CK/14 CK + 0 ms"
                    case ExtFullswingCrystalStartuptimePWRDWNRESET16KCK14CK41ms = "Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: 16K CK/14 CK + 4.1 ms"
                    case ExtFullswingCrystalStartuptimePWRDWNRESET16KCK14CK65ms = "Ext. Full-swing Crystal; Start-up time PWRDWN/RESET: 16K CK/14 CK + 65 ms"
                    case Internal11VVoltageReferencewithexternalcapacitoratAREFpin = "Internal 1.1V Voltage Reference with external capacitor at AREF pin"
                    case ADCSingleEndedInputpin0 = "ADC Single Ended Input pin 0"
                    case ADCSingleEndedInputpin1 = "ADC Single Ended Input pin 1"
                    case ADCSingleEndedInputpin2 = "ADC Single Ended Input pin 2"
                    case ADCSingleEndedInputpin3 = "ADC Single Ended Input pin 3"
                    case ADCSingleEndedInputpin4 = "ADC Single Ended Input pin 4"
                    case ADCSingleEndedInputpin5 = "ADC Single Ended Input pin 5"
                    case ADCSingleEndedInputpin6 = "ADC Single Ended Input pin 6"
                    case ADCSingleEndedInputpin7 = "ADC Single Ended Input pin 7"
                    case InternalReferenceVBG = "Internal Reference (VBG)"
                    case BootFlashsize512wordsBootaddress7E00 = "Boot Flash size=512 words Boot address=$7E00"
                    case BootFlashsize1024wordsBootaddress7C00 = "Boot Flash size=1024 words Boot address=$7C00"
                    case BootFlashsize2048wordsBootaddress7800 = "Boot Flash size=2048 words Boot address=$7800"
                    case BootFlashsize4096wordsBootaddress7000 = "Boot Flash size=4096 words Boot address=$7000"
                    case LS0x11000x1FFFUS0x20000xFFFF = "LS = 0x1100 - 0x1FFF, US = 0x2000 - 0xFFFF"
                    case LS0x11000x3FFFUS0x40000xFFFF = "LS = 0x1100 - 0x3FFF, US = 0x4000 - 0xFFFF"
                    case LS0x11000x5FFFUS0x60000xFFFF = "LS = 0x1100 - 0x5FFF, US = 0x6000 - 0xFFFF"
                    case LS0x11000x7FFFUS0x80000xFFFF = "LS = 0x1100 - 0x7FFF, US = 0x8000 - 0xFFFF"
                    case LS0x11000x9FFFUS0xA0000xFFFF = "LS = 0x1100 - 0x9FFF, US = 0xA000 - 0xFFFF"
                    case LS0x11000xBFFFUS0xC0000xFFFF = "LS = 0x1100 - 0xBFFF, US = 0xC000 - 0xFFFF"
                    case LS0x11000xDFFFUS0xE0000xFFFF = "LS = 0x1100 - 0xDFFF, US = 0xE000 - 0xFFFF"
                    case oneMHz = "1.0 MHz "
                    case fourMHz = "4.0 MHz "
                    case Startuptime14CK0ms = "Start-up time: 14 CK + 0 ms"
                    case Startuptime14CK0ms2 = "Start-up time 14 CK + 0 ms" // Duplicate
                    case ResetandSynchronize = "Reset and Synchronize"
                    case SynchronizeonnextInstantaneousConversion = "Synchronize on next Instantaneous Conversion"
                    case SynchronizeonnextAccumulatedConversion = "Synchronize on next Accumulated Conversion"
                    case ChoppingDisabled = "Chopping Disabled"
                    case AutomaticFastChopping = "Automatic Fast Chopping"
                    case AutomaticSlowChopping = "Automatic Slow Chopping"
                    case SoftwarePolarityControl = "Software Polarity Control"
                    case PLL512kHzoutputassamplingclock = "PLL (512kHz output) as sampling clock"
                    case SlowRCOscillatorassamplingclock = "Slow RC Oscillator as sampling clock"
                    case fiveTwelve = "512"
                    case ComparatorDisabled = "Comparator Disabled"
                    case ComparatorEnabledRegularCurrentCountercountsupifAccumulatedCurrentisabovethresholdandisresetifAccumulatedCurrentisbelowthreshold = "Comparator Enabled. Regular Current Counter counts up if Accumulated Current is above threshold and is reset if Accumulated Current is below threshold."
                    case ComparatorEnabledRegularCurrentCountercountsupifAccumulatedCurrentisabovethresholdanddownifAccumulatedCurrentisbelowthreshold = "Comparator Enabled. Regular Current Counter counts up if Accumulated Current is above threshold and down if Accumulated Current is below threshold."
                    case five = "5"
                    case six = "6"
                    case seven = "7"
                    case nine = "9"
                    case ten = "10"
                    case eleven = "11"
                    case twelve = "12"
                    case thirteen = "13"
                    case fourteen = "14"
                    case fifteen = "15"
                    case twoX = "2X"
                    case fourX = "4x"
                    case fourX2 = "4X" // Duplicate
                    case eightX = "8x"
                    case eightX2 = "8X" // Duplicate
                    case sixteenX = "16x"
                    case sixteenX2 = "16X" // Duplicate
                    case thirtyTwoX = "32X"
                    case thirtyTwoX2 = "32x"
                    case sixtyFourX = "64x"
                    case sixtyFourX2 = "64X" // Duplicate
                    case oneTwentyEightX = "128x"
                    case twoFiftySixX = "256x"
                    case Nocurrentsourceisenabled = "No current source is enabled"
                    case CurrentsourceonPIpinenabled = "Current source on PI pin enabled"
                    case CurrentsourceonNIpinenabled = "Current source on NI pin enabled"
                    case CurrentsourceonbothPINIpinsenabled = "Current source on both PI/NI pins enabled"
                    case VREFasreference = "VREF as reference"
                    case AVDD3asreferencefordiagnosispurpose = "AVDD/3 as reference (for diagnosis purpose)"
                    case CurrentsourceonPVpinenabled = "Current source on PV pin enabled"
                    case CurrentsourceonNVpinenabled = "Current source on NV pin enabled"
                    case CurrentsourceonbothPVNVpinsenabled = "Current source on both PV/NV pins enabled"
                    case PVNV = "PV - NV"
                    case ADC0SGND = "ADC0 - SGND"
                    case ADC1SGND = "ADC1 - SGND"
                    case VTEMPGND = "VTEMP - GND"
                    case DIAGNOSISGNDVREFTBD = "DIAGNOSIS - GND (VREF/TBD)"
                    case Int128kHzRCOscStartuptime6CK0ms = "Int. 128kHz RC Osc.; Start-up time: 6 CK + 0 ms"
                    case Int128kHzRCOscStartuptime6CK41ms = "Int. 128kHz RC Osc.; Start-up time: 6 CK + 4.1 ms"
                    case Int128kHzRCOscStartuptime6CK65ms = "Int. 128kHz RC Osc.; Start-up time: 6 CK + 65 ms"
                    case TranceiverOscillatorStartuptime258CK41ms = "Tranceiver Oscillator; Start-up time: 258 CK + 4.1 ms"
                    case TranceiverOscillatorStartuptime258CK65ms = "Tranceiver Oscillator; Start-up time: 258 CK + 65 ms"
                    case TranceiverOscillatorStartuptime1KCK0ms = "Tranceiver Oscillator; Start-up time: 1K CK + 0 ms"
                    case TranceiverOscillatorStartuptime1KCK41ms = "Tranceiver Oscillator; Start-up time: 1K CK + 4.1 ms"
                    case TranceiverOscillatorStartuptime1KCK65ms = "Tranceiver Oscillator; Start-up time: 1K CK + 65 ms"
                    case TranceiverOscillatorStartuptime16KCK0ms = "Tranceiver Oscillator; Start-up time: 16K CK + 0 ms"
                    case TranceiverOscillatorStartuptime16KCK41ms = "Tranceiver Oscillator; Start-up time: 16K CK + 4.1 ms"
                    case TranceiverOscillatorStartuptime16KCK65ms = "Tranceiver Oscillator; Start-up time: 16K CK + 65 ms"
                    case BrownoutdetectionatVCC21V = "Brown-out detection at VCC=2.1 V"
                    case MasterSPIMSPIM = "Master SPI (MSPIM)"
                    case RisingXCKnEdgeTransmittedDataChangedFallingXCKnEdgeReceivedDataSampled = "Rising XCKn Edge (Transmitted Data Changed), Falling XCKn Edge (Received Data Sampled)"
                    case FallingXCKnEdgeTransmittedDataChangedRisingXCKnEdgeReceivedDataSampled = "Falling XCKn Edge (Transmitted Data Changed), Rising XCKn Edge (Received Data Sampled)"
                    case BuserrorduetoillegalSTARTorSTOPcondition = "Bus error due to illegal START or STOP condition."
                    case ASTARTconditionhasbeentransmitted = "A START condition has been transmitted."
                    case ArepeatedSTARTconditionhasbeentransmitted = "A repeated START condition has been transmitted."
                    case SLAWhasbeentransmittedACKhasbeenreceived = "SLA+W has been transmitted; ACK has been received."
                    case SLAWhasbeentransmittedNOTACKhasbeenreceived = "SLA+W has been transmitted; NOT ACK has been received."
                    case DatabytehasbeentransmittedACKhasbeenreceived = "Data byte has been transmitted; ACK has been received."
                    case DatabytehasbeentransmittedNOTACKhasbeenreceived = "Data byte has been transmitted; NOT ACK has been received."
                    case ArbitrationlostinSLAWordatabytesTransmitterArbitrationlostinSLARorNOTACKbitReceiver = "Arbitration lost in SLA+W or data bytes (Transmitter); Arbitration lost in SLA+R or NOT ACK bit (Receiver)."
                    case SLARhasbeentransmittedACKhasbeenreceived = "SLA+R has been transmitted; ACK has been received."
                    case SLARhasbeentransmittedNOTACKhasbeenreceived = "SLA+R has been transmitted; NOT ACK has been received."
                    case DatabytehasbeenreceivedACKhasbeenreturned = "Data byte has been received; ACK has been returned."
                    case DatabytehasbeenreceivedNOTACKhasbeenreturned = "Data byte has been received; NOT ACK has been returned."
                    case OwnSLAWhasbeenreceivedACKhasbeenreturned = "Own SLA+W has been received; ACK has been returned."
                    case ArbitrationlostinSLARWasMasterownSLAWhasbeenreceivedACKhasbeenreturned = "Arbitration lost in SLA+R/W as Master; own SLA+W has been received; ACK has been returned."
                    case GeneralcalladdresshasbeenreceivedACKhasbeenreturned = "General call address has been received; ACK has been returned."
                    case ArbitrationlostinSLARWasMastergeneralcalladdresshasbeenreceivedACKhasbeenreturned = "Arbitration lost in SLA+R/W as Master; general call address has been received; ACK has been returned."
                    case PreviouslyaddressedwithownSLAWdatahasbeenreceivedACKhasbeenreturned = "Previously addressed with own SLA+W; data has been received; ACK has been returned."
                    case PreviouslyaddressedwithownSLAWdatahasbeenreceivedNOTACKhasbeenreturned = "Previously addressed with own SLA+W; data has been received; NOT ACK has been returned."
                    case PreviouslyaddressedwithgeneralcalldatahasbeenreceivedACKhasbeenreturned = "Previously addressed with general call; data has been received; ACK has been returned."
                    case PreviouslyaddressedwithgeneralcalldatahasbeenreceivedNOTACKhasbeenreturned = "Previously addressed with general call; data has been received; NOT ACK has been returned."
                    case ASTOPconditionorrepeatedSTARTconditionhasbeenreceivedwhilestilladdressedasSlave = "A STOP condition or repeated START condition has been received while still addressed as Slave."
                    case OwnSLARhasbeenreceivedACKhasbeenreturned = "Own SLA+R has been received; ACK has been returned."
                    case ArbitrationlostinSLARWasMasterownSLARhasbeenreceivedACKhasbeenreturned = "Arbitration lost in SLA+R/W as Master; own SLA+R has been received; ACK has been returned."
                    case DatabyteinTWDRhasbeentransmittedACKhasbeenreceived = "Data byte in TWDR has been transmitted; ACK has been received."
                    case DatabyteinTWDRhasbeentransmittedNOACKhasbeenreceived = "Data byte in TWDR has been transmitted; NO ACK has been received."
                    case LastdatabyteinTWDRhasbeentransmittedTWEA0ACKhasbeenreceived = "Last data byte in TWDR has been transmitted (TWEA = 0); ACK has been received."
                    case NorelevantstateinformationavailableTWINT0 = "No relevant state information available; TWINT = 0."
                    case RisingLeadingEdgeFallingTrailingEdge = "Rising (Leading Edge), Falling (Trailing Edge)"
                    case FallingLeadingEgdeRisingTrailingEdge = "Falling (Leading Egde), Rising (Trailing Edge)"
                    case SampleLeadingEdgeSetupTrailingEdge = "Sample (Leading Edge), Setup (Trailing Edge)"
                    case SetupLeadingEdgeSampleTrailingEdge = "Setup (Leading Edge), Sample (Trailing Edge)"
                    case fosc4fosc2SPI2X01 = "fosc/4 / fosc/2 (SPI2X=0/1)"
                    case fosc16fosc8SPI2X01 = "fosc/16 / fosc/8 (SPI2X=0/1)"
                    case fosc64fosc32SPI2X01 = "fosc/64 / fosc/32 (SPI2X=0/1)"
                    case fosc128fosc64SPI2X01 = "fosc/128 / fosc/64 (SPI2X=0/1)"
                    case NoclocksourceTimerCounter0stopped = "No clock source (Timer/Counter0 stopped)"
                    case clkIO1noprescaling = "clk_IO/1 (no prescaling)"
                    case clkIO8fromprescaler = "clk_IO/8 (from prescaler)"
                    case clkIO64fromprescaler = "clk_IO/64 (from prescaler)"
                    case clkIO256fromprescaler = "clk_IO/256 (from prescaler)"
                    case clkIO1024fromprescaler = "clk_IO/1024 (from prescaler)"
                    case ExternalclocksourceonT0pinclockonfallingedge = "External clock source on T0 pin, clock on falling edge"
                    case ExternalclocksourceonT0pinclockonrisingedge = "External clock source on T0 pin, clock on rising edge"
                    case NormalportoperationOC0Adisconnected = "Normal port operation, OC0A disconnected"
                    case ToggleOC0AonCompareMatch = "Toggle OC0A on Compare Match"
                    case ClearOC0AonCompareMatch = "Clear OC0A on Compare Match"
                    case SetOC0AonCompareMatch = "Set OC0A on Compare Match"
                    case NormalportoperationOC0Bdisconnected = "Normal port operation, OC0B disconnected"
                    case ToggleOC0BonCompareMatch = "Toggle OC0B on Compare Match"
                    case ClearOC0BonCompareMatch = "Clear OC0B on Compare Match"
                    case SetOC0BonCompareMatch = "Set OC0B on Compare Match"
                    case Normalmodeofoperation = "Normal mode of operation"
                    case PWMphasecorrectTOP0xFF = "PWM, phase correct, TOP=0xFF"
                    case CTCTOPOCRA = "CTC, TOP = OCRA"
                    case FastPWMTOP0xFF = "Fast PWM, TOP=0xFF"
                    case PWMPhasecorrectTOPOCRA = "PWM, Phase correct, TOP = OCRA"
                    case FastPWMTOPOCRA = "Fast PWM, TOP=OCRA"
                    case NormalportoperationOC2Adisconnected = "Normal port operation, OC2A disconnected"
                    case ToggleOC2AonCompareMatch = "Toggle OC2A on Compare Match"
                    case ClearOC2AonCompareMatch = "Clear OC2A on Compare Match"
                    case SetOC2AonCompareMatch = "Set OC2A on Compare Match"
                    case NormalportoperationOC2Bdisconnected = "Normal port operation, OC2B disconnected"
                    case ToggleOC2BonCompareMatch = "Toggle OC2B on Compare Match"
                    case ClearOC2BonCompareMatch = "Clear OC2B on Compare Match"
                    case SetOC2BonCompareMatch = "Set OC2B on Compare Match"
                    case NoclocksourceTimerCounter2stopped = "No clock source (Timer/Counter2 stopped)"
                    case clkT2S1noprescaling = "clk_T2S/1 (no prescaling)"
                    case clkT2S8fromprescaler = "clk_T2S/8 (from prescaler)"
                    case clkT2S32fromprescaler = "clk_T2S/32 (from prescaler)"
                    case clkT2S64fromprescaler = "clk_T2S/64 (from prescaler)"
                    case clkT2S128fromprescaler = "clk_T2S/128 (from prescaler)"
                    case clkT2S256fromprescaler = "clk_T2S/256 (from prescaler)"
                    case clkT2S1024fromprescaler = "clk_T2S/1024 (from prescaler)"
                    case Normaloperation = "Normal operation"
                    case PWMphasecorrect8bit = "PWM, phase correct, 8-bit"
                    case PWMphasecorrect9bit = "PWM, phase correct, 9-bit"
                    case PWMphasecorrect10bit = "PWM, phase correct, 10-bit"
                    case CTCTOPOCRnA = "CTC, TOP = OCRnA"
                    case FastPWM8bit = "Fast PWM, 8-bit"
                    case FastPWM9bit = "Fast PWM, 9-bit"
                    case FastPWM10bit = "Fast PWM, 10-bit"
                    case PWMPhaseandfrequencycorrectTOPICRn = "PWM, Phase and frequency correct, TOP = ICRn"
                    case PWMPhaseandfrequencycorrectTOPOCRnA = "PWM, Phase and frequency correct, TOP = OCRnA"
                    case PWMPhasecorrectTOPICRn = "PWM, Phase correct, TOP = ICRn"
                    case PWMPhasecorrectTOPOCRnA = "PWM, Phase correct, TOP = OCRnA"
                    case FastPWMTOPICRn = "Fast PWM, TOP = ICRn"
                    case FastPWMTOPOCRnA = "Fast PWM, TOP = OCRnA"
                    case NoclocksourceTimerCounterstopped = "No clock source (Timer/Counter stopped)"
                    case NormalportoperationOCnAOCnBOCnCdisconnected = "Normal port operation, OCnA/OCnB/OCnC disconnected."
                    case ToggleOCnAOCnBOCnConCompareMatch = "Toggle OCnA/OCnB/OCnC on Compare Match."
                    case ClearOCnAOCnBOCnConCompareMatchsetoutputtolowlevel = "Clear OCnA/OCnB/OCnC on Compare Match (set output to low level)."
                    case SetOCnAOCnBOCnConCompareMatchsetoutputtohighlevel = "Set OCnA/OCnB/OCnC on Compare Match (set output to high level)."
                    case ExternalclocksourceonTnpinclockonfallingedge = "External clock source on Tn pin, clock on falling edge"
                    case ExternalclocksourceonTnpinclockonrisingedge = "External clock source on Tn pin, clock on rising edge"
                    case minusThreeuS = "-3us"
                    case minusTwouS = "-2us"
                    case minusOneuS = "-1us"
                    case zerouS = "0us"
                    case oneuS = "1us"
                    case twouS = "2us"
                    case threeuS = "3us"
                    case fouruS = "4us"
                    case AESModeisECBElectronicCodeBook = "AES Mode is ECB (Electronic Code Book)."
                    case AESModeisCBCCipherBlockChaining = "AES Mode is CBC (Cipher Block Chaining)."
                    case AESoperationisencryption = "AES operation is encryption."
                    case AESoperationisdecryption = "AES operation is decryption."
                    case CCAcalculationnotfinished = "CCA calculation not finished"
                    case CCAcalculationfinished = "CCA calculation finished"
                    case Channelindicatedasbusy = "Channel indicated as busy."
                    case Channelindicatedasidle = "Channel indicated as idle."
                    case Testmodeisdisabled = "Test mode is disabled."
                    case Testmodeisactive = "Test mode is active."
                    case PON = "P_ON"
                    case BUSYRX = "BUSY_RX"
                    case BUSYTX = "BUSY_TX"
                    case RXON = "RX_ON"
                    case TRXOFF = "TRX_OFF"
                    case PLLON = "PLL_ON"
                    case SLEEP = "SLEEP"
                    case BUSYRXAACK = "BUSY_RX_AACK"
                    case BUSYTXARET = "BUSY_TX_ARET"
                    case RXAACKON = "RX_AACK_ON"
                    case TXARETON = "TX_ARET_ON"
                    case STATETRANSITIONINPROGRESS = "STATE_TRANSITION_IN_PROGRESS"
                    case SUCCESSRXAACKTXARET = "SUCCESS (RX_AACK, TX_ARET)"
                    case SUCCESSDATAPENDINGTXARET = "SUCCESS_DATA_PENDING (TX_ARET)"
                    case SUCCESSWAITFORACKRXAACK = "SUCCESS_WAIT_FOR_ACK (RX_AACK)"
                    case CHANNELACCESSFAILURETXARET = "CHANNEL_ACCESS_FAILURE (TX_ARET)"
                    case NOACKTXARET = "NO_ACK (TX_ARET)"
                    case INVALIDRXAACKTXARET = "INVALID (RX_AACK, TX_ARET)"
                    case NOP = "NOP"
                    case TXSTART = "TX_START"
                    case FORCETRXOFF = "FORCE_TRX_OFF"
                    case FORCEPLLON = "FORCE_PLL_ON"
                    case PLLONTXON = "PLL_ON (TX_ON)"
                    case three5dBm = "3.5 dBm"
                    case three3dBm = "3.3 dBm"
                    case two8dBm = "2.8 dBm"
                    case two3dBm = "2.3 dBm"
                    case one8dBm = "1.8 dBm"
                    case one2dBm = "1.2 dBm"
                    case zero5dBm = "0.5 dBm"
                    case minuszero5dBm = "-0.5 dBm"
                    case one5dBm = "-1.5 dBm"
                    case two5dBm = "-2.5 dBm"
                    case minusthree5dBm = "-3.5 dBm"
                    case four5dBm = "-4.5 dBm"
                    case six5dBm = "-6.5 dBm"
                    case eight5dBm = "-8.5 dBm"
                    case one15dBm = "-11.5 dBm"
                    case one65dBm = "-16.5 dBm"
                    case CRCFCSnotvalid = "CRC (FCS) not valid"
                    case CRCFCSvalid = "CRC (FCS) valid"
                    case MinimumRSSIvaluePRF90dBm = "Minimum RSSI value: P(RF) < -90 dBm"
                    case PRFRSSIBASEVAL3RSSI1dBm = "P(RF) = RSSI_BASE_VAL+3 · (RSSI-1) [dBm]"
                    case ellipsis = "..."
                    case MaximumRSSIvaluePRF10dBm = "Maximum RSSI value: P(RF) ≥ -10 dBm"
                    case MinimumresultoflastEDmeasurement = "Minimum result of last ED measurement"
                    case PRFRSSIBASEVALEDdBm = "P(RF) = RSSI_BASE_VAL+ED [dBm]"
                    case MaximumresultoflastEDmeasurement = "Maximum result of last ED measurement"
                    case Resetvalue = "Reset value"
                    case Mode3aCarriersenseORenergyabovethreshold = "Mode 3a, Carrier sense OR energy above threshold"
                    case Mode1Energyabovethreshold = "Mode 1, Energy above threshold"
                    case Mode2Carriersenseonly = "Mode 2, Carrier sense only"
                    case Mode3bCarriersenseANDenergyabovethreshold = "Mode 3b, Carrier sense AND energy above threshold"
                    case two405MHz = "2405 MHz"
                    case two410MHz = "2410 MHz"
                    case two415MHz = "2415 MHz"
                    case two420MHz = "2420 MHz"
                    case two425MHz = "2425 MHz"
                    case two430MHz = "2430 MHz"
                    case two435MHz = "2435 MHz"
                    case two440MHz = "2440 MHz"
                    case two445MHz = "2445 MHz"
                    case two450MHz = "2450 MHz"
                    case two455MHz = "2455 MHz"
                    case two460MHz = "2460 MHz"
                    case two465MHz = "2465 MHz"
                    case two470MHz = "2470 MHz"
                    case two475MHz = "2475 MHz"
                    case two480MHz = "2480 MHz"
                    case ResetvaluetobeusedifAntennaDiversityalgorithmisdisabled = "Reset value, to be used if Antenna Diversity algorithm is disabled"
                    case RecommendedcorrelatorthresholdforAntennaDiversityoperation = "Recommended correlator threshold for Antenna Diversity operation"
                    case IEEE802154compliantvalueoftheSFD = "IEEE 802.15.4 compliant value of the SFD"
                    case two50kbsIEEE802154compliant = "250 kb/s (IEEE 802.15.4 compliant)"
                    case five00kbs = "500 kb/s"
                    case one000kbs = "1000 kb/s"
                    case two000kbs = "2000 kb/s"
                    case Antenna0 = "Antenna 0"
                    case Antenna1 = "Antenna 1"
                    case AntennaDiversityalgorithmdisabled = "Antenna Diversity algorithm disabled"
                    case AntennaDiversityalgorithmenabled = "Antenna Diversity algorithm enabled"
                    case AntennaDiversityRFswitchcontroldisabled = "Antenna Diversity RF switch control disabled"
                    case AntennaDiversityRFswitchcontrolenabled = "Antenna Diversity RF switch control enabled"
                    case Antenna1DIG1HDIG2L = "Antenna 1: DIG1=H, DIG2=L"
                    case Antenna0DIG1LDIG2H = "Antenna 0: DIG1=L, DIG2=H"
                    case DefaultvalueforANTEXTSWEN0MandatorysettingforapplicationsnotusingAntennaDiversity = "Default value for ANT_EXT_SW_EN=0; Mandatory setting for applications not using Antenna Diversity"
                    case InternalAVDDvoltageregulatorfortheanalogsectionisenabled = "Internal AVDD voltage regulator for the analog section is enabled."
                    case InternalAVDDvoltageregulatorisdisableduseexternalregulated18Vsupplyvoltagefortheanalogsection = "Internal AVDD voltage regulator is disabled; use external regulated 1.8V supply voltage for the analog section."
                    case Analogvoltageregulatordisabledorsupplyvoltagenotstable = "Analog voltage regulator disabled or supply voltage not stable"
                    case Analogsupplyvoltagehassettled = "Analog supply voltage has settled"
                    case InternalDVDDvoltageregulatorforthedigitalsectionisenabled = "Internal DVDD voltage regulator for the digital section is enabled."
                    case InternalDVDDvoltageregulatorisdisableduseexternalregulated18Vsupplyvoltageforthedigitalsection = "Internal DVDD voltage regulator is disabled; use external regulated 1.8V supply voltage for the digital section."
                    case Digitalvoltageregulatordisabledorsupplyvoltagenotstable = "Digital voltage regulator disabled or supply voltage not stable"
                    case Digitalsupplyvoltagehassettled = "Digital supply voltage has settled"
                    case Thebatteryvoltageisbelowthethreshold = "The battery voltage is below the threshold."
                    case Thebatteryvoltageisabovethethreshold = "The battery voltage is above the threshold."
                    case EnablesthelowrangeseeBATMONVTH = "Enables the low range, see BATMON_VTH"
                    case EnablesthehighrangeseeBATMONVTH = "Enables the high range, see BATMON_VTH"
                    case two550V170VBATMONHR10 = "2.550V / 1.70V (BATMON_HR=1/0)"
                    case two625V175VBATMONHR10 = "2.625V / 1.75V (BATMON_HR=1/0)"
                    case two700V180VBATMONHR10 = "2.700V / 1.80V (BATMON_HR=1/0)"
                    case two775V185VBATMONHR10 = "2.775V / 1.85V (BATMON_HR=1/0)"
                    case two850V190VBATMONHR10 = "2.850V / 1.90V (BATMON_HR=1/0)"
                    case two925V195VBATMONHR10 = "2.925V / 1.95V (BATMON_HR=1/0)"
                    case three000V200VBATMONHR10 = "3.000V / 2.00V (BATMON_HR=1/0)"
                    case three075V205VBATMONHR10 = "3.075V / 2.05V (BATMON_HR=1/0)"
                    case three150V210VBATMONHR10 = "3.150V / 2.10V (BATMON_HR=1/0)"
                    case three225V215VBATMONHR10 = "3.225V / 2.15V (BATMON_HR=1/0)"
                    case three300V220VBATMONHR10 = "3.300V / 2.20V (BATMON_HR=1/0)"
                    case three375V225VBATMONHR10 = "3.375V / 2.25V (BATMON_HR=1/0)"
                    case three450V230VBATMONHR10 = "3.450V / 2.30V (BATMON_HR=1/0)"
                    case three525V235VBATMONHR10 = "3.525V / 2.35V (BATMON_HR=1/0)"
                    case three600V240VBATMONHR10 = "3.600V / 2.40V (BATMON_HR=1/0)"
                    case three675V245VBATMONHR10 = "3.675V / 2.45V (BATMON_HR=1/0)"
                    case Internalcrystaloscillatordisableduseexternalreferencefrequency = "Internal crystal oscillator disabled; use external reference frequency."
                    case Internalcrystaloscillatorenabledamplituderegulationofoscillationenabled = "Internal crystal oscillator enabled; amplitude regulation of oscillation enabled."
                    case zeroPoint0pFtrimmingcapacitorsdisconnected = "0.0 pF, trimming capacitors disconnected"
                    case zeroPoint3pFtrimmingcapacitorswitchedon = "0.3 pF, trimming capacitor switched on"
                    case fortyFivepFtrimmingcapacitorswitchedon = "4.5 pF, trimming capacitor switched on"
                    case RXTHRESRSSIBASEVALResetvalueRSSIvaluenotconsidered = "RX_THRES ≤ RSSI_BASE_VAL (Reset value); RSSI value not considered"
                    case RXTHRESRSSIBASEVAL03RSSI90dBm = "RX_THRES > RSSI_BASE_VAL + 0 · 3; RSSI > -90 dBm"
                    case RXTHRESRSSIBASEVAL133RSSI51dBm = "RX_THRES > RSSI_BASE_VAL + 13 · 3; RSSI > -51 dBm"
                    case RXTHRESRSSIBASEVAL143RSSI48dBm = "RX_THRES > RSSI_BASE_VAL + 14 · 3; RSSI > -48 dBm"
                    case Activatesminimumpowersavingbehaviourforsmartreceivingmode = "Activates minimum power saving behaviour for smart receiving mode"
                    case Activatesmaximumpowersavingbehaviourforsmartreceivingmode = "Activates maximum power saving behaviour for smart receiving mode"
                    case twelveSymbolsacknowledgmenttime = "12 symbols acknowledgment time"
                    case twoSymbolsacknowledgmenttime = " 2 symbols acknowledgment time"
                    case ATmega128RFA1partnumber = "ATmega128RFA1 part number"
                    case RFA2family = "RFA2 family"
                    case RFR2family = "RFR2 family"
                    case RevisionA = "Revision A"
                    case RevisionB = "Revision B"
                    case AtmelJEDECmanufacturerIDbits70of32bitmanufacturerID0000001F = "Atmel JEDEC manufacturer ID, bits [7:0] of 32 bit manufacturer ID: 00 00 00 1F"
                    case AtmelJEDECmanufacturerIDbits158of32bitmanufacturerID0000001F = "Atmel JEDEC manufacturer ID, bits [15:8] of 32 bit manufacturer ID: 00 00 00 1F"
                    case Retransmissionofframeisnotattempted = "Retransmission of frame is not attempted."
                    case Retransmissionofframeisattemptedonce = "Retransmission of frame is attempted once."
                    case Retransmissionofframeisattempted15times = "Retransmission of frame is attempted 15 times."
                    case NorepetitionofCSMACAprocedure = "No repetition of CSMA-CA procedure"
                    case OnerepetitionofCSMACAprocedure = "One repetition of CSMA-CA procedure"
                    case FiverepetitionshighestIEEE802154compliantvalue = "Five repetitions (highest IEEE 802.15.4 compliant value)"
                    case ImmediateframeretransmissionwithoutperformingCSMACA = "Immediate frame re-transmission without performing CSMA-CA"
                    case TheradiotransceiveroperatesinunslottedmodeAnacknowledgmentframeisautomaticallysentifrequested = "The radio transceiver operates in unslotted mode. An acknowledgment frame is automatically sent if requested."
                    case Thetransmissionofanacknowledgmentframehastobecontrolledbythemicrocontroller = "The transmission of an acknowledgment frame has to be controlled by the microcontroller."
                    case Acknowledgeframeswithversionnumber0 = "Acknowledge frames with version number 0"
                    case Acknowledgeframeswithversionnumber0or1 = "Acknowledge frames with version number 0 or 1"
                    case Acknowledgeframeswithversionnumber0or1or2 = "Acknowledge frames with version number 0 or 1 or 2"
                    case Acknowledgeframesindependentofframeversionnumber = "Acknowledge frames independent of frame version number"
                    case Thisvalueisnotvalidforthemaximumbackoffexponent = "This value is not valid for the maximum back-off exponent."
                    case MinimumIEEEcompliantvalueforthemaximumbackoffexponent = "Minimum, IEEE compliant value for the maximum back-off exponent."
                    case MaximumIEEEcompliantvalueforthemaximumbackoffexponent = "Maximum, IEEE compliant value for the maximum back-off exponent."
                    case Minimumvalueofminimumbackoffexponent = "Minimum value of minimum back-off exponent."
                    case MaximumvalueofminimumbackoffexponentMINBEmustbesmallerorequaltoMAXBE = "Maximum value of minimum back-off exponent. MIN_BE must be smaller or equal to MAX_BE."
                    case NORMALnotestisactive = "NORMAL (no test is active)"
                    case TSTCONTTXcontinuoustransmit = "TST_CONT_TX (continuous transmit)"
                    case TransceiverClockdividedby256625kHz = "Transceiver Clock divided by 256, (62.5kHz)"
                    case TransceiverClockdividedby128125kHz = "Transceiver Clock divided by 128, (125kHz)"
                    case TransceiverClockdividedby64250kHz = "Transceiver Clock divided by 64,  (250kHz)"
                    case TransceiverClockdividedby32500kHz = "Transceiver Clock divided by 32,  (500kHz)"
                    case TransceiverClockdividedby161MHz = "Transceiver Clock divided by 16,  (1MHz)"
                    case TransceiverClockdividedby82MHz = "Transceiver Clock divided by 8,   (2MHz)"
                    case TransceiverClockdividedby44MHz = "Transceiver Clock divided by 4,   (4MHz)"
                    case CompareUnit3RelativeCompareSourceBeaconTimestampRegister = "Compare Unit 3 Relative Compare Source = Beacon Timestamp Register"
                    case CompareUnit3RelativeCompareSourceTransmitFrameTimestampRegister = "Compare Unit 3 Relative Compare Source = Transmit Frame Timestamp Register"
                    case CompareUnit3RelativeCompareSourceReceivedFrameTimestampRegister = "Compare Unit 3 Relative Compare Source = Received Frame Timestamp Register"
                    case CompareUnit2RelativeCompareSourceBeaconTimestampRegister = "Compare Unit 2 Relative Compare Source = Beacon Timestamp Register"
                    case CompareUnit2RelativeCompareSourceTransmitFrameTimestampRegister = "Compare Unit 2 Relative Compare Source = Transmit Frame Timestamp Register"
                    case CompareUnit2RelativeCompareSourceReceivedFrameTimestampRegister = "Compare Unit 2 Relative Compare Source = Received Frame Timestamp Register"
                    case CompareUnit1RelativeCompareSourceBeaconTimestampRegister = "Compare Unit 1 Relative Compare Source = Beacon Timestamp Register"
                    case CompareUnit1RelativeCompareSourceTransmitFrameTimestampRegister = "Compare Unit 1 Relative Compare Source = Transmit Frame Timestamp Register"
                    case CompareUnit1RelativeCompareSourceReceivedFrameTimestampRegister = "Compare Unit 1 Relative Compare Source = Received Frame Timestamp Register"
                    case EraseandWriteinoneoperationAtomicOperation = "Erase and Write in one operation (Atomic Operation)"
                    case Eraseonly = "Erase only"
                    case Writeonly = "Write only"
                    case Reservedforfutureuse = "Reserved for future use"
                    case Refertothedebuggerdocumentationforfurtherinformationonhowtousethisregister = "Refer to the debugger documentation for further information on how to use this register."
                    case ThelowlevelofINTngeneratesaninterruptrequest = "The low level of INTn generates an interrupt request."
                    case AnyedgeofINTngeneratesasynchronouslyaninterruptrequest = "Any edge of INTn generates asynchronously an interrupt request."
                    case ThefallingedgeofINTngeneratesasynchronouslyaninterruptrequest = "The falling edge of INTn generates asynchronously an interrupt request."
                    case TherisingedgeofINTngeneratesasynchronouslyaninterruptrequest = "The rising edge of INTn generates asynchronously an interrupt request."
                    case Allexternalpininterruptsaredisabled = "All external pin interrupts are disabled."
                    case Allexternalpininterruptsareenabled = "All external pin interrupts are enabled."
                    case NoedgeorlogicchangeonINT70occurred = "No edge or logic change on INT7:0 occurred."
                    case AedgeorlogicchangeonINT0occurredandtriggeredaninterruptrequest = "A edge or logic change on INT0 occurred and triggered an interrupt request."
                    case AedgeorlogicchangeonINT7occurredandtriggeredaninterruptrequest = "A edge or logic change on INT7 occurred and triggered an interrupt request."
                    case AREFInternalreferencevoltagegenerationturnedoff = "AREF, Internal reference voltage generation turned off"
                    case AVDDwithexternalcapacitoratAREFpin = "AVDD with external capacitor at AREF pin"
                    case Internal15VVoltageReferencenoexternalcapacitoratAREFpin = "Internal 1.5V Voltage Reference (no external capacitor at AREF pin)"
                    case Internal16VVoltageReferencenoexternalcapacitoratAREFpin = "Internal 1.6V Voltage Reference (no external capacitor at AREF pin)"
                    case Singleended1differential3ADCclockcycles = "Single ended: 1, differential 3 ADC clock cycles"
                    case Singleended2differential5ADCclockcycles = "Single ended: 2, differential 5 ADC clock cycles"
                    case Singleended3differential7ADCclockcycles = "Single ended: 3, differential 7 ADC clock cycles"
                    case Singleended4differential9ADCclockcycles = "Single ended: 4, differential 9 ADC clock cycles"
                    case threeADCclockcycles = "3 ADC clock cycles"
                    case sevenADCclockcycles = "7 ADC clock cycles"
                    case elevenADCclockcycles = "11 ADC clock cycles"
                    case fifteenADCclockcycles = "15 ADC clock cycles"
                    case twoFiftyOneADCclockcycles = "251 ADC clock cycles"
                    case twoFiftyFiveADCclockcycles = "255 ADC clock cycles"
                    case Calibrationvalueforlowestoscillatorfrequency = "Calibration value for lowest oscillator frequency"
                    case Endvalueoflowfrequencyrangecalibration = "End value of low frequency range calibration"
                    case Startvalueofhighfrequencyrangecalibration = "Start value of high frequency range calibration"
                    case Calibrationvalueforhighestoscillatorfrequency = "Calibration value for highest oscillator frequency"
                    case Divisionfactor1RCOscillator2 = "Division factor 1   / RC-Oscillator   2"
                    case Divisionfactor2RCOscillator4 = "Division factor 2   / RC-Oscillator   4"
                    case Divisionfactor4RCOscillator8 = "Division factor 4   / RC-Oscillator   8"
                    case Divisionfactor8RCOscillator16 = "Division factor 8   / RC-Oscillator  16"
                    case Divisionfactor16RCOscillator32 = "Division factor 16  / RC-Oscillator  32"
                    case Divisionfactor32RCOscillator64 = "Division factor 32  / RC-Oscillator  64"
                    case Divisionfactor64RCOscillator128 = "Division factor 64  / RC-Oscillator 128"
                    case Divisionfactor128RCOscillator256 = "Division factor 128 / RC-Oscillator 256"
                    case Divisionfactor256RCOscillator512 = "Division factor 256 / RC-Oscillator 512"
                    case Divisionfactor1onlypermittedforRCOscillatorFlashandEEPROMprogrammingisnotallowed = "Division factor 1 only permitted for RC-Oscillator. Flash and EEPROM programming is not allowed."
                    case FactoryRow = "Factory Row"
                    case UserRow1 = "User Row 1"
                    case UserRow2 = "User Row 2"
                    case UserRow3 = "User Row 3"
                    case Centervalue = "Center value"
                    case Voltagestepup = "Voltage step up"
                    case Voltagestepdown = "Voltage step down"
                    case Settingforhighestvoltage = "Setting for highest voltage"
                    case Settingforlowestvoltage = "Setting for lowest voltage"
                    case Calibrationlimitforfastprocesscornerhighoutputvoltage = "Calibration limit for fast process corner/high output voltage"
                    case Calibrationlimitforslowprocesscornerlowoutputvoltage = "Calibration limit for slow process corner/low output voltage"
                    case twomA = "2 mA"
                    case fourmA = "4 mA"
                    case sixmA = "6 mA"
                    case eightmA = "8 mA"
                    
                    case zerous = "0 us"
                    case twous = "2 us"
                    case fourus = "4 us"
                    case sixus = "6 us"
                    case eightus = "8 us"
                    case threedBm = "3.0 dBm"
                    case one3dBm = "1.3 dBm"
                    case zero7dBm = "0.7 dBm"
                    case zero0dBm = "0.0 dBm"
                    case minus1dBm = " -1 dBm"
                    case minus2dBm = " -2 dBm"
                    case minus3dBm = " -3 dBm"
                    case minus4dBm = " -4 dBm"
                    case minus5dBm = " -5 dBm"
                    case minus7dBm = " -7 dBm"
                    case minus9dBm = " -9 dBm"
                    case minus12dBm = "-12 dBm"
                    case minus17dBm = "-17 dBm"
                    case two550VBATMONHR1170VBATMONHR0 = "2.550V (BATMON_HR=1) 1.70V (BATMON_HR=0)"
                    case two625VBATMONHR1175VBATMONHR0 = "2.625V (BATMON_HR=1) 1.75V (BATMON_HR=0)"
                    case two700VBATMONHR1180VBATMONHR0 = "2.700V (BATMON_HR=1) 1.80V (BATMON_HR=0)"
                    case two775VBATMONHR1185VBATMONHR0 = "2.775V (BATMON_HR=1) 1.85V (BATMON_HR=0)"
                    case two850VBATMONHR1190VBATMONHR0 = "2.850V (BATMON_HR=1) 1.90V (BATMON_HR=0)"
                    case two925VBATMONHR1195VBATMONHR0 = "2.925V (BATMON_HR=1) 1.95V (BATMON_HR=0)"
                    case three000VBATMONHR1200VBATMONHR0 = "3.000V (BATMON_HR=1) 2.00V (BATMON_HR=0)"
                    case three075VBATMONHR1205VBATMONHR0 = "3.075V (BATMON_HR=1) 2.05V (BATMON_HR=0)"
                    case three150VBATMONHR1210VBATMONHR0 = "3.150V (BATMON_HR=1) 2.10V (BATMON_HR=0)"
                    case three225VBATMONHR1215VBATMONHR0 = "3.225V (BATMON_HR=1) 2.15V (BATMON_HR=0)"
                    case three300VBATMONHR1220VBATMONHR0 = "3.300V (BATMON_HR=1) 2.20V (BATMON_HR=0)"
                    case three375VBATMONHR1225VBATMONHR0 = "3.375V (BATMON_HR=1) 2.25V (BATMON_HR=0)"
                    case three450VBATMONHR1230VBATMONHR0 = "3.450V (BATMON_HR=1) 2.30V (BATMON_HR=0)"
                    case three525VBATMONHR1235VBATMONHR0 = "3.525V (BATMON_HR=1) 2.35V (BATMON_HR=0)"
                    case three600VBATMONHR1240VBATMONHR0 = "3.600V (BATMON_HR=1) 2.40V (BATMON_HR=0)"
                    case three675VBATMONHR1245VBATMONHR0 = "3.675V (BATMON_HR=1) 2.45V (BATMON_HR=0)"
                    case RunningCLK16 = "Running, CLK/16"
                    case Int128kHzRCOscStartuptime6CK4ms = "Int. 128kHz RC Osc.; Start-up time: 6 CK + 4 ms"
                    case Int128kHzRCOscStartuptime6CK64ms = "Int. 128kHz RC Osc.; Start-up time: 6 CK + 64 ms"
                    case FullSwingOscillatorStartuptime258CK41msCeramicresfastrisingpower = "Full Swing Oscillator; Start-up time: 258 CK + 4.1 ms; Ceramic res.; fast rising power"
                    case FullSwingOscillatorStartuptime258CK65msCeramicresslowlyrisingpower = "Full Swing Oscillator; Start-up time: 258 CK + 65 ms; Ceramic res.; slowly rising power"
                    case FullSwingOscillatorStartuptime1KCK0msCeramicresBODenable = "Full Swing Oscillator; Start-up time: 1K CK + 0 ms; Ceramic res.; BOD enable"
                    case FullSwingOscillatorStartuptime1KCK41msCeramicresfastrisingpower = "Full Swing Oscillator; Start-up time: 1K CK + 4.1 ms; Ceramic res.; fast rising power"
                    case FullSwingOscillatorStartuptime1KCK65msCeramicresslowlyrisingpower = "Full Swing Oscillator; Start-up time: 1K CK + 65 ms; Ceramic res.; slowly rising power"
                    case FullSwingOscillatorStartuptime16KCK0msCrystalOscBODenabled = "Full Swing Oscillator; Start-up time: 16K CK + 0 ms; Crystal Osc.; BOD enabled"
                    case FullSwingOscillatorStartuptime16KCK41msCrystalOscfastrisingpower = "Full Swing Oscillator; Start-up time: 16K CK + 4.1 ms; Crystal Osc.; fast rising power"
                    case FullSwingOscillatorStartuptime16KCK65msCrystalOscslowlyrisingpower = "Full Swing Oscillator; Start-up time: 16K CK + 65 ms; Crystal Osc.; slowly rising power"
                    case ADCDifferentialInputsPostivepin0Negativepin010xGain = "ADC Differential Inputs Postive pin 0 Negative pin 0 10x Gain"
                    case ADCDifferentialInputsPostivepin1Negativepin010xGain = "ADC Differential Inputs Postive pin 1 Negative pin 0 10x Gain"
                    case ADCDifferentialInputsPostivepin0Negativepin0200xGain = "ADC Differential Inputs Postive pin 0 Negative pin 0 200x Gain"
                    case ADCDifferentialInputsPostivepin1Negativepin0200xGain = "ADC Differential Inputs Postive pin 1 Negative pin 0 200x Gain"
                    case ADCDifferentialInputsPostivepin2Negativepin210xGain = "ADC Differential Inputs Postive pin 2 Negative pin 2 10x Gain"
                    case ADCDifferentialInputsPostivepin3Negativepin210xGain = "ADC Differential Inputs Postive pin 3 Negative pin 2 10x Gain"
                    case ADCDifferentialInputsPostivepin2Negativepin2200xGain = "ADC Differential Inputs Postive pin 2 Negative pin 2 200x Gain"
                    case ADCDifferentialInputsPostivepin3Negativepin2200xGain = "ADC Differential Inputs Postive pin 3 Negative pin 2 200x Gain"
                    case ADCDifferentialInputsPostivepin0Negativepin11xGain = "ADC Differential Inputs Postive pin 0 Negative pin 1 1x Gain"
                    case ADCDifferentialInputsPostivepin1Negativepin11xGain = "ADC Differential Inputs Postive pin 1 Negative pin 1 1x Gain"
                    case ADCDifferentialInputsPostivepin2Negativepin11xGain = "ADC Differential Inputs Postive pin 2 Negative pin 1 1x Gain"
                    case ADCDifferentialInputsPostivepin3Negativepin11xGain = "ADC Differential Inputs Postive pin 3 Negative pin 1 1x Gain"
                    case ADCDifferentialInputsPostivepin4Negativepin11xGain = "ADC Differential Inputs Postive pin 4 Negative pin 1 1x Gain"
                    case ADCDifferentialInputsPostivepin5Negativepin11xGain = "ADC Differential Inputs Postive pin 5 Negative pin 1 1x Gain"
                    case ADCDifferentialInputsPostivepin6Negativepin11xGain = "ADC Differential Inputs Postive pin 6 Negative pin 1 1x Gain"
                    case ADCDifferentialInputsPostivepin7Negativepin11xGain = "ADC Differential Inputs Postive pin 7 Negative pin 1 1x Gain"
                    case ADCDifferentialInputsPostivepin0Negativepin21xGain = "ADC Differential Inputs Postive pin 0 Negative pin 2 1x Gain"
                    case ADCDifferentialInputsPostivepin1Negativepin21xGain = "ADC Differential Inputs Postive pin 1 Negative pin 2 1x Gain"
                    case ADCDifferentialInputsPostivepin2Negativepin21xGain = "ADC Differential Inputs Postive pin 2 Negative pin 2 1x Gain"
                    case ADCDifferentialInputsPostivepin3Negativepin21xGain = "ADC Differential Inputs Postive pin 3 Negative pin 2 1x Gain"
                    case ADCDifferentialInputsPostivepin4Negativepin21xGain = "ADC Differential Inputs Postive pin 4 Negative pin 2 1x Gain"
                    case ADCDifferentialInputsPostivepin5Negativepin21xGain = "ADC Differential Inputs Postive pin 5 Negative pin 2 1x Gain"
                    case BrownoutDetectionDisabled = "Brown-out Detection Disabled"
                    case BrownoutDetectionatVCC18V = "Brown-out Detection at VCC=1.8 V"
                    case BrownoutDetectionatVCC27V = "Brown-out Detection at VCC=2.7 V"
                    case BrownoutDetectionatVCC43V = "Brown-out Detection at VCC=4.3 V"
                    case NormalOperation = "Normal Operation"
                    case ThreeWireMode = "Three-Wire Mode"
                    case TwoWireMode = "Two-Wire Mode"
                    case TwoWireModeHeldLow = "Two-Wire Mode Held Low"
                    case SEG012 = "SEG0:12"
                    case SEG014 = "SEG0:14"
                    case SEG015 = "SEG0:15"
                    case SEG018 = "SEG0:18"
                    case SEG020 = "SEG0:20"
                    case SEG022 = "SEG0:22"
                    case SEG023 = "SEG0:23"
                    case SEG024 = "SEG0:24"
                    case ClkLCD16 = "ClkLCD/16"
                    case ClkLCD64 = "ClkLCD/64"
                    case ClkLCD128 = "ClkLCD/128"
                    case ClkLCD256 = "ClkLCD/256"
                    case ClkLCD512 = "ClkLCD/512"
                    case ClkLCD1024 = "ClkLCD/1024"
                    case ClkLCD2048 = "ClkLCD/2048"
                    case ClkLCD4096 = "ClkLCD/4096"
                    case three00us = "300us"
                    case seven0us = "70us"
                    case one50us = "150us"
                    case four50us = "450us"
                    case five75us = "575us"
                    case eight50us = "850us"
                    case one150us = "1150us"
                    case fiftyOfLCDclock = "50% of LCD clock"
                    case two60V = "2.60V"
                    case two65V = "2.65V"
                    case two70V = "2.70V"
                    case two75V = "2.75V"
                    case two80V = "2.80V"
                    case two85V = "2.85V"
                    case two90V = "2.90V"
                    case two95V = "2.95V"
                    case three00V = "3.00V"
                    case three05V = "3.05V"
                    case three10V = "3.10V"
                    case three15V = "3.15V"
                    case three20V = "3.20V"
                    case three25V = "3.25V"
                    case three30V = "3.30V"
                    case three35V = "3.35V"
                    case BootFlashsize512wordsstartaddress1FE00 = "Boot Flash size=512 words start address=$1FE00"
                    case BootFlashsize1024wordsstartaddress1FC00 = "Boot Flash size=1024 words start address=$1FC00"
                    case BootFlashsize2048wordsstartaddress1F800 = "Boot Flash size=2048 words start address=$1F800"
                    case BootFlashsize4096wordsstartaddress1F000 = "Boot Flash size=4096 words start address=$1F000"
                    case Enabled = "Enabled"
                    case fosc2orfosc4 = "fosc/2 or fosc/4"
                    case fosc8orfosc16 = "fosc/8 or fosc/16"
                    case fosc32orfosc64 = "fosc/32 or fosc/64"
                    case fosc64orfosc128 = "fosc/64 or fosc/128"
                    case ADCVoltageReferenceSelection = "ADC Voltage Reference Selection"
                    case InputChannelSelection = "Input Channel Selection"
                    case SEG026 = "SEG0:26"
                    case SEG028 = "SEG0:28"
                    case SEG030 = "SEG0:30"
                    case SEG032 = "SEG0:32"
                    case SEG034 = "SEG0:34"
                    case SEG036 = "SEG0:36"
                    case SEG038 = "SEG0:38"
                    case SEG039 = "SEG0:39"
                    case BootFlashsize256wordsBootaddress4F00 = "Boot Flash size=256 words Boot address=$4F00"
                    case BootFlashsize512wordsBootaddress4E00 = "Boot Flash size=512 words Boot address=$4E00"
                    case BootFlashsize1024wordsBootaddress4C00 = "Boot Flash size=1024 words Boot address=$4C00"
                    case BootFlashsize2048wordsBootaddress4800 = "Boot Flash size=2048 words Boot address=$4800"
                    
                    case Startuptime14CK39ms = "Start-up time: 14 CK + 3.9 ms"
                    case Startuptime14CK625ms = "Start-up time: 14 CK + 62.5 ms"
                    case fourKSlowRC1K32kHz = "4K(Slow RC) / 1K (32kHz)"
                    case eightKSlowRC2K32kHz = "8K(Slow RC) / 2K (32kHz)"
                    case sixteenKSlowRC4K32kHz = "16K(Slow RC) / 4K (32kHz)"
                    case thirtyTwoKSlowRC8K32kHz = "32K(Slow RC) / 8K (32kHz)"
                    case sixtyFourKSlowRC16K32kHz = "64K(Slow RC) / 16K (32kHz)"
                    case one28KSlowRC32K32kHz = "128K(Slow RC) / 32K (32kHz)"
                    case two56KSlowRC64K32kHz = "256K(Slow RC) / 64K (32kHz)"
                    case five12KSlowRC128K32kHz = "512K(Slow RC) / 128K (32kHz)"
                    case six1us = "61 us"
                    case one22us = "122 us"
                    case one83us = "183 us"
                    case two44us = "244 us"
                    case three05us = "305 us"
                    case three66us = "366 us"
                    case four27us = "427 us"
                    case four88us = "488 us"
                    case six10us = "610 us"
                    case seven32us = "732 us"
                    case eight54us = "854 us"
                    case nine76us = "976 us"
                    case one098us = "1098 us"
                    case one220us = "1220 us"
                    case one342us = "1342 us"
                    case one464us = "1464 us"
                    case oneMS = "1 ms"
                    case twoMS = "2 ms"
                    case fourMS = "4 ms"
                    case sixMS = "6 ms"
                    case eightMS = "8 ms"
                    case tenMS = "10 ms"
                    case one2ms = "12 ms"
                    case one4ms = "14 ms"
                    case one6ms = "16 ms"
                    case one8ms = "18 ms"
                    case two0ms = "20 ms"
                    case two2ms = "22 ms"
                    case two4ms = "24 ms"
                    case two6ms = "26 ms"
                    case two8ms = "28 ms"
                    case thirtyMS = "30 ms"
                    case zero050V = "0.050V"
                    case zero055V = "0.055V"
                    case zero060V = "0.060V"
                    case zero065V = "0.065V"
                    case zero070V = "0.070V"
                    case zero080V = "0.080V"
                    case zero090V = "0.090V"
                    case zero100V = "0.100V"
                    case zero110V = "0.110V"
                    case zero120V = "0.120V"
                    case zero130V = "0.130V"
                    case zero140V = "0.140V"
                    case zero160V = "0.160V"
                    case zero180V = "0.180V"
                    case zero200V = "0.200V"
                    case zero220V = "0.220V"
                    case zero240V = "0.240V"
                    case zero260V = "0.260V"
                    case zero280V = "0.280V"
                    case zero320V = "0.320V"
                    case zero360V = "0.360V"
                    case zero400V = "0.400V"
                    case zero440V = "0.440V"
                    case seven50ms = "750ms"
                    case one250ms = "1250ms"
                    case one500ms = "1500ms"
                    case four71V = "4.71V"
                    case five03V = "5.03V"
                    case five34V = "5.34V"
                    case five66V = "5.66V"
                    case five97V = "5.97V"
                    case six29V = "6.29V"
                    case six60V = "6.60V"
                    case six91V = "6.91V"
                    case seven23V = "7.23V"
                    case seven54V = "7.54V"
                    case seven86V = "7.86V"
                    case eight17V = "8.17V"
                    case eight49V = "8.49V"
                    case eight80V = "8.80V"
                    case nine11V = "9.11V"
                    case nine43V = "9.43V"
                    case oneTwentyFivems = "125ms"
                    case LS0x22000x1FFFUS0x20000xFFFF = "LS = 0x2200 - 0x1FFF, US = 0x2000 - 0xFFFF"
                    case LS0x22000x3FFFUS0x40000xFFFF = "LS = 0x2200 - 0x3FFF, US = 0x4000 - 0xFFFF"
                    case LS0x22000x5FFFUS0x60000xFFFF = "LS = 0x2200 - 0x5FFF, US = 0x6000 - 0xFFFF"
                    case LS0x22000x7FFFUS0x80000xFFFF = "LS = 0x2200 - 0x7FFF, US = 0x8000 - 0xFFFF"
                    case LS0x22000x9FFFUS0xA0000xFFFF = "LS = 0x2200 - 0x9FFF, US = 0xA000 - 0xFFFF"
                    case LS0x22000xBFFFUS0xC0000xFFFF = "LS = 0x2200 - 0xBFFF, US = 0xC000 - 0xFFFF"
                    case LS0x22000xDFFFUS0xE0000xFFFF = "LS = 0x2200 - 0xDFFF, US = 0xE000 - 0xFFFF"
                    case ADCSingleEndedInputpin8 = "ADC Single Ended Input pin 8"
                    case ADCSingleEndedInputpin9 = "ADC Single Ended Input pin 9"
                    case ADCSingleEndedInputpin10 = "ADC Single Ended Input pin 10"
                    case ADCSingleEndedInputpin11 = "ADC Single Ended Input pin 11"
                    case ADCSingleEndedInputpin12 = "ADC Single Ended Input pin 12"
                    case ADCSingleEndedInputpin13 = "ADC Single Ended Input pin 13"
                    case ADCSingleEndedInputpin14 = "ADC Single Ended Input pin 14"
                    case ADCSingleEndedInputpin15 = "ADC Single Ended Input pin 15"
                    case ADCDifferentialInputsPostivepin8Negativepin810xGain = "ADC Differential Inputs Postive pin 8 Negative pin 8 10x Gain"
                    case ADCDifferentialInputsPostivepin9Negativepin810xGain = "ADC Differential Inputs Postive pin 9 Negative pin 8 10x Gain"
                    case ADCDifferentialInputsPostivepin8Negativepin8200xGain = "ADC Differential Inputs Postive pin 8 Negative pin 8 200x Gain"
                    case ADCDifferentialInputsPostivepin9Negativepin8200xGain = "ADC Differential Inputs Postive pin 9 Negative pin 8 200x Gain"
                    case ADCDifferentialInputsPostivepin10Negativepin1010xGain = "ADC Differential Inputs Postive pin 10 Negative pin 10 10x Gain"
                    case ADCDifferentialInputsPostivepin11Negativepin1010xGain = "ADC Differential Inputs Postive pin 11 Negative pin 10 10x Gain"
                    case ADCDifferentialInputsPostivepin10Negativepin10200xGain = "ADC Differential Inputs Postive pin 10 Negative pin 10 200x Gain"
                    case ADCDifferentialInputsPostivepin11Negativepin10200xGain = "ADC Differential Inputs Postive pin 11 Negative pin 10 200x Gain"
                    case ADCDifferentialInputsPostivepin8Negativepin91xGain = "ADC Differential Inputs Postive pin 8 Negative pin 9 1x Gain"
                    case ADCDifferentialInputsPostivepin9Negativepin91xGain = "ADC Differential Inputs Postive pin 9 Negative pin 9 1x Gain"
                    case ADCDifferentialInputsPostivepin10Negativepin91xGain = "ADC Differential Inputs Postive pin 10 Negative pin 9 1x Gain"
                    case ADCDifferentialInputsPostivepin11Negativepin91xGain = "ADC Differential Inputs Postive pin 11 Negative pin 9 1x Gain"
                    case ADCDifferentialInputsPostivepin12Negativepin91xGain = "ADC Differential Inputs Postive pin 12 Negative pin 9 1x Gain"
                    case ADCDifferentialInputsPostivepin13Negativepin91xGain = "ADC Differential Inputs Postive pin 13 Negative pin 9 1x Gain"
                    case ADCDifferentialInputsPostivepin14Negativepin91xGain = "ADC Differential Inputs Postive pin 14 Negative pin 9 1x Gain"
                    case ADCDifferentialInputsPostivepin15Negativepin91xGain = "ADC Differential Inputs Postive pin 15 Negative pin 9 1x Gain"
                    case ADCDifferentialInputsPostivepin8Negativepin101xGain = "ADC Differential Inputs Postive pin 8 Negative pin 10 1x Gain"
                    case ADCDifferentialInputsPostivepin9Negativepin101xGain = "ADC Differential Inputs Postive pin 9 Negative pin 10 1x Gain"
                    case ADCDifferentialInputsPostivepin10Negativepin101xGain = "ADC Differential Inputs Postive pin 10 Negative pin 10 1x Gain"
                    case ADCDifferentialInputsPostivepin11Negativepin101xGain = "ADC Differential Inputs Postive pin 11 Negative pin 10 1x Gain"
                    case ADCDifferentialInputsPostivepin12Negativepin101xGain = "ADC Differential Inputs Postive pin 12 Negative pin 10 1x Gain"
                    case ADCDifferentialInputsPostivepin13Negativepin101xGain = "ADC Differential Inputs Postive pin 13 Negative pin 10 1x Gain"
                    case BootFlashsize512wordsBootstartaddress7E00 = "Boot Flash size=512 words Boot start address=$7E00"
                    case RevisionC = "Revision C"
                    case RevisionD = "Revision D"
                    case oneSixtyMHz = "16.0 MHz"
                    case HysteresisModeselect = "Hysteresis Mode select"
                    case Nohysteresis = "No hysteresis"
                    case tenmVhysteresis = "10mV hysteresis"
                    case twentyFivemVhysteresis = "25mV hysteresis"
                    case fiftymVhysteresis = "50mV hysteresis"
                    case InterruptModeselect = "Interrupt Mode select"
                    case AnyEdge = "Any Edge"
                    case NegativeEdge = "Negative Edge"
                    case PositiveEdge = "Positive Edge"
                    case LowPowerModeselect = "Low Power Mode select"
                    case Lowpowermodedisabled = "Low power mode disabled"
                    case Lowpowermodeenabled = "Low power mode enabled"
                    case NegativeInputMUXSelection = "Negative Input MUX Selection"
                    case NegativePin0 = "Negative Pin 0"
                    case NegativePin1 = "Negative Pin 1"
                    case NegativePin2 = "Negative Pin 2"
                    case DACVoltageReference = "DAC Voltage Reference"
                    case PositiveInputMUXSelection = "Positive Input MUX Selection"
                    case PositivePin0 = "Positive Pin 0"
                    case PositivePin1 = "Positive Pin 1"
                    case PositivePin2 = "Positive Pin 2"
                    case PositivePin3 = "Positive Pin 3"
                    case DutyCycleselect = "Duty Cycle select"
                    case fiftyDutycycle = "50% Duty cycle"
                    case twentyFiveDutycycle = "25% Duty cycle"
                    case ADCResolutionselect = "ADC Resolution select"
                    case tenBitmode = "10-bit mode"
                    case eightBitmode = "8-bit mode"
                    case AccumulationSamplesselect = "Accumulation Samples select"
                    case oneADCsample = "1 ADC sample"
                    case Accumulate2samples = "Accumulate 2 samples"
                    case Accumulate4samples = "Accumulate 4 samples"
                    case Accumulate8samples = "Accumulate 8 samples"
                    case Accumulate16samples = "Accumulate 16 samples"
                    case Accumulate32samples = "Accumulate 32 samples"
                    case Accumulate64samples = "Accumulate 64 samples"
                    case ClockPrescalerselect = "Clock Pre-scaler select"
                    case CLKPERdividedby2 = "CLK_PER divided by 2"
                    case CLKPERdividedby4 = "CLK_PER divided by 4"
                    case CLKPERdividedby8 = "CLK_PER divided by 8"
                    case CLKPERdividedby16 = "CLK_PER divided by 16"
                    case CLKPERdividedby32 = "CLK_PER divided by 32"
                    case CLKPERdividedby64 = "CLK_PER divided by 64"
                    case CLKPERdividedby128 = "CLK_PER divided by 128"
                    case CLKPERdividedby256 = "CLK_PER divided by 256"
                    case ReferenceSelection = "Reference Selection"
                    case Internalreference = "Internal reference"
                    case VDD = "VDD"
                    case Externalreference = "External reference"
                    case AutomaticSamplingDelayVariationselect = "Automatic Sampling Delay Variation select"
                    case TheAutomaticSamplingDelayVariationisdisabled = "The Automatic Sampling Delay Variation is disabled"
                    case TheAutomaticSamplingDelayVariationisenabled = "The Automatic Sampling Delay Variation is enabled"
                    case InitialDelaySelection = "Initial Delay Selection"
                    case Delay0CLKADCcycles = "Delay 0 CLK_ADC cycles"
                    case Delay16CLKADCcycles = "Delay 16 CLK_ADC cycles"
                    case Delay32CLKADCcycles = "Delay 32 CLK_ADC cycles"
                    case Delay64CLKADCcycles = "Delay 64 CLK_ADC cycles"
                    case Delay128CLKADCcycles = "Delay 128 CLK_ADC cycles"
                    case Delay256CLKADCcycles = "Delay 256 CLK_ADC cycles"
                    case WindowComparatorModeselect = "Window Comparator Mode select"
                    case NoWindowComparison = "No Window Comparison"
                    case BelowWindow = "Below Window"
                    case AboveWindow = "Above Window"
                    case InsideWindow = "Inside Window"
                    case OutsideWindow = "Outside Window"
                    case AnalogChannelSelectionBits = "Analog Channel Selection Bits"
                    case ADCinputpin11 = "ADC input pin 11"
                    case ADCinputpin12 = "ADC input pin 12"
                    case ADCinputpin13 = "ADC input pin 13"
                    case ADCinputpin14 = "ADC input pin 14"
                    case ADCinputpin15 = "ADC input pin 15"
                    case ACDACReference = "AC DAC Reference"
                    case Operationinactivemodeselect = "Operation in active mode select"
                    case Sampled = "Sampled"
                    case EnabledwithwakeuphalteduntilBODisready = "Enabled with wake-up halted until BOD is ready"
                    case Samplefrequencyselect = "Sample frequency select"
                    case onekHzsamplingfrequency = "1kHz sampling frequency"
                    case oneTwentyFiveHzsamplingfrequency = "125Hz sampling frequency"
                    case Operationinsleepmodeselect = "Operation in sleep mode select"
                    case Bodlevelselect = "Bod level select"
                    case onePointEightV = "1.8 V"
                    case twoPointSixV = "2.6 V"
                    case fourPointTwoV = "4.2 V"
                    case Configurationselect = "Configuration select"
                    case InterruptwhensupplygoesbelowVLMlevel = "Interrupt when supply goes below VLM level"
                    case InterruptwhensupplygoesaboveVLMlevel = "Interrupt when supply goes above VLM level"
                    case InterruptwhensupplycrossesVLMlevel = "Interrupt when supply crosses VLM level"
                    case voltagelevelmonitorlevelselect = "voltage level monitor level select"
                    case VLMthreshold5aboveBODlevel = "VLM threshold 5% above BOD level"
                    case VLMthreshold15aboveBODlevel = "VLM threshold 15% above BOD level"
                    case VLMthreshold25aboveBODlevel = "VLM threshold 25% above BOD level"
                    case InterruptModeforLUT0select = "Interrupt Mode for LUT0 select"
                    case Interruptdisabled = "Interrupt disabled"
                    case Senserisingedge = "Sense rising edge"
                    case Sensefallingedge = "Sense falling edge"
                    case Sensebothedges = "Sense both edges"
                    case InterruptModeforLUT1select = "Interrupt Mode for LUT1 select"
                    case InterruptModeforLUT2select = "Interrupt Mode for LUT2 select"
                    case InterruptModeforLUT3select = "Interrupt Mode for LUT3 select"
                    case ClockSourceSelection = "Clock Source Selection"
                    case CLKPERisclockingtheLUT = "CLK_PER is clocking the LUT"
                    case IN2isclockingtheLUT = "IN[2] is clocking the LUT"
                    case twientyMHzoscillatorbeforeprescalerisclockingtheLUT = "20MHz oscillator before prescaler is clocking the LUT"
                    case thirtyTwokHzoscillatorisclockingtheLUT = "32kHz oscillator is clocking the LUT"
                    case onekHz32kHzoscillatorafterDIV32isclockingtheLUT = "1kHz (32kHz oscillator after DIV32) is clocking the LUT"
                    case EdgeDetectionEnableselect = "Edge Detection Enable select"
                    case Edgedetectorisdisabled = "Edge detector is disabled"
                    case Edgedetectorisenabled = "Edge detector is enabled"
                    case FilterSelection = "Filter Selection"
                    case Filterdisabled = "Filter disabled"
                    case Synchronizerenabled = "Synchronizer enabled"
                    case Filterenabled = "Filter enabled"
                    case LUTInput0SourceSelection = "LUT Input 0 Source Selection"
                    case Maskedinput = "Masked input"
                    case Feedbackinputsource = "Feedback input source"
                    case LinkedLUTinputsource = "Linked LUT input source"
                    case EventinputsourceA = "Event input source A"
                    case EventinputsourceB = "Event input source B"
                    case IOpinLUTnIN0inputsource = "IO pin LUTn-IN0 input source"
                    case AC0OUTinputsource = "AC0 OUT input source"
                    case USART0TXDinputsource = "USART0 TXD input source"
                    case SPI0MOSIinputsource = "SPI0 MOSI input source"
                    case TCA0WO0inputsource = "TCA0 WO0 input source"
                    case TCB0WOinputsource = "TCB0 WO input source"
                    case LUTInput1SourceSelection = "LUT Input 1 Source Selection"
                    case IOpinLUTnN1inputsource = "IO pin LUTn-N1 input source"
                    case USART1TXDinputsource = "USART1 TXD input source"
                    case TCA0WO1inputsource = "TCA0 WO1 input source"
                    case TCB1WOinputsource = "TCB1 WO input source"
                    case LUTInput2SourceSelection = "LUT Input 2 Source Selection"
                    case IOpinLUTnIN2inputsource = "IO pin LUTn-IN2 input source"
                    case USART2TXDinputsource = "USART2 TXD input source"
                    case SPI0SCKinputsource = "SPI0 SCK input source"
                    case TCA0WO2inputsource = "TCA0 WO2 input source"
                    case TCB2WOinputsource = "TCB2 WO input source"
                    case SequentialSelection = "Sequential Selection"
                    case Sequentiallogicdisabled = "Sequential logic disabled"
                    case DFlipFlop = "D FlipFlop"
                    case JKFlipFlop = "JK FlipFlop"
                    case DLatch = "D Latch"
                    case RSLatch = "RS Latch"
                    case Clockselect = "Clock select"
                    case twentyMHzoscillator = "20MHz oscillator"
                    case thirtyTwoKHzoscillator = "32KHz oscillator"
                    case three2768kHzcrystaloscillator = "32.768kHz crystal oscillator"
                    case Externalclock = "External clock"
                    case Prescalerdivisionselect = "Prescaler division select"
                    
                    
                    case sixX = "6X"
                    case tenX = "10X"
                    case twelveX = "12X"
                    case twentyFourX = "24X"
                    case fortyEightX = "48X"
                    case Crystalstartuptimeselect = "Crystal startup time select"
                    case oneKcycles = "1k cycles"
                    case sixteenKcycles = "16k cycles"
                    case thirtyTwocycles = "32k cycles"
                    case sixtyFourKcycles = "64k cycles"
                    case CCPsignatureselect = "CCP signature select"
                    case SPMInstructionProtection = "SPM Instruction Protection"
                    case IORegisterProtection = "IO Register Protection"
                    case CRCFlashAccessModeselect = "CRC Flash Access Mode select"
                    case Prioritytoflash = "Priority to flash"
                    case CRCSourceselect = "CRC Source select"
                    case CRConentireflash = "CRC on entire flash"
                    case CRConbootandapplsectionofflash = "CRC on boot and appl section of flash"
                    case CRConbootsectionofflash = "CRC on boot section of flash"
                    case Generatorselector = "Generator selector"
                    case Off = "Off"
                    case UnifiedProgramandDebugInterface = "Unified Program and Debug Interface"
                    case RealTimeCounteroverflow = "Real Time Counter overflow"
                    case RealTimeCountercompare = "Real Time Counter compare"
                    case PeriodicInterruptTimeroutput0 = "Periodic Interrupt Timer output 0"
                    case PeriodicInterruptTimeroutput1 = "Periodic Interrupt Timer output 1"
                    case PeriodicInterruptTimeroutput2 = "Periodic Interrupt Timer output 2"
                    case PeriodicInterruptTimeroutput3 = "Periodic Interrupt Timer output 3"
                    case ConfigurableCustomLogicLUT0 = "Configurable Custom Logic LUT0"
                    case ConfigurableCustomLogicLUT1 = "Configurable Custom Logic LUT1"
                    case ConfigurableCustomLogicLUT2 = "Configurable Custom Logic LUT2"
                    case ConfigurableCustomLogicLUT3 = "Configurable Custom Logic LUT3"
                    case AnalogComparator0out = "Analog Comparator 0 out"
                    case ADC0ResultReadyEvent = "ADC 0 Result Ready Event"
                    case Port0Pin0 = "Port 0 Pin 0"
                    case Port0Pin1 = "Port 0 Pin 1"
                    case Port0Pin2 = "Port 0 Pin 2"
                    case Port0Pin3 = "Port 0 Pin 3"
                    case Port0Pin4 = "Port 0 Pin 4"
                    case Port0Pin5 = "Port 0 Pin 5"
                    case Port0Pin6 = "Port 0 Pin 6"
                    case Port0Pin7 = "Port 0 Pin 7"
                    case Port1Pin0 = "Port 1 Pin 0"
                    case Port1Pin1 = "Port 1 Pin 1"
                    case Port1Pin2 = "Port 1 Pin 2"
                    case Port1Pin3 = "Port 1 Pin 3"
                    case Port1Pin4 = "Port 1 Pin 4"
                    case Port1Pin5 = "Port 1 Pin 5"
                    case Port1Pin6 = "Port 1 Pin 6"
                    case Port1Pin7 = "Port 1 Pin 7"
                    case USART0Xclock = "USART 0 Xclock"
                    case USART1Xclock = "USART 1 Xclock"
                    case USART2Xclock = "USART 2 Xclock"
                    case USART3Xclock = "USART 3 Xclock"
                    case SPI0Sclock = "SPI 0 Sclock"
                    case TimerCounterA0overflowlowbyteunderflow = "Timer/Counter A0 overflow / low byte underflow"
                    case TimerCounterA0highbyteunderflowsplitmode = "Timer/Counter A0 high byte underflow (split mode)"
                    case TimerCounterA0compare0 = "Timer/Counter A0 compare 0"
                    case TimerCounterA0compare1 = "Timer/Counter A0 compare 1"
                    case TimerCounterA0compare2 = "Timer/Counter A0 compare 2"
                    case TimerCounterB0capture = "Timer/Counter B0 capture"
                    case TimerCounterB1capture = "Timer/Counter B1 capture"
                    case TimerCounterB2capture = "Timer/Counter B2 capture"
                    case TimerCounterB3capture = "Timer/Counter B3 capture"
                    case Softwareeventonchannelsselect = "Software event on channels select"
                    case none = ""
                    case Channelselector = "Channel selector"
                    case Connectusertoeventchannel0 = "Connect user to event channel 0"
                    case Connectusertoeventchannel1 = "Connect user to event channel 1"
                    case Connectusertoeventchannel2 = "Connect user to event channel 2"
                    case Connectusertoeventchannel3 = "Connect user to event channel 3"
                    case Connectusertoeventchannel4 = "Connect user to event channel 4"
                    case Connectusertoeventchannel5 = "Connect user to event channel 5"
                    case BODOperationinActiveModeselect = "BOD Operation in Active Mode select"
                    case BODLevelselect = "BOD Level select"
                    case BODSampleFrequencyselect = "BOD Sample Frequency select"
                    case BODOperationinSleepModeselect = "BOD Operation in Sleep Mode select"
                    case FrequencySelect = "Frequency Select"
                    case sixteenMHz = "16 MHz"
                    case TheCRCisperformedontheentireFlashbootapplicationcodeandapplicationdatasection = "The CRC is performed on the entire Flash (boot, application code and application data section)."
                    case TheCRCisperformedonthebootsectionofFlash = "The CRC is performed on the boot section of Flash"
                    case TheCRCisperformedonthebootandapplicationcodesectionofFlash = "The CRC is performed on the boot and application code section of Flash"
                    case DisableCRC = "Disable CRC."
                    case ResetPinConfigurationselect = "Reset Pin Configuration select"
                    case GPIOmode = "GPIO mode"
                    case Resetmode = "Reset mode"
                    case StartupTimeselect = "Startup Time select"
                    case ZeroMS = "0 ms"
                    case thirtyTwoMS = "32 ms"
                    case sixtyFourMS = "64 ms"
                    case WatchdogTimeoutPeriodselect = "Watchdog Timeout Period select"
                    case eightCycles8ms = "8 cycles (8ms)"
                    case sixteenCycles16ms = "16 cycles (16ms)"
                    case thirtyTwoCycles32ms = "32 cycles (32ms)"
                    case sixtyFourycles64ms = "64 cycles (64ms)"
                    case oneTwentyEightCycles0128s = "128 cycles (0.128s)"
                    case twoFiftySixycles0256s = "256 cycles (0.256s)"
                    case fiveTwelvecycles0512s = "512 cycles (0.512s)"
                    case oneKcycles10s = "1K cycles (1.0s)"
                    case twoKcycles20s = "2K cycles (2.0s)"
                    case fourKcycles41s = "4K cycles (4.1s)"
                    case eightKcycles82s = "8K cycles (8.2s)"
                    case WatchdogWindowTimeoutPeriodselect = "Watchdog Window Timeout Period select"
                    case LockBitsselect = "Lock Bits select"
                    case Readandwritelock = "Read and write lock"
                    case Nolocks = "No locks"
                    case Commandselect = "Command select"
                    case NoCommand = "No Command"
                    case Writepage = "Write page"
                    case Erasepage = "Erase page"
                    case Eraseandwritepage = "Erase and write page"
                    case Pagebufferclear = "Page buffer clear"
                    case Chiperase = "Chip erase"
                    case EEPROMerase = "EEPROM erase"
                    case WritefusePDIonly = "Write fuse (PDI only)"
                    case InputSenseConfigurationselect = "Input/Sense Configuration select"
                    case Interruptdisabledbutinputbufferenabled = "Interrupt disabled but input buffer enabled"
                    case SenseBothEdges = "Sense Both Edges"
                    case SenseRisingEdge = "Sense Rising Edge"
                    case SenseFallingEdge = "Sense Falling Edge"
                    case DigitalInputBufferdisabled = "Digital Input Buffer disabled"
                    case SenselowLevel = "Sense low Level"
                    case EventOutputAselect = "Event Output A select"
                    case EVOUTonPA2 = "EVOUT on PA2"
                    case EVOUTonPA7 = "EVOUT on PA7"
                    case EventOutputCselect = "Event Output C select"
                    case EVOUTonPC2 = "EVOUT on PC2"
                    case EventOutputDselect = "Event Output D select"
                    case EVOUTonPD2 = "EVOUT on PD2"
                    case EVOUTonPD7 = "EVOUT on PD7"
                    case EventOutputFselect = "Event Output F select"
                    case EVOUTonPF2 = "EVOUT on PF2"
                    case PortMultiplexerTCA0select = "Port Multiplexer TCA0 select"
                    case TCA0pinsonPA50 = "TCA0 pins on PA[5:0]"
                    case TCA0pinsonPB50 = "TCA0 pins on PB[5:0]"
                    case TCA0pinsonPC50 = "TCA0 pins on PC[5:0]"
                    case TCA0pinsonPD50 = "TCA0 pins on PD[5:0]"
                    case TCA0pinsonPE50 = "TCA0 pins on PE[5:0]"
                    case TCA0pinsonPF50 = "TCA0 pins on PF[5:0]"
                    case PortMultiplexerTCB0select = "Port Multiplexer TCB0 select"
                    case WOonPA2 = "WO on PA2"
                    case WOonPF4 = "WO on PF4"
                    case PortMultiplexerTCB1select = "Port Multiplexer TCB1 select"
                    case WOonPA3 = "WO on PA3"
                    case WOonPF5 = "WO on PF5"
                    case PortMultiplexerTCB2select = "Port Multiplexer TCB2 select"
                    case WOonPC0 = "WO on PC0"
                    case PortMultiplexerTCB3select = "Port Multiplexer TCB3 select"
                    case WOonPC1 = "WO on PC1"
                    case PortMultiplexerSPI0select = "Port Multiplexer SPI0 select"
                    case SPI0onPA74 = "SPI0 on PA[7:4]"
                    case SPI0onPC30 = "SPI0 on PC[3:0]"
                    case SPI0onPE30 = "SPI0 on PE[3:0]"
                    case Notconnectedtoanypins = "Not connected to any pins"
                    case PortMultiplexerTWI0select = "Port Multiplexer TWI0 select"
                    case SCLSDAonPA32ClientmodeonPC32indualTWImode = "SCL/SDA on PA[3:2], Client mode on PC[3:2] in dual TWI mode"
                    case SCLSDAonPA32ClientmodeonPF32indualTWImode = "SCL/SDA on PA[3:2], Client mode on PF[3:2] in dual TWI mode"
                    case SCLSDAonPC32ClientmodeonPF32indualTWImode = "SCL/SDA on PC[3:2], Client mode on PF[3:2] in dual TWI mode"
                    case PortMultiplexerUSART0select = "Port Multiplexer USART0 select"
                    case USART0onPA30 = "USART0 on PA[3:0]"
                    case USART0onPA74 = "USART0 on PA[7:4]"
                    case PortMultiplexerUSART1select = "Port Multiplexer USART1 select"
                    case USART1onPC30 = "USART1 on PC[3:0]"
                    case USART1onPC74 = "USART1 on PC[7:4]"
                    case PortMultiplexerUSART2select = "Port Multiplexer USART2 select"
                    case USART2onPF30 = "USART2 on PF[3:0]"
                    case USART2onPF64 = "USART2 on PF[6:4]"
                    case PortMultiplexerUSART3select = "Port Multiplexer USART3 select"
                    case USART3onPB30 = "USART3 on PB[3:0]"
                    case USART3onPB54 = "USART3 on PB[5:4]"
                    case ClockSelect = "Clock Select"
                    case Internal32kHzOSC = "Internal 32kHz OSC"
                    case Internal1kHzOSC = "Internal 1kHz OSC"
                    case thirtyTwoKHzCrystalOSC = "32KHz Crystal OSC"
                    case ExternalClock = "External Clock"
                    case PrescalingFactorselect = "Prescaling Factor select"
                    case RTCClock1 = "RTC Clock / 1"
                    case RTCClock2 = "RTC Clock / 2"
                    case RTCClock4 = "RTC Clock / 4"
                    case RTCClock8 = "RTC Clock / 8"
                    case RTCClock16 = "RTC Clock / 16"
                    case RTCClock32 = "RTC Clock / 32"
                    case RTCClock64 = "RTC Clock / 64"
                    case RTCClock128 = "RTC Clock / 128"
                    case RTCClock256 = "RTC Clock / 256"
                    case RTCClock512 = "RTC Clock / 512"
                    case RTCClock1024 = "RTC Clock / 1024"
                    case RTCClock2048 = "RTC Clock / 2048"
                    case RTCClock4096 = "RTC Clock / 4096"
                    case RTCClock8192 = "RTC Clock / 8192"
                    case RTCClock16384 = "RTC Clock / 16384"
                    case RTCClock32768 = "RTC Clock / 32768"
                    case Periodselect = "Period select"
                    case RTCClockCycles4 = "RTC Clock Cycles 4"
                    case RTCClockCycles8 = "RTC Clock Cycles 8"
                    case RTCClockCycles16 = "RTC Clock Cycles 16"
                    case RTCClockCycles32 = "RTC Clock Cycles 32"
                    case RTCClockCycles64 = "RTC Clock Cycles 64"
                    case RTCClockCycles128 = "RTC Clock Cycles 128"
                    case RTCClockCycles256 = "RTC Clock Cycles 256"
                    case RTCClockCycles512 = "RTC Clock Cycles 512"
                    case RTCClockCycles1024 = "RTC Clock Cycles 1024"
                    case RTCClockCycles2048 = "RTC Clock Cycles 2048"
                    case RTCClockCycles4096 = "RTC Clock Cycles 4096"
                    case RTCClockCycles8192 = "RTC Clock Cycles 8192"
                    case RTCClockCycles16384 = "RTC Clock Cycles 16384"
                    case RTCClockCycles32768 = "RTC Clock Cycles 32768"
                    case Sleepmodeselect = "Sleep mode select"
                    case Idlemode = "Idle mode"
                    case StandbyMode = "Standby Mode"
                    case PowerdownMode = "Power-down Mode"
                    case Prescalerselect = "Prescaler select"
                    case SystemClock4 = "System Clock / 4"
                    case SystemClock16 = "System Clock / 16"
                    case SystemClock64 = "System Clock / 64"
                    case SystemClock128 = "System Clock / 128"
                    case SPIModeselect = "SPI Mode select"
                    case SPIMode0 = "SPI Mode 0"
                    case SPIMode1 = "SPI Mode 1"
                    case SPIMode2 = "SPI Mode 2"
                    case SPIMode3 = "SPI Mode 3"
                    case ClockSelection = "Clock Selection"
                    case SystemClock = "System Clock"
                    case SystemClock2 = "System Clock / 2"
                    case SystemClock8 = "System Clock / 8"
                    case SystemClock256 = "System Clock / 256"
                    case SystemClock1024 = "System Clock / 1024"
                    case Waveformgenerationmodeselect = "Waveform generation mode select"
                    case NormalMode = "Normal Mode"
                    case FrequencyGenerationMode = "Frequency Generation Mode"
                    case SingleSlopePWM = "Single Slope PWM"
                    case DualSlopePWMoverflowonTOP = "Dual Slope PWM, overflow on TOP"
                    case DualSlopePWMoverflowonTOPandBOTTOM = "Dual Slope PWM, overflow on TOP and BOTTOM"
                    case DualSlopePWMoverflowonBOTTOM = "Dual Slope PWM, overflow on BOTTOM"
                    case ForceUpdate = "Force Update"
                    case ForceRestart = "Force Restart"
                    case ForceHardReset = "Force Hard Reset"
                    case Directionselect = "Direction select"
                    case Countup = "Count up"
                    case Countdown = "Count down"
                    case EventActionselect = "Event Action select"
                    case Countonpositiveedgeevent = "Count on positive edge event"
                    case Countonanyedgeevent = "Count on any edge event"
                    case Countonprescaledclockwhileeventlineis1 = "Count on prescaled clock while event line is 1."
                    case CountonprescaledclockEventcontrolscountdirectionUpcountwheneventlineis0downcountwheneventlineis1 = "Count on prescaled clock. Event controls count direction. Up-count when event line is 0, down-count when event line is 1."
                    case CLKPERNoPrescaling = "CLK_PER (No Prescaling)"
                    case CLKPER2FromPrescaler = "CLK_PER/2 (From Prescaler)"
                    case UseClockfromTCA = "Use Clock from TCA"
                    case TimerModeselect = "Timer Mode select"
                    case PeriodicInterrupt = "Periodic Interrupt"
                    case PeriodicTimeout = "Periodic Timeout"
                    case InputCaptureEvent = "Input Capture Event"
                    case InputCaptureFrequencymeasurement = "Input Capture Frequency measurement"
                    case InputCapturePulseWidthmeasurement = "Input Capture Pulse-Width measurement"
                    case InputCaptureFrequencyandPulseWidthmeasurement = "Input Capture Frequency and Pulse-Width measurement"
                    case SingleShot = "Single Shot"
                    case eightBitPWM = "8-bit PWM"
                    case SDAHoldTimeselect = "SDA Hold Time select"
                    case SDAholdtimeoff = "SDA hold time off"
                    case Typical50nsholdtime = "Typical 50ns hold time"
                    case Typical300nsholdtime = "Typical 300ns hold time"
                    case Typical500nsholdtime = "Typical 500ns hold time"
                    case SDASetupTimeselect = "SDA Setup Time select"
                    case SDAsetuptimeis4clockcycles = "SDA setup time is 4 clock cycles"
                    case SDAsetuptimeis8clockcycles = "SDA setup time is 8 clock cycles"
                    case InactiveBusTimeoutselect = "Inactive Bus Timeout select"
                    case BusTimeoutDisabled = "Bus Timeout Disabled"
                    case fiftyMicroseconds = "50 Microseconds"
                    case oneHundredMicroseconds = "100 Microseconds"
                    case twoHundredMicroseconds = "200 Microseconds"
                    case AcknowledgeActionselect = "Acknowledge Action select"
                    case SendACK = "Send ACK"
                    case SendNACK = "Send NACK"
                    case NoAction = "No Action"
                    case IssueRepeatedStartCondition = "Issue Repeated Start Condition"
                    case ReceiveorTransmitDatadependingonDIR = "Receive or Transmit Data, depending on DIR"
                    case IssueStopCondition = "Issue Stop Condition"
                    case BusStateselect = "Bus State select"
                    case UnknownBusState = "Unknown Bus State"
                    case BusisIdle = "Bus is Idle"
                    case ThisModuleControlsTheBus = "This Module Controls The Bus"
                    case TheBusisBusy = "The Bus is Busy"
                    case UsedToCompleteaTransaction = "Used To Complete a Transaction"
                    case UsedinResponsetoAddressDataInterrupt = "Used in Response to Address/Data Interrupt"
                    case ClientAddressorStopselect = "Client Address or Stop select"
                    case StopconditiongeneratedAPIF = "Stop condition generated APIF"
                    case AddressdetectiongeneratedAPIF = "Address detection generated APIF"
                    case RS485Modeinternaltransmitterselect = "RS485 Mode internal transmitter select"
                    case RS485Modedisabled = "RS485 Mode disabled"
                    case RS485ModeExternaldrive = "RS485 Mode External drive"
                    case RS485ModeInternaldrive = "RS485 Mode Internal drive"
                    case ReceiverModeselect = "Receiver Mode select"
                    case Normalmode = "Normal mode"
                    case CLK2xmode = "CLK2x mode"
                    case Genericautobaudmode = "Generic autobaud mode"
                    case LINconstrainedautobaudmode = "LIN constrained autobaud mode"
                    case CommunicationModeselect = "Communication Mode select"
                    case AsynchronousMode = "Asynchronous Mode"
                    case SynchronousMode = "Synchronous Mode"
                    case InfraredCommunication = "Infrared Communication"
                    case SPIHostMode = "SPI Host Mode"
                    case CharacterSizeselect = "Character Size select"
                    case Charactersize5bit = "Character size: 5 bit"
                    case Charactersize6bit = "Character size: 6 bit"
                    case Charactersize7bit = "Character size: 7 bit"
                    case Charactersize8bit = "Character size: 8 bit"
                    case Charactersize9bitreadlowbytefirst = "Character size: 9 bit read low byte first"
                    case Charactersize9bitreadhighbytefirst = "Character size: 9 bit read high byte first"
                    case ParityModeselect = "Parity Mode select"
                    case NoParity = "No Parity"
                    case EvenParity = "Even Parity"
                    case OddParity = "Odd Parity"
                    case StopBitModeselect = "Stop Bit Mode select"
                    case oneStopBit = "1 stop bit"
                    case twoStopBits = "2 stop bits"
                    case AutoBaudWindowselect = "Auto Baud Window select"
                    case eighteenTolerance = "18% tolerance"
                    case fifteenTolerance = "15% tolerance"
                    case twentyOneTolerance = "21% tolerance"
                    case twentyFiveTolerance = "25% tolerance"
                    case AC0referenceselect = "AC0 reference select"
                    case Voltagereferenceat055V = "Voltage reference at 0.55V"
                    case Voltagereferenceat11V = "Voltage reference at 1.1V"
                    case Voltagereferenceat25V = "Voltage reference at 2.5V"
                    case Voltagereferenceat434V = "Voltage reference at 4.34V"
                    case Voltagereferenceat15V = "Voltage reference at 1.5V"
                    case AVDDasVoltagereference = "AVDD as Voltage reference"
                    case ADC0referenceselect = "ADC0 reference select"
                    case Windowselect = "Window select"
                    case Connectusertoeventchannel6 = "Connect user to event channel 6"
                    case Connectusertoeventchannel7 = "Connect user to event channel 7"
                    case EventOutputBselect = "Event Output B select"
                    case EVOUTonPB2 = "EVOUT on PB2"
                    case EVOUTonPC7 = "EVOUT on PC7"
                    case EventOutputEselect = "Event Output E select"
                    case EVOUTonPE2 = "EVOUT on PE2"
                    case WOonPB4 = "WO on PB4"
                    case WOonPB5 = "WO on PB5"
                    case BootFlashsize512wordsBootstartaddressFE00 = "Boot Flash size=512 words Boot start address=$FE00"
                    case BootFlashsize1024wordsBootaddressFC00 = "Boot Flash size=1024 words Boot address=$FC00"
                    case BootFlashsize2048wordsBootaddressF800 = "Boot Flash size=2048 words Boot address=$F800"
                    case BootFlashsize4096wordsBootaddressF000 = "Boot Flash size=4096 words Boot address=$F000"
                    case AVDD = "AVDD"
                    case oneMhz = "1 Mhz"
                    case twoMhz = "2 Mhz"
                    case fourMhz = "4 Mhz"
                    case eightMhz = "8 Mhz"
                }
                
                enum Name: String, Codable {
                    case fourPointEightMHz = "4_8_MHz"
                    case ninePointSixMHz = "9_6_MHz"
                    case INTRCOSC128KHZ14CK64MS = "INTRCOSC_128KHZ_14CK_64MS"
                    case INTRCOSC128KHZ14CK4MS = "INTRCOSC_128KHZ_14CK_4MS"
                    case INTRCOSC128KHZ14CK0MS = "INTRCOSC_128KHZ_14CK_0MS"
                    case INTRCOSC9MHZ614CK64MS = "INTRCOSC_9MHZ6_14CK_64MS"
                    case INTRCOSC9MHZ614CK4MS = "INTRCOSC_9MHZ6_14CK_4MS"
                    case INTRCOSC9MHZ614CK0MS = "INTRCOSC_9MHZ6_14CK_0MS"
                    case INTRCOSC4MHZ814CK64MS = "INTRCOSC_4MHZ8_14CK_64MS"
                    case INTRCOSC4MHZ814CK4MS = "INTRCOSC_4MHZ8_14CK_4MS"
                    case INTRCOSC4MHZ814CK0MS = "INTRCOSC_4MHZ8_14CK_0MS"
                    case EXTCLK14CK64MS = "EXTCLK_14CK_64MS"
                    case EXTCLK14CK4MS = "EXTCLK_14CK_4MS"
                    case EXTCLK6CK0MS = "EXTCLK_6CK_0MS"
                    case EXTCLK6CK4MS1 = "EXTCLK_6CK_4MS1"
                    case EXTCLK6CK65MS = "EXTCLK_6CK_65MS"
                    case INTRCOSC6CK0MS = "INTRCOSC_6CK_0MS"
                    case INTRCOSC6CK4MS1 = "INTRCOSC_6CK_4MS1"
                    case INTRCOSC6CK65MS = "INTRCOSC_6CK_65MS"
                    case EXTLOFXTAL32KCK0MSINTCAP = "EXTLOFXTAL_32KCK_0MS_INTCAP"
                    case EXTLOFXTAL32KCK4MS1INTCAP = "EXTLOFXTAL_32KCK_4MS1_INTCAP"
                    case EXTLOFXTAL32KCK65MSINTCAP = "EXTLOFXTAL_32KCK_65MS_INTCAP"
                    case EXTLOFXTAL1KCK0MSINTCAP = "EXTLOFXTAL_1KCK_0MS_INTCAP"
                    case EXTLOFXTAL1KCK4MS1INTCAP = "EXTLOFXTAL_1KCK_4MS1_INTCAP"
                    case EXTLOFXTAL1KCK65MSINTCAP = "EXTLOFXTAL_1KCK_65MS_INTCAP"
                    case EXTLOFXTAL32KCK0MS = "EXTLOFXTAL_32KCK_0MS"
                    case EXTLOFXTAL32KCK4MS1 = "EXTLOFXTAL_32KCK_4MS1"
                    case EXTLOFXTAL32KCK65MS = "EXTLOFXTAL_32KCK_65MS"
                    case EXTLOFXTAL1KCK0MS = "EXTLOFXTAL_1KCK_0MS"
                    case EXTLOFXTAL1KCK4MS1 = "EXTLOFXTAL_1KCK_4MS1"
                    case EXTLOFXTAL1KCK65MS = "EXTLOFXTAL_1KCK_65MS"
                    case EXTXOSC0MHZ40MHZ9258CK4MS1 = "EXTXOSC_0MHZ4_0MHZ9_258CK_4MS1"
                    case EXTXOSC0MHZ40MHZ9258CK65MS = "EXTXOSC_0MHZ4_0MHZ9_258CK_65MS"
                    case EXTXOSC0MHZ40MHZ91KCK0MS = "EXTXOSC_0MHZ4_0MHZ9_1KCK_0MS"
                    case EXTXOSC0MHZ40MHZ91KCK4MS1 = "EXTXOSC_0MHZ4_0MHZ9_1KCK_4MS1"
                    case EXTXOSC0MHZ40MHZ91KCK65MS = "EXTXOSC_0MHZ4_0MHZ9_1KCK_65MS"
                    case EXTXOSC0MHZ93MHZ258CK4MS1 = "EXTXOSC_0MHZ9_3MHZ_258CK_4MS1"
                    case EXTXOSC0MHZ93MHZ258CK65MS = "EXTXOSC_0MHZ9_3MHZ_258CK_65MS"
                    case EXTXOSC0MHZ93MHZ1KCK0MS = "EXTXOSC_0MHZ9_3MHZ_1KCK_0MS"
                    case EXTXOSC0MHZ93MHZ1KCK4MS1 = "EXTXOSC_0MHZ9_3MHZ_1KCK_4MS1"
                    case EXTXOSC0MHZ93MHZ1KCK65MS = "EXTXOSC_0MHZ9_3MHZ_1KCK_65MS"
                    case EXTXOSC3MHZ8MHZ258CK4MS1 = "EXTXOSC_3MHZ_8MHZ_258CK_4MS1"
                    case EXTXOSC3MHZ8MHZ258CK65MS = "EXTXOSC_3MHZ_8MHZ_258CK_65MS"
                    case EXTXOSC3MHZ8MHZ1KCK0MS = "EXTXOSC_3MHZ_8MHZ_1KCK_0MS"
                    case EXTXOSC3MHZ8MHZ1KCK4MS1 = "EXTXOSC_3MHZ_8MHZ_1KCK_4MS1"
                    case EXTXOSC3MHZ8MHZ1KCK65MS = "EXTXOSC_3MHZ_8MHZ_1KCK_65MS"
                    case EXTXOSC8MHZ16MHZ258CK4MS1 = "EXTXOSC_8MHZ_16MHZ_258CK_4MS1"
                    case EXTXOSC8MHZ16MHZ258CK65MS = "EXTXOSC_8MHZ_16MHZ_258CK_65MS"
                    case EXTXOSC8MHZ16MHZ1KCK0MS = "EXTXOSC_8MHZ_16MHZ_1KCK_0MS"
                    case EXTXOSC8MHZ16MHZ1KCK4MS1 = "EXTXOSC_8MHZ_16MHZ_1KCK_4MS1"
                    case EXTXOSC8MHZ16MHZ1KCK65MS = "EXTXOSC_8MHZ_16MHZ_1KCK_65MS"
                    case five12W3E00 = "512W_3E00"
                    case one024W3C00 = "1024W_3C00"
                    case two048W3800 = "2048W_3800"
                    case four096W3000 = "4096W_3000"
                    case DISABLED = "DISABLED"
                    case fourV1 = "4V1"
                    case fourV0 = "4V0"
                    case threeV9 = "3V9"
                    case threeV8 = "3V8"
                    case twoV7 = "2V7"
                    case twoV6 = "2V6"
                    case twoV5 = "2V5"
                    case PROGVERDISABLED = "PROG_VER_DISABLED"
                    case PROGDISABLED = "PROG_DISABLED"
                    case NOLOCK = "NO_LOCK"
                    case NOLOCK2 = "NOLOCK" // Duplicate
                    case LPMSPMDISABLE = "LPM_SPM_DISABLE"
                    case LPMDISABLE = "LPM_DISABLE"
                    case SPMDISABLE = "SPM_DISABLE"
                    case FOSC4 = "FOSC_4"
                    case FOSC16 = "FOSC_16"
                    case FOSC64 = "FOSC_64"
                    case FOSC128 = "FOSC_128"
                    case FOSC2 = "FOSC_2"
                    case FOSC8 = "FOSC_8"
                    case FOSC32 = "FOSC_32"
                    case one = "1"
                    case four = "4"
                    case sixteen = "16"
                    case sixtyFour = "64"
                    case ASYNCHRONOUSOPERATION = "ASYNCHRONOUS_OPERATION"
                    case SYNCHRONOUSOPERATION = "SYNCHRONOUS_OPERATION"
                    case RESERVED = "RESERVED"
                    case ENABLEDEVENPARITY = "ENABLED_EVEN_PARITY"
                    case ENABLEDODDPARITY = "ENABLED_ODD_PARITY"
                    case oneBIT = "1_BIT"
                    case oneBIT2 = "1BIT" // Duplicate
                    case twoBIT = "2_BIT"
                    case twoBIT2 = "2BIT" // Duplicate
                    case fiveBIT = "5BIT"
                    case sixBIT = "6BIT"
                    case sevenBIT = "7BIT"
                    case LSNAUS0X11000XFFFF = "LS_N_A_US_0X1100_0XFFFF"
                    case LSXMEMSTART0X1FFFUS0X20000XFFFF = "LS_XMEMSTART_0X1FFF_US_0X2000_0XFFFF"
                    case LSXMEMSTART0X3FFFUS0X40000XFFFF = "LS_XMEMSTART_0X3FFF_US_0X4000_0XFFFF"
                    case LSXMEMSTART0X5FFFUS0X60000XFFFF = "LS_XMEMSTART_0X5FFF_US_0X6000_0XFFFF"
                    case LSXMEMSTART0X7FFFUS0X80000XFFFF = "LS_XMEMSTART_0X7FFF_US_0X8000_0XFFFF"
                    case LSXMEMSTART0X9FFFUS0XA0000XFFFF = "LS_XMEMSTART_0X9FFF_US_0XA000_0XFFFF"
                    case LSXMEMSTART0XBFFFUS0XC0000XFFFF = "LS_XMEMSTART_0XBFFF_US_0XC000_0XFFFF"
                    case LSXMEMSTART0XDFFFUS0XE0000XFFFF = "LS_XMEMSTART_0XDFFF_US_0XE000_0XFFFF"
                    case NOWAITSTATES = "NO_WAIT_STATES"
                    case WAITONECYCLEDURINGREADWRITESTROBE = "WAIT_ONE_CYCLE_DURING_READ_WRITE_STROBE"
                    case WAITTWOCYCLESDURINGREADWRITESTROBE = "WAIT_TWO_CYCLES_DURING_READ_WRITE_STROBE"
                    case WAITTWOCYCLESDURINGREADWRITEANDWAITONECYCLEBEFOREDRIVINGOUTNEWADDRESS = "WAIT_TWO_CYCLES_DURING_READ_WRITE_AND_WAIT_ONE_CYCLE_BEFORE_DRIVING_OUT_NEW_ADDRESS"
                    case two = "2"
                    case eight = "8"
                    case thirtyTwo = "32"
                    case oneTwentyEight = "128"
                    case twoFiftySix256 = "256"
                    case IDLE = "IDLE"
                    case ADC = "ADC"
                    case PDOWN = "PDOWN"
                    case PSAVE = "PSAVE"
                    case VAL0x04 = "VAL_0x04"
                    case VAL0x05 = "VAL_0x05"
                    case STDBY = "STDBY"
                    case VAL0x07 = "VAL_0x07"
                    case OscillatorCalibrationValues = "Oscillator Calibration Values"
                    case eightyMHz = "8_0_MHz"
                    case InterruptSenseControl = "Interrupt Sense Control"
                    case LOWLEVELOFINTX = "LOW_LEVEL_OF_INTX"
                    case ANYLOGICALCHANGEOFINTX = "ANY_LOGICAL_CHANGE_OF_INTX"
                    case FALLINGEDGEOFINTX = "FALLING_EDGE_OF_INTX"
                    case RISINGEDGEOFINTX = "RISING_EDGE_OF_INTX"
                    case NORMAL = "NORMAL"
                    case PWMPHASECORRECT = "PWM_PHASE_CORRECT"
                    case CTC = "CTC"
                    case FASTPWM = "FAST_PWM"
                    case NOCLOCKSOURCESTOPPED = "NO_CLOCK_SOURCE_STOPPED"
                    case RUNNINGNOPRESCALING = "RUNNING_NO_PRESCALING"
                    case RUNNINGCLK8 = "RUNNING_CLK_8"
                    case RUNNINGCLK64 = "RUNNING_CLK_64"
                    case RUNNINGCLK256 = "RUNNING_CLK_256"
                    case RUNNINGCLK1024 = "RUNNING_CLK_1024"
                    case RUNNINGEXTCLKTNFALLINGEDGE = "RUNNING_EXTCLK_TN_FALLING_EDGE"
                    case RUNNINGEXTCLKTNRISINGEDGE = "RUNNING_EXTCLK_TN_RISING_EDGE"
                    case RUNNINGCLK32 = "RUNNING_CLK_32"
                    case RUNNINGCLK128 = "RUNNING_CLK_128"
                    case OSCILLATORCYCLES16K = "OSCILLATOR_CYCLES_16K"
                    case OSCILLATORCYCLES32K = "OSCILLATOR_CYCLES_32K"
                    case OSCILLATORCYCLES64K = "OSCILLATOR_CYCLES_64K"
                    case OSCILLATORCYCLES128K = "OSCILLATOR_CYCLES_128K"
                    case OSCILLATORCYCLES256K = "OSCILLATOR_CYCLES_256K"
                    case OSCILLATORCYCLES512K = "OSCILLATOR_CYCLES_512K"
                    case OSCILLATORCYCLES1024K = "OSCILLATOR_CYCLES_1024K"
                    case OSCILLATORCYCLES2048K = "OSCILLATOR_CYCLES_2048K"
                    case AREFINTERNALVREFTURNEDOFF = "AREF_INTERNAL_VREF_TURNED_OFF"
                    case AVCCWITHEXTERNALCAPACITORATAREFPIN = "AVCC_WITH_EXTERNAL_CAPACITOR_AT_AREF_PIN"
                    case INTERNAL256VVOLTAGEREFERENCEWITHEXTERNALCAPACITORATAREFPIN = "INTERNAL_2_56V_VOLTAGE_REFERENCE_WITH_EXTERNAL_CAPACITOR_AT_AREF_PIN"
                    case FREERUNNINGMODE = "FREE_RUNNING_MODE"
                    case ANALOGCOMPARATOR = "ANALOG_COMPARATOR"
                    case EXTERNALINTERRUPTREQUEST0 = "EXTERNAL_INTERRUPT_REQUEST_0"
                    case TIMERCOUNTER0COMPAREMATCHA = "TIMER_COUNTER0_COMPARE_MATCH_A"
                    case TIMERCOUNTER0OVERFLOW = "TIMER_COUNTER0_OVERFLOW"
                    case TIMERCOUNTER1COMPAREMATCHB = "TIMER_COUNTER1_COMPARE_MATCH_B"
                    case TIMERCOUNTER1OVERFLOW = "TIMER_COUNTER1_OVERFLOW"
                    case TIMERCOUNTER1CAPTUREEVENT = "TIMER_COUNTER1_CAPTURE_EVENT"
                    case INTERRUPTONTOGGLE = "INTERRUPT_ON_TOGGLE"
                    case INTERRUPTONFALLINGEDGE = "INTERRUPT_ON_FALLING_EDGE"
                    case INTERRUPTONRISINGEDGE = "INTERRUPT_ON_RISING_EDGE"
                    case five12W7E00 = "512W_7E00"
                    case one024W7C00 = "1024W_7C00"
                    case two048W7800 = "2048W_7800"
                    case four096W7000 = "4096W_7000"
                    case EXTXOSC0MHZ40MHZ916KCK0MS = "EXTXOSC_0MHZ4_0MHZ9_16KCK_0MS"
                    case EXTXOSC0MHZ40MHZ916KCK4MS1 = "EXTXOSC_0MHZ4_0MHZ9_16KCK_4MS1"
                    case EXTXOSC0MHZ40MHZ916KCK65MS = "EXTXOSC_0MHZ4_0MHZ9_16KCK_65MS"
                    case EXTXOSC0MHZ93MHZ16KCK0MS = "EXTXOSC_0MHZ9_3MHZ_16KCK_0MS"
                    case EXTXOSC0MHZ93MHZ16KCK4MS1 = "EXTXOSC_0MHZ9_3MHZ_16KCK_4MS1"
                    case EXTXOSC0MHZ93MHZ16KCK65MS = "EXTXOSC_0MHZ9_3MHZ_16KCK_65MS"
                    case EXTXOSC3MHZ8MHZ16KCK0MS = "EXTXOSC_3MHZ_8MHZ_16KCK_0MS"
                    case EXTXOSC3MHZ8MHZ16KCK4MS1 = "EXTXOSC_3MHZ_8MHZ_16KCK_4MS1"
                    case EXTXOSC3MHZ8MHZ16KCK65MS = "EXTXOSC_3MHZ_8MHZ_16KCK_65MS"
                    case EXTXOSC8MHZXX258CK4MS1 = "EXTXOSC_8MHZ_XX_258CK_4MS1"
                    case EXTXOSC8MHZXX258CK65MS = "EXTXOSC_8MHZ_XX_258CK_65MS"
                    case EXTXOSC8MHZXX1KCK0MS = "EXTXOSC_8MHZ_XX_1KCK_0MS"
                    case EXTXOSC8MHZXX1KCK4MS1 = "EXTXOSC_8MHZ_XX_1KCK_4MS1"
                    case EXTXOSC8MHZXX1KCK65MS = "EXTXOSC_8MHZ_XX_1KCK_65MS"
                    case EXTXOSC8MHZXX16KCK0MS = "EXTXOSC_8MHZ_XX_16KCK_0MS"
                    case EXTXOSC8MHZXX16KCK4MS1 = "EXTXOSC_8MHZ_XX_16KCK_4MS1"
                    case EXTXOSC8MHZXX16KCK65MS = "EXTXOSC_8MHZ_XX_16KCK_65MS"
                    case five12WFE00 = "512W_FE00"
                    case one024WFC00 = "1024W_FC00"
                    case two048WF800 = "2048W_F800"
                    case four096WF000 = "4096W_F000"
                    case EXTCLK6CK14CK0MS = "EXTCLK_6CK_14CK_0MS"
                    case EXTCLK6CK14CK4MS1 = "EXTCLK_6CK_14CK_4MS1"
                    case EXTCLK6CK14CK65MS = "EXTCLK_6CK_14CK_65MS"
                    case INTRCOSC8MHZ6CK14CK0MS = "INTRCOSC_8MHZ_6CK_14CK_0MS"
                    case INTRCOSC8MHZ6CK14CK4MS1 = "INTRCOSC_8MHZ_6CK_14CK_4MS1"
                    case INTRCOSC8MHZ6CK14CK65MS = "INTRCOSC_8MHZ_6CK_14CK_65MS"
                    case EXTXOSC0MHZ40MHZ9258CK14CK4MS1 = "EXTXOSC_0MHZ4_0MHZ9_258CK_14CK_4MS1"
                    case EXTXOSC0MHZ40MHZ9258CK14CK65MS = "EXTXOSC_0MHZ4_0MHZ9_258CK_14CK_65MS"
                    case EXTXOSC0MHZ40MHZ91KCK14CK0MS = "EXTXOSC_0MHZ4_0MHZ9_1KCK_14CK_0MS"
                    case EXTXOSC0MHZ40MHZ91KCK14CK4MS1 = "EXTXOSC_0MHZ4_0MHZ9_1KCK_14CK_4MS1"
                    case EXTXOSC0MHZ40MHZ91KCK14CK65MS = "EXTXOSC_0MHZ4_0MHZ9_1KCK_14CK_65MS"
                    case EXTXOSC0MHZ40MHZ916KCK14CK0MS = "EXTXOSC_0MHZ4_0MHZ9_16KCK_14CK_0MS"
                    case EXTXOSC0MHZ40MHZ916KCK14CK4MS1 = "EXTXOSC_0MHZ4_0MHZ9_16KCK_14CK_4MS1"
                    case EXTXOSC0MHZ40MHZ916KCK14CK65MS = "EXTXOSC_0MHZ4_0MHZ9_16KCK_14CK_65MS"
                    case EXTXOSC0MHZ93MHZ258CK14CK4MS1 = "EXTXOSC_0MHZ9_3MHZ_258CK_14CK_4MS1"
                    case EXTXOSC0MHZ93MHZ258CK14CK65MS = "EXTXOSC_0MHZ9_3MHZ_258CK_14CK_65MS"
                    case EXTXOSC0MHZ93MHZ1KCK14CK0MS = "EXTXOSC_0MHZ9_3MHZ_1KCK_14CK_0MS"
                    case EXTXOSC0MHZ93MHZ1KCK14CK4MS1 = "EXTXOSC_0MHZ9_3MHZ_1KCK_14CK_4MS1"
                    case EXTXOSC0MHZ93MHZ1KCK14CK65MS = "EXTXOSC_0MHZ9_3MHZ_1KCK_14CK_65MS"
                    case EXTXOSC0MHZ93MHZ16KCK14CK0MS = "EXTXOSC_0MHZ9_3MHZ_16KCK_14CK_0MS"
                    case EXTXOSC0MHZ93MHZ16KCK14CK4MS1 = "EXTXOSC_0MHZ9_3MHZ_16KCK_14CK_4MS1"
                    case EXTXOSC0MHZ93MHZ16KCK14CK65MS = "EXTXOSC_0MHZ9_3MHZ_16KCK_14CK_65MS"
                    case EXTXOSC3MHZ8MHZ258CK14CK4MS1 = "EXTXOSC_3MHZ_8MHZ_258CK_14CK_4MS1"
                    case EXTXOSC3MHZ8MHZ258CK14CK65MS = "EXTXOSC_3MHZ_8MHZ_258CK_14CK_65MS"
                    case EXTXOSC3MHZ8MHZ1KCK14CK0MS = "EXTXOSC_3MHZ_8MHZ_1KCK_14CK_0MS"
                    case EXTXOSC3MHZ8MHZ1KCK14CK4MS1 = "EXTXOSC_3MHZ_8MHZ_1KCK_14CK_4MS1"
                    case EXTXOSC3MHZ8MHZ1KCK14CK65MS = "EXTXOSC_3MHZ_8MHZ_1KCK_14CK_65MS"
                    case EXTXOSC3MHZ8MHZ16KCK14CK0MS = "EXTXOSC_3MHZ_8MHZ_16KCK_14CK_0MS"
                    case EXTXOSC3MHZ8MHZ16KCK14CK4MS1 = "EXTXOSC_3MHZ_8MHZ_16KCK_14CK_4MS1"
                    case EXTXOSC3MHZ8MHZ16KCK14CK65MS = "EXTXOSC_3MHZ_8MHZ_16KCK_14CK_65MS"
                    case EXTXOSC8MHZXX258CK14CK4MS1 = "EXTXOSC_8MHZ_XX_258CK_14CK_4MS1"
                    case EXTXOSC8MHZXX258CK14CK65MS = "EXTXOSC_8MHZ_XX_258CK_14CK_65MS"
                    case EXTXOSC8MHZXX1KCK14CK0MS = "EXTXOSC_8MHZ_XX_1KCK_14CK_0MS"
                    case EXTXOSC8MHZXX1KCK14CK4MS1 = "EXTXOSC_8MHZ_XX_1KCK_14CK_4MS1"
                    case EXTXOSC8MHZXX1KCK14CK65MS = "EXTXOSC_8MHZ_XX_1KCK_14CK_65MS"
                    case EXTXOSC8MHZXX16KCK14CK0MS = "EXTXOSC_8MHZ_XX_16KCK_14CK_0MS"
                    case EXTXOSC8MHZXX16KCK14CK4MS1 = "EXTXOSC_8MHZ_XX_16KCK_14CK_4MS1"
                    case EXTXOSC8MHZXX16KCK14CK65MS = "EXTXOSC_8MHZ_XX_16KCK_14CK_65MS"
                    case PLLCLK16MHZ1KCK14CK0MS = "PLLCLK_16MHZ_1KCK_14CK_0MS"
                    case PLLCLK16MHZ1KCK14CK4MS1 = "PLLCLK_16MHZ_1KCK_14CK_4MS1"
                    case PLLCLK16MHZ1KCK14CK65MS = "PLLCLK_16MHZ_1KCK_14CK_65MS"
                    case PLLCLK16MHZ16KCK14CK0MS = "PLLCLK_16MHZ_16KCK_14CK_0MS"
                    case fourV5 = "4V5"
                    case fourV3 = "4V3"
                    case fourV4 = "4V4"
                    case fourV2 = "4V2"
                    case twoV8 = "2V8"
                    case one28W0F80 = "128W_0F80"
                    case two56W0F00 = "256W_0F00"
                    case five12W0E00 = "512W_0E00"
                    case one024W0C00 = "1024W_0C00"
                    case NOACTIONPSCINPUTISIGNORED = "NO_ACTION_PSC_INPUT_IS_IGNORED"
                    case STOPSIGNALJUMPTOOPPOSITEDEADTIMEANDWAIT = "STOP_SIGNAL_JUMP_TO_OPPOSITE_DEAD_TIME_AND_WAIT"
                    case STOPSIGNALEXECUTEOPPOSITEDEADTIMEANDWAIT = "STOP_SIGNAL_EXECUTE_OPPOSITE_DEAD_TIME_AND_WAIT"
                    case STOPSIGNALEXECUTEOPPOSITEWHILEFAULTACTIVE = "STOP_SIGNAL_EXECUTE_OPPOSITE_WHILE_FAULT_ACTIVE"
                    case DEACTIVATEOUTPUTSWITHOUTCHANGINGTIMING = "DEACTIVATE_OUTPUTS_WITHOUT_CHANGING_TIMING"
                    case STOPSIGNALANDINSERTDEADTIME = "STOP_SIGNAL_AND_INSERT_DEAD_TIME"
                    case HALTPSCANDWAITFORSOFTWAREACTION = "HALT_PSC_AND_WAIT_FOR_SOFTWARE_ACTION"
                    case EDGERETRIGGERPSC = "EDGE_RETRIGGER_PSC"
                    case FIXEDFREQUENCYEDGERETRIGGERPSC = "FIXED_FREQUENCY_EDGE_RETRIGGER_PSC"
                    case RESERVEDDONOTUSE = "RESERVED_DO_NOT_USE"
                    case FIXEDFREQUENCYEDGERETRIGGERPSCANDDISACTIVATEOUTPUT = "FIXED_FREQUENCY_EDGE_RETRIGGER_PSC_AND_DISACTIVATE_OUTPUT"
                    case NODIVIDERONPSCINPUTCLOCK = "NO_DIVIDER_ON_PSC_INPUT_CLOCK"
                    case DIVIDETHEPSCINPUTCLOCKBY4 = "DIVIDE_THE_PSC_INPUT_CLOCK_BY_4"
                    case DIVIDETHEPSCINPUTCLOCKBY16 = "DIVIDE_THE_PSC_INPUT_CLOCK_BY_16"
                    case DIVIDETHEPSCINPUTCLOCKBY64 = "DIVIDE_THE_PSC_INPUT_CLOCK_BY_64"
                    case ONERAMPMODE = "ONE_RAMP_MODE"
                    case TWORAMPMODE = "TWO_RAMP_MODE"
                    case FOURRAMPMODE = "FOUR_RAMP_MODE"
                    case CENTERALIGNEDMODE = "CENTER_ALIGNED_MODE"
                    case SENDSIGNALONLEADINGEDGEOFPSCOUTN0 = "SEND_SIGNAL_ON_LEADING_EDGE_OF_PSCOUTN0"
                    case SENDSIGNALONTRAILINGEDGEOFPSCOUTN0 = "SEND_SIGNAL_ON_TRAILING_EDGE_OF_PSCOUTN0"
                    case SENDSIGNALONLEADINGEDGEOFPSCOUTN1 = "SEND_SIGNAL_ON_LEADING_EDGE_OF_PSCOUTN1"
                    case SENDSIGNALONTRAILINGEDGEOFPSCOUTN1 = "SEND_SIGNAL_ON_TRAILING_EDGE_OF_PSCOUTN1"
                    case three = "3"
                    case VAL0x03 = "VAL_0x03"
                    case OSCILLATORCYCLES2K = "OSCILLATOR_CYCLES_2K"
                    case OSCILLATORCYCLES4K = "OSCILLATOR_CYCLES_4K"
                    case OSCILLATORCYCLES8K = "OSCILLATOR_CYCLES_8K"
                    case PLLCLKPLLINEXTCLK6KCK14CK0MS = "PLLCLK_PLLIN_EXTCLK_6KCK_14CK_0MS"
                    case PLLCLKPLLINEXTCLK6KCK14CK4MS = "PLLCLK_PLLIN_EXTCLK_6KCK_14CK_4MS"
                    case PLLCLKPLLINEXTCLK6KCK14CK64MS = "PLLCLK_PLLIN_EXTCLK_6KCK_14CK_64MS"
                    case PLLCLKPLLINEXTXOSC1KCK14CK0MS = "PLLCLK_PLLIN_EXTXOSC_1KCK_14CK_0MS"
                    case PLLCLKPLLINEXTXOSC1KCK14CK4MS = "PLLCLK_PLLIN_EXTXOSC_1KCK_14CK_4MS"
                    case PLLCLKPLLINEXTXOSC16KCK14CK4MS = "PLLCLK_PLLIN_EXTXOSC_16KCK_14CK_4MS"
                    case PLLCLKPLLINEXTXOSC16KCK14CK64MS = "PLLCLK_PLLIN_EXTXOSC_16KCK_14CK_64MS"
                    case EXTXOSCPLLINEXTXOSC1KCK14CK0MS = "EXTXOSC_PLLIN_EXTXOSC_1KCK_14CK_0MS"
                    case EXTXOSCPLLINEXTXOSC1KCK14CK4MS = "EXTXOSC_PLLIN_EXTXOSC_1KCK_14CK_4MS"
                    case EXTXOSCPLLINEXTXOSC16KCK14CK4MS = "EXTXOSC_PLLIN_EXTXOSC_16KCK_14CK_4MS"
                    case EXTXOSCPLLINEXTXOSC16KCK14CK64MS = "EXTXOSC_PLLIN_EXTXOSC_16KCK_14CK_64MS"
                    case fiveBIT2 = "5_BIT"
                    case sixBIT2 = "6_BIT"
                    case sevenBIT2 = "7_BIT"
                    case eightBIT = "8_BIT"
                    case eightBIT2 = "8BIT" // Duplicate
                    case nineBIT = "9_BIT"
                    case one3BIT = "13_BIT"
                    case one4BIT = "14_BIT"
                    case one5BIT = "15_BIT"
                    case one6BIT = "16_BIT"
                    case one7BIT = "17_BIT"
                    case one6OR17 = "16_OR_17"
                    case ANALOGCOMPARATOR0 = "ANALOG_COMPARATOR_0"
                    case ANALOGCOMPARATOR1 = "ANALOG_COMPARATOR_1"
                    case EXTCLKPLLINRC8MHZ6CK14CK0MS = "EXTCLK_PLLIN_RC_8MHZ_6CK_14CK_0MS"
                    case EXTCLKPLLINRC8MHZ6CK14CK4MS1 = "EXTCLK_PLLIN_RC_8MHZ_6CK_14CK_4MS1"
                    case EXTCLKPLLINRC8MHZ6CK14CK65MS = "EXTCLK_PLLIN_RC_8MHZ_6CK_14CK_65MS"
                    case RC8MHZPLLINRC8MHZ6CK14CK0MS = "RC_8MHZ_PLLIN_RC_8MHZ_6CK_14CK_0MS"
                    case RC8MHZPLLINRC8MHZ6CK14CK4MS1 = "RC_8MHZ_PLLIN_RC_8MHZ_6CK_14CK_4MS1"
                    case RC8MHZPLLINRC8MHZ6CK14CK65MS = "RC_8MHZ_PLLIN_RC_8MHZ_6CK_14CK_65MS"
                    case XOSCPLLINRC8MHZ258CK14CK4MS1 = "XOSC_PLLIN_RC_8MHZ_258CK_14CK_4MS1"
                    case XOSCPLLINRC8MHZ258CK14CK65MS = "XOSC_PLLIN_RC_8MHZ_258CK_14CK_65MS"
                    case XOSCPLLINRC8MHZ1KCK14CK0MS = "XOSC_PLLIN_RC_8MHZ_1KCK_14CK_0MS"
                    case XOSCPLLINRC8MHZ1KCK14CK4MS1 = "XOSC_PLLIN_RC_8MHZ_1KCK_14CK_4MS1"
                    case XOSCPLLINRC8MHZ1KCK14CK65MS = "XOSC_PLLIN_RC_8MHZ_1KCK_14CK_65MS"
                    case XOSCPLLINRC8MHZ16KCK14CK0MS = "XOSC_PLLIN_RC_8MHZ_16KCK_14CK_0MS"
                    case XOSCPLLINRC8MHZ16KCK14CK4MS1 = "XOSC_PLLIN_RC_8MHZ_16KCK_14CK_4MS1"
                    case XOSCPLLINRC8MHZ16KCK14CK65MS = "XOSC_PLLIN_RC_8MHZ_16KCK_14CK_65MS"
                    case XOSC3MHZ8MHZPLLINRC8MHZ258CK14CK4MS1 = "XOSC_3MHZ_8MHZ_PLLIN_RC_8MHZ_258CK_14CK_4MS1"
                    case XOSC3MHZ8MHZPLLINRC8MHZ258CK14CK65MS = "XOSC_3MHZ_8MHZ_PLLIN_RC_8MHZ_258CK_14CK_65MS"
                    case XOSC3MHZ8MHZPLLINRC8MHZ1KCK14CK0MS = "XOSC_3MHZ_8MHZ_PLLIN_RC_8MHZ_1KCK_14CK_0MS"
                    case XOSC3MHZ8MHZPLLINRC8MHZ1KCK14CK4MS1 = "XOSC_3MHZ_8MHZ_PLLIN_RC_8MHZ_1KCK_14CK_4MS1"
                    case XOSC3MHZ8MHZPLLINRC8MHZ1KCK14CK65MS = "XOSC_3MHZ_8MHZ_PLLIN_RC_8MHZ_1KCK_14CK_65MS"
                    case XOSC3MHZ8MHZPLLINRC8MHZ16KCK14CK0MS = "XOSC_3MHZ_8MHZ_PLLIN_RC_8MHZ_16KCK_14CK_0MS"
                    case XOSC3MHZ8MHZPLLINRC8MHZ16KCK14CK4MS1 = "XOSC_3MHZ_8MHZ_PLLIN_RC_8MHZ_16KCK_14CK_4MS1"
                    case XOSC3MHZ8MHZPLLINRC8MHZ16KCK14CK65MS = "XOSC_3MHZ_8MHZ_PLLIN_RC_8MHZ_16KCK_14CK_65MS"
                    case XOSC3MHZ8MHZPLLINXOSC258CK14CK4MS1 = "XOSC_3MHZ_8MHZ_PLLIN_XOSC_258CK_14CK_4MS1"
                    case XOSC3MHZ8MHZPLLINXOSC258CK14CK65MS = "XOSC_3MHZ_8MHZ_PLLIN_XOSC_258CK_14CK_65MS"
                    case XOSC3MHZ8MHZPLLINXOSC1KCK14CK0MS = "XOSC_3MHZ_8MHZ_PLLIN_XOSC_1KCK_14CK_0MS"
                    case XOSC3MHZ8MHZPLLINXOSC1KCK14CK4MS1 = "XOSC_3MHZ_8MHZ_PLLIN_XOSC_1KCK_14CK_4MS1"
                    case XOSC3MHZ8MHZPLLINXOSC1KCK14CK65MS = "XOSC_3MHZ_8MHZ_PLLIN_XOSC_1KCK_14CK_65MS"
                    case XOSC3MHZ8MHZPLLINXOSC16KCK14CK0MS = "XOSC_3MHZ_8MHZ_PLLIN_XOSC_16KCK_14CK_0MS"
                    case XOSC3MHZ8MHZPLLINXOSC16KCK14CK4MS1 = "XOSC_3MHZ_8MHZ_PLLIN_XOSC_16KCK_14CK_4MS1"
                    case XOSC3MHZ8MHZPLLINXOSC16KCK14CK65MS = "XOSC_3MHZ_8MHZ_PLLIN_XOSC_16KCK_14CK_65MS"
                    case XOSC8MHZ16MHZPLLINRC8MHZ258CK14CK4MS1 = "XOSC_8MHZ_16MHZ_PLLIN_RC_8MHZ_258CK_14CK_4MS1"
                    case XOSC8MHZ16MHZPLLINRC8MHZ258CK14CK65MS = "XOSC_8MHZ_16MHZ_PLLIN_RC_8MHZ_258CK_14CK_65MS"
                    case XOSC8MHZ16MHZPLLINRC8MHZ1KCK14CK0MS = "XOSC_8MHZ_16MHZ_PLLIN_RC_8MHZ_1KCK_14CK_0MS"
                    case XOSC8MHZ16MHZPLLINRC8MHZ1KCK14CK4MS1 = "XOSC_8MHZ_16MHZ_PLLIN_RC_8MHZ_1KCK_14CK_4MS1"
                    case XOSC8MHZ16MHZPLLINRC8MHZ1KCK14CK65MS = "XOSC_8MHZ_16MHZ_PLLIN_RC_8MHZ_1KCK_14CK_65MS"
                    case XOSC8MHZ16MHZPLLINRC8MHZ16KCK14CK0MS = "XOSC_8MHZ_16MHZ_PLLIN_RC_8MHZ_16KCK_14CK_0MS"
                    case XOSC8MHZ16MHZPLLINRC8MHZ16KCK14CK4MS1 = "XOSC_8MHZ_16MHZ_PLLIN_RC_8MHZ_16KCK_14CK_4MS1"
                    case XOSC8MHZ16MHZPLLINRC8MHZ16KCK14CK65MS = "XOSC_8MHZ_16MHZ_PLLIN_RC_8MHZ_16KCK_14CK_65MS"
                    case WDOSC128KHZ1KCK14CK0MS = "WDOSC_128KHZ_1KCK_14CK_0MS"
                    case WDOSC128KHZ1KCK14CK4MS1 = "WDOSC_128KHZ_1KCK_14CK_4MS1"
                    case WDOSC128KHZ1KCK14CK65MS = "WDOSC_128KHZ_1KCK_14CK_65MS"
                    case WDOSC128KHZ16KCK14CK0MS = "WDOSC_128KHZ_16KCK_14CK_0MS"
                    case PLLCLKDIV4PLLINRC8MHZ1KCK14CK0MS = "PLLCLK_DIV4_PLLIN_RC_8MHZ_1KCK_14CK_0MS"
                    case PLLCLKDIV4PLLINRC8MHZ1KCK14CK4MS = "PLLCLK_DIV4_PLLIN_RC_8MHZ_1KCK_14CK_4MS"
                    case PLLCLKDIV4PLLINRC8MHZ1KCK14CK64MS = "PLLCLK_DIV4_PLLIN_RC_8MHZ_1KCK_14CK_64MS"
                    case PLLCLKDIV4PLLINEXTCLK16KCK14CK0MS = "PLLCLK_DIV4_PLLIN_EXTCLK_16KCK_14CK_0MS"
                    case PLLCLKDIV4PLLINEXTCLK16KCK14CK4MS = "PLLCLK_DIV4_PLLIN_EXTCLK_16KCK_14CK_4MS"
                    case PLLCLKDIV4PLLINEXTCLK16KCK14CK64MS = "PLLCLK_DIV4_PLLIN_EXTCLK_16KCK_14CK_64MS"
                    case PLLCLKDIV4PLLINXOSC1KCK14CK0MS = "PLLCLK_DIV4_PLLIN_XOSC_1KCK_14CK_0MS"
                    case PLLCLKDIV4PLLINXOSC1KCK14CK4MS = "PLLCLK_DIV4_PLLIN_XOSC_1KCK_14CK_4MS"
                    case PLLCLKDIV4PLLINXOSC1KCK14CK64MS = "PLLCLK_DIV4_PLLIN_XOSC_1KCK_14CK_64MS"
                    case PLLCLKDIV4PLLINXOSC16KCK14CK0MS = "PLLCLK_DIV4_PLLIN_XOSC_16KCK_14CK_0MS"
                    case RC1MHZ1KCK14CK0MS = "RC_1MHZ_1KCK_14CK_0MS"
                    case RC1MHZ1KCK14CK4MS1 = "RC_1MHZ_1KCK_14CK_4MS1"
                    case RC1MHZ1KCK14CK65MS = "RC_1MHZ_1KCK_14CK_65MS"
                    case oneV8 = "1V8"
                    case twoV3 = "2V3"
                    case twoV2 = "2V2"
                    case oneV9 = "1V9"
                    case twoV0 = "2V0"
                    case PSC0ASYEVENT = "PSC0ASY_EVENT"
                    case PSC1ASYEVENT = "PSC1ASY_EVENT"
                    case PSC2ASYEVENT = "PSC2ASY_EVENT"
                    case ANALOGCOMPARATOR2 = "ANALOG_COMPARATOR_2"
                    case two0MHz = "2_0_MHz"
                    case two56W1F00 = "256W_1F00"
                    case five12W1E00 = "512W_1E00"
                    case one024W1C00 = "1024W_1C00"
                    case two048W1800 = "2048W_1800"
                    case twoV9 = "2V9"
                    case threeV0 = "3V0"
                    case threeV5 = "3V5"
                    case threeV6 = "3V6"
                    case ERASEANDWRITEINONEOPERATION = "ERASE_AND_WRITE_IN_ONE_OPERATION"
                    case ERASEONLY = "ERASE_ONLY"
                    case WRITEONLY = "WRITE_ONLY"
                    case CLOCK4 = "CLOCK_4"
                    case CLOCK8 = "CLOCK_8"
                    case VAL0x01 = "VAL_0x01"
                    case ESTDBY = "ESTDBY"
                    case five12W7F00 = "512W_7F00"
                    case one024W7E00 = "1024W_7E00"
                    case two408W7C00 = "2408W_7C00"
                    case four096W7800 = "4096W_7800"
                    case twoV4 = "2V4"
                    case threeV4 = "3V4"
                    case LS0X21000X1FFFUS0X20000XFFFF = "LS_0X2100_0X1FFF_US_0X2000_0XFFFF"
                    case LS0X21000X3FFFUS0X40000XFFFF = "LS_0X2100_0X3FFF_US_0X4000_0XFFFF"
                    case LS0X21000X5FFFUS0X60000XFFFF = "LS_0X2100_0X5FFF_US_0X6000_0XFFFF"
                    case LS0X21000X7FFFUS0X80000XFFFF = "LS_0X2100_0X7FFF_US_0X8000_0XFFFF"
                    case LS0X21000X9FFFUS0XA0000XFFFF = "LS_0X2100_0X9FFF_US_0XA000_0XFFFF"
                    case LS0X21000XBFFFUS0XC0000XFFFF = "LS_0X2100_0XBFFF_US_0XC000_0XFFFF"
                    case LS0X21000XDFFFUS0XE0000XFFFF = "LS_0X2100_0XDFFF_US_0XE000_0XFFFF"
                    case NONE = "NONE"
                    case PX7 = "PX7"
                    case PX7PX6 = "PX7_PX6"
                    case PX7PX5 = "PX7_PX5"
                    case PX7PX4 = "PX7_PX4"
                    case PX7PX3 = "PX7_PX3"
                    case PX7PX2 = "PX7_PX2"
                    case FULLPORTX = "FULL_PORT_X"
                    case ASYNCHRONOUSUSART = "ASYNCHRONOUS_USART"
                    case SYNCHRONOUSUSART = "SYNCHRONOUS_USART"
                    case MASTERSPI = "MASTER_SPI"
                    case EXTCLK6CK4MS = "EXTCLK_6CK_4MS"
                    case EXTCLK6CK64MS = "EXTCLK_6CK_64MS"
                    case INTRCOSC1MHZ6CK0MS = "INTRCOSC_1MHZ_6CK_0MS"
                    case INTRCOSC1MHZ6CK4MS = "INTRCOSC_1MHZ_6CK_4MS"
                    case INTRCOSC1MHZ6CK64MSDEFAULT = "INTRCOSC_1MHZ_6CK_64MS_DEFAULT"
                    case INTRCOSC2MHZ6CK0MS = "INTRCOSC_2MHZ_6CK_0MS"
                    case INTRCOSC2MHZ6CK4MS = "INTRCOSC_2MHZ_6CK_4MS"
                    case INTRCOSC2MHZ6CK64MS = "INTRCOSC_2MHZ_6CK_64MS"
                    case INTRCOSC4MHZ6CK0MS = "INTRCOSC_4MHZ_6CK_0MS"
                    case INTRCOSC4MHZ6CK4MS = "INTRCOSC_4MHZ_6CK_4MS"
                    case INTRCOSC4MHZ6CK64MS = "INTRCOSC_4MHZ_6CK_64MS"
                    case INTRCOSC8MHZ6CK0MS = "INTRCOSC_8MHZ_6CK_0MS"
                    case INTRCOSC8MHZ6CK4MS = "INTRCOSC_8MHZ_6CK_4MS"
                    case INTRCOSC8MHZ6CK64MS = "INTRCOSC_8MHZ_6CK_64MS"
                    case EXTRCOSCXX0MHZ918CK0MS = "EXTRCOSC_XX_0MHZ9_18CK_0MS"
                    case EXTRCOSCXX0MHZ918CK4MS = "EXTRCOSC_XX_0MHZ9_18CK_4MS"
                    case EXTRCOSCXX0MHZ918CK64MS = "EXTRCOSC_XX_0MHZ9_18CK_64MS"
                    case EXTRCOSCXX0MHZ96CK4MS = "EXTRCOSC_XX_0MHZ9_6CK_4MS"
                    case EXTRCOSC0MHZ93MHZ18CK0MS = "EXTRCOSC_0MHZ9_3MHZ_18CK_0MS"
                    case EXTRCOSC0MHZ93MHZ18CK4MS = "EXTRCOSC_0MHZ9_3MHZ_18CK_4MS"
                    case EXTRCOSC0MHZ93MHZ18CK64MS = "EXTRCOSC_0MHZ9_3MHZ_18CK_64MS"
                    case EXTRCOSC0MHZ93MHZ6CK4MS = "EXTRCOSC_0MHZ9_3MHZ_6CK_4MS"
                    case EXTRCOSC3MHZ8MHZ18CK0MS = "EXTRCOSC_3MHZ_8MHZ_18CK_0MS"
                    case EXTRCOSC3MHZ8MHZ18CK4MS = "EXTRCOSC_3MHZ_8MHZ_18CK_4MS"
                    case EXTRCOSC3MHZ8MHZ18CK64MS = "EXTRCOSC_3MHZ_8MHZ_18CK_64MS"
                    case EXTRCOSC3MHZ8MHZ6CK4MS = "EXTRCOSC_3MHZ_8MHZ_6CK_4MS"
                    case EXTRCOSC8MHZ12MHZ18CK0MS = "EXTRCOSC_8MHZ_12MHZ_18CK_0MS"
                    case EXTRCOSC8MHZ12MHZ18CK4MS = "EXTRCOSC_8MHZ_12MHZ_18CK_4MS"
                    case EXTRCOSC8MHZ12MHZ18CK64MS = "EXTRCOSC_8MHZ_12MHZ_18CK_64MS"
                    case EXTRCOSC8MHZ12MHZ6CK4MS = "EXTRCOSC_8MHZ_12MHZ_6CK_4MS"
                    case EXTLOFXTAL1KCK4MS = "EXTLOFXTAL_1KCK_4MS"
                    case EXTLOFXTAL1KCK64MS = "EXTLOFXTAL_1KCK_64MS"
                    case EXTLOFXTAL32KCK64MS = "EXTLOFXTAL_32KCK_64MS"
                    case EXTLOFXTALRES258CK4MS = "EXTLOFXTALRES_258CK_4MS"
                    case EXTLOFXTALRES258CK64MS = "EXTLOFXTALRES_258CK_64MS"
                    case EXTLOFXTALRES1KCK0MS = "EXTLOFXTALRES_1KCK_0MS"
                    case EXTLOFXTALRES1KCK4MS = "EXTLOFXTALRES_1KCK_4MS"
                    case EXTLOFXTALRES1KCK64MS = "EXTLOFXTALRES_1KCK_64MS"
                    case EXTLOFXTALRES16KCK0MS = "EXTLOFXTALRES_16KCK_0MS"
                    case EXTLOFXTALRES16KCK4MS = "EXTLOFXTALRES_16KCK_4MS"
                    case EXTLOFXTALRES16KCK64MS = "EXTLOFXTALRES_16KCK_64MS"
                    case EXTMEDFXTALRES258CK4MS = "EXTMEDFXTALRES_258CK_4MS"
                    case EXTMEDFXTALRES258CK64MS = "EXTMEDFXTALRES_258CK_64MS"
                    case EXTMEDFXTALRES1KCK0MS = "EXTMEDFXTALRES_1KCK_0MS"
                    case EXTMEDFXTALRES1KCK4MS = "EXTMEDFXTALRES_1KCK_4MS"
                    case EXTMEDFXTALRES1KCK64MS = "EXTMEDFXTALRES_1KCK_64MS"
                    case EXTMEDFXTALRES16KCK0MS = "EXTMEDFXTALRES_16KCK_0MS"
                    case EXTMEDFXTALRES16KCK4MS = "EXTMEDFXTALRES_16KCK_4MS"
                    case EXTMEDFXTALRES16KCK64MS = "EXTMEDFXTALRES_16KCK_64MS"
                    case EXTHIFXTALRES258CK4MS = "EXTHIFXTALRES_258CK_4MS"
                    case EXTHIFXTALRES258CK64MS = "EXTHIFXTALRES_258CK_64MS"
                    case EXTHIFXTALRES1KCK0MS = "EXTHIFXTALRES_1KCK_0MS"
                    case EXTHIFXTALRES1KCK4MS = "EXTHIFXTALRES_1KCK_4MS"
                    case EXTHIFXTALRES1KCK64MS = "EXTHIFXTALRES_1KCK_64MS"
                    case EXTHIFXTALRES16KCK0MS = "EXTHIFXTALRES_16KCK_0MS"
                    case EXTHIFXTALRES16KCK4MS = "EXTHIFXTALRES_16KCK_4MS"
                    case EXTHIFXTALRES16KCK64MS = "EXTHIFXTALRES_16KCK_64MS"
                    case ANYLOGICALCHANGEININTX = "ANY_LOGICAL_CHANGE_IN_INTX"
                    case tenMHz = "1_0_MHz"
                    case fortyMHz = "4_0_MHz"
                    case sixCK14CK4MS = "6CK_14CK_4MS"
                    case sixCK14CK8MS = "6CK_14CK_8MS"
                    case sixCK14CK16MS = "6CK_14CK_16MS"
                    case sixCK14CK32MS = "6CK_14CK_32MS"
                    case sixCK14CK64MS = "6CK_14CK_64MS"
                    case sixCK14CK128MS = "6CK_14CK_128MS"
                    case sixCK14CK256MS = "6CK_14CK_256MS"
                    case sixCK14CK512MS = "6CK_14CK_512MS"
                    case VAL0x02 = "VAL_0x02"
                    case POFF = "POFF"
                    case VAL0x06 = "VAL_0x06"
                    case two56WF00 = "256W_F00"
                    case five12WE00 = "512W_E00"
                    case one024WC00 = "1024W_C00"
                    case two048W800 = "2048W_800"
                    case AIN1 = "AIN1"
                    case AIN2 = "AIN2"
                    case AIN3 = "AIN3"
                    case AIN4 = "AIN4"
                    case AIN5 = "AIN5"
                    case AIN6 = "AIN6"
                    case INTRCOSC1MHZ6CK64MS = "INTRCOSC_1MHZ_6CK_64MS"
                    case one28W1F80 = "128W_1F80"
                    case one4CK4MS = "14CK_4MS"
                    case one4CK8MS = "14CK_8MS"
                    case one4CK16MS = "14CK_16MS"
                    case one4CK32MS = "14CK_32MS"
                    case one4CK64MS = "14CK_64MS"
                    case one4CK128MS = "14CK_128MS"
                    case one4CK256MS = "14CK_256MS"
                    case one4CK512MS = "14CK_512MS"
                    case DEFAULT = "DEFAULT"
                    case two50MS = "250MS"
                    case five00MS = "500MS"
                    case one000MS = "1000MS"
                    case two000MS = "2000MS"
                    case AVCCREFERENCE = "AVCC_REFERENCE"
                    case INTERNAL256VVOLTAGEREFERENCE = "INTERNAL_2_56V_VOLTAGE_REFERENCE"
                    case AnalogChannelSelectionBitsselect = "Analog Channel Selection Bits select"
                    case ADC0 = "ADC0"
                    case ADC1 = "ADC1"
                    case ADC2 = "ADC2"
                    case ADC3 = "ADC3"
                    case ADC4 = "ADC4"
                    case ADC5 = "ADC5"
                    case ADC6 = "ADC6"
                    case ADC7 = "ADC7"
                    case ADC8 = "ADC8"
                    case ADC9 = "ADC9"
                    case ADC10 = "ADC10"
                    case TEMPSENSE = "TEMPSENSE"
                    case VCC4 = "VCC4"
                    case ISRC = "ISRC"
                    case AMP0 = "AMP0"
                    case AMP1 = "AMP1"
                    case AMP2 = "AMP2"
                    case BNDGAP = "BNDGAP"
                    case GND = "GND"
                    case DEFAULTVALUEOFZPOINTERMSBS = "DEFAULT_VALUE_OF_Z_POINTER_MSB_S"
                    case two56W3F00 = "256W_3F00"
                    case TIMERCOUNTER4OVERFLOW = "TIMER_COUNTER4_OVERFLOW"
                    case TIMERCOUNTER4COMPAREMATCHA = "TIMER_COUNTER4_COMPARE_MATCH_A"
                    case TIMERCOUNTER4COMPAREMATCHB = "TIMER_COUNTER4_COMPARE_MATCH_B"
                    case TIMERCOUNTER4COMPAREMATCHD = "TIMER_COUNTER4_COMPARE_MATCH_D"
                    case INTRCOSC8MHZ6CK14CK65MSDEFAULT = "INTRCOSC_8MHZ_6CK_14CK_65MS_DEFAULT"
                    case INTRCOSC128KHZ6CK14CK0MS = "INTRCOSC_128KHZ_6CK_14CK_0MS"
                    case INTRCOSC128KHZ6CK14CK4MS1 = "INTRCOSC_128KHZ_6CK_14CK_4MS1"
                    case INTRCOSC128KHZ6CK14CK65MS = "INTRCOSC_128KHZ_6CK_14CK_65MS"
                    case EXTLOFXTAL1KCK14CK0MS = "EXTLOFXTAL_1KCK_14CK_0MS"
                    case EXTLOFXTAL1KCK14CK4MS1 = "EXTLOFXTAL_1KCK_14CK_4MS1"
                    case EXTLOFXTAL1KCK14CK65MS = "EXTLOFXTAL_1KCK_14CK_65MS"
                    case EXTLOFXTAL32KCK14CK0MS = "EXTLOFXTAL_32KCK_14CK_0MS"
                    case EXTLOFXTAL32KCK14CK4MS1 = "EXTLOFXTAL_32KCK_14CK_4MS1"
                    case EXTLOFXTAL32KCK14CK65MS = "EXTLOFXTAL_32KCK_14CK_65MS"
                    case EXTFSXTAL258CK14CK4MS1 = "EXTFSXTAL_258CK_14CK_4MS1"
                    case EXTFSXTAL258CK14CK65MS = "EXTFSXTAL_258CK_14CK_65MS"
                    case EXTFSXTAL1KCK14CK0MS = "EXTFSXTAL_1KCK_14CK_0MS"
                    case EXTFSXTAL1KCK14CK4MS1 = "EXTFSXTAL_1KCK_14CK_4MS1"
                    case EXTFSXTAL1KCK14CK65MS = "EXTFSXTAL_1KCK_14CK_65MS"
                    case EXTFSXTAL16KCK14CK0MS = "EXTFSXTAL_16KCK_14CK_0MS"
                    case EXTFSXTAL16KCK14CK4MS1 = "EXTFSXTAL_16KCK_14CK_4MS1"
                    case EXTFSXTAL16KCK14CK65MS = "EXTFSXTAL_16KCK_14CK_65MS"
                    case INTERNAL11VVOLTAGEREFERENCEWITHEXTERNALCAPACITORATAREFPIN = "INTERNAL_1_1V_VOLTAGE_REFERENCE_WITH_EXTERNAL_CAPACITOR_AT_AREF_PIN"
                    case ADCVBG = "ADC_VBG"
                    case ADCGND = "ADC_GND"
                    case TEMPSENS = "TEMPSENS"
                    case LS0X11000X1FFFUS0X20000XFFFF = "LS_0X1100_0X1FFF_US_0X2000_0XFFFF"
                    case LS0X11000X3FFFUS0X40000XFFFF = "LS_0X1100_0X3FFF_US_0X4000_0XFFFF"
                    case LS0X11000X5FFFUS0X60000XFFFF = "LS_0X1100_0X5FFF_US_0X6000_0XFFFF"
                    case LS0X11000X7FFFUS0X80000XFFFF = "LS_0X1100_0X7FFF_US_0X8000_0XFFFF"
                    case LS0X11000X9FFFUS0XA0000XFFFF = "LS_0X1100_0X9FFF_US_0XA000_0XFFFF"
                    case LS0X11000XBFFFUS0XC0000XFFFF = "LS_0X1100_0XBFFF_US_0XC000_0XFFFF"
                    case LS0X11000XDFFFUS0XE0000XFFFF = "LS_0X1100_0XDFFF_US_0XE000_0XFFFF"
                    case one0MHz = "1_0_MHz_"
                    case two0MHz2 = "2_0_MHz_"
                    case four0MHz = "4_0_MHz_"
                    case one4CK0MS = "14CK_0MS"
                    case RESETANDSYNCHRONIZE = "RESET_AND_SYNCHRONIZE"
                    case SYNCHRONIZEONNEXTINSTANTANEOUSCONVERSION = "SYNCHRONIZE_ON_NEXT_INSTANTANEOUS_CONVERSION"
                    case SYNCHRONIZEONNEXTACCUMULATEDCONVERSION = "SYNCHRONIZE_ON_NEXT_ACCUMULATED_CONVERSION"
                    case CHOPPINGDISABLED = "CHOPPING_DISABLED"
                    case AUTOMATICFASTCHOPPING = "AUTOMATIC_FAST_CHOPPING"
                    case AUTOMATICSLOWCHOPPING = "AUTOMATIC_SLOW_CHOPPING"
                    case SOFTWAREPOLARITYCONTROL = "SOFTWARE_POLARITY_CONTROL"
                    case PLL512KHZOUTPUTASSAMPLINGCLOCK = "PLL_512KHZ_OUTPUT_AS_SAMPLING_CLOCK"
                    case SLOWRCOSCILLATORASSAMPLINGCLOCK = "SLOW_RC_OSCILLATOR_AS_SAMPLING_CLOCK"
                    case five12 = "512"
                    case COMPARATORDISABLED = "COMPARATOR_DISABLED"
                    case COMPARATORENABLEDREGULARCURRENTCOUNTERCOUNTSUPIFACCUMULATEDCURRENTISABOVETHRESHOLDANDISRESETIFACCUMULATEDCURRENTISBELOWTHRESHOLD = "COMPARATOR_ENABLED_REGULAR_CURRENT_COUNTER_COUNTS_UP_IF_ACCUMULATED_CURRENT_IS_ABOVE_THRESHOLD_AND_IS_RESET_IF_ACCUMULATED_CURRENT_IS_BELOW_THRESHOLD"
                    case COMPARATORENABLEDREGULARCURRENTCOUNTERCOUNTSUPIFACCUMULATEDCURRENTISABOVETHRESHOLDANDDOWNIFACCUMULATEDCURRENTISBELOWTHRESHOLD = "COMPARATOR_ENABLED_REGULAR_CURRENT_COUNTER_COUNTS_UP_IF_ACCUMULATED_CURRENT_IS_ABOVE_THRESHOLD_AND_DOWN_IF_ACCUMULATED_CURRENT_IS_BELOW_THRESHOLD"
                    case five = "5"
                    case six = "6"
                    case seven = "7"
                    case nine = "9"
                    case one0 = "10"
                    case one1 = "11"
                    case one2 = "12"
                    case one3 = "13"
                    case one4 = "14"
                    case one5 = "15"
                    case fourX = "4X"
                    case eightX = "8X"
                    case one6X = "16X"
                    case three2X = "32X"
                    case six4X = "64X"
                    case one28X = "128X"
                    case two56X = "256X"
                    case NOCURRENTSOURCEISENABLED = "NO_CURRENT_SOURCE_IS_ENABLED"
                    case CURRENTSOURCEONPIPINENABLED = "CURRENT_SOURCE_ON_PI_PIN_ENABLED"
                    case CURRENTSOURCEONNIPINENABLED = "CURRENT_SOURCE_ON_NI_PIN_ENABLED"
                    case CURRENTSOURCEONBOTHPINIPINSENABLED = "CURRENT_SOURCE_ON_BOTH_PI_NI_PINS_ENABLED"
                    case VREFASREFERENCE = "VREF_AS_REFERENCE"
                    case AVDD3ASREFERENCEFORDIAGNOSISPURPOSE = "AVDD_3_AS_REFERENCE_FOR_DIAGNOSIS_PURPOSE"
                    case CURRENTSOURCEONPVPINENABLED = "CURRENT_SOURCE_ON_PV_PIN_ENABLED"
                    case CURRENTSOURCEONNVPINENABLED = "CURRENT_SOURCE_ON_NV_PIN_ENABLED"
                    case CURRENTSOURCEONBOTHPVNVPINSENABLED = "CURRENT_SOURCE_ON_BOTH_PV_NV_PINS_ENABLED"
                    case PVNV = "PV_NV"
                    case ADC0SGND = "ADC0_SGND"
                    case ADC1SGND = "ADC1_SGND"
                    case VTEMPGND = "VTEMP_GND"
                    case DIAGNOSISGNDVREFTBD = "DIAGNOSIS_GND_VREF_TBD"
                    case INTRCOSC128KHZ6CK0MS = "INTRCOSC_128KHZ_6CK_0MS"
                    case INTRCOSC128KHZ6CK4MS1 = "INTRCOSC_128KHZ_6CK_4MS1"
                    case INTRCOSC128KHZ6CK65MS = "INTRCOSC_128KHZ_6CK_65MS"
                    case TOSC258CK4MS1 = "TOSC_258CK_4MS1"
                    case TOSC258CK65MS = "TOSC_258CK_65MS"
                    case TOSC1KCK0MS = "TOSC_1KCK_0MS"
                    case TOSC1KCK4MS1 = "TOSC_1KCK_4MS1"
                    case TOSC1KCK65MS = "TOSC_1KCK_65MS"
                    case TOSC16KCK0MS = "TOSC_16KCK_0MS"
                    case TOSC16KCK4MS1 = "TOSC_16KCK_4MS1"
                    case TOSC16KCK65MS = "TOSC_16KCK_65MS"
                    case twoV1 = "2V1"
                    case MASTERSPIMSPIM = "MASTER_SPI_MSPIM"
                    case RISINGXCKNEDGETRANSMITTEDDATACHANGEDFALLINGXCKNEDGERECEIVEDDATASAMPLED = "RISING_XCKN_EDGE_TRANSMITTED_DATA_CHANGED_FALLING_XCKN_EDGE_RECEIVED_DATA_SAMPLED"
                    case FALLINGXCKNEDGETRANSMITTEDDATACHANGEDRISINGXCKNEDGERECEIVEDDATASAMPLED = "FALLING_XCKN_EDGE_TRANSMITTED_DATA_CHANGED_RISING_XCKN_EDGE_RECEIVED_DATA_SAMPLED"
                    case BUSERRORDUETOILLEGALSTARTORSTOPCONDITION = "BUS_ERROR_DUE_TO_ILLEGAL_START_OR_STOP_CONDITION"
                    case ASTARTCONDITIONHASBEENTRANSMITTED = "A_START_CONDITION_HAS_BEEN_TRANSMITTED"
                    case AREPEATEDSTARTCONDITIONHASBEENTRANSMITTED = "A_REPEATED_START_CONDITION_HAS_BEEN_TRANSMITTED"
                    case SLAWHASBEENTRANSMITTEDACKHASBEENRECEIVED = "SLA_W_HAS_BEEN_TRANSMITTED_ACK_HAS_BEEN_RECEIVED"
                    case SLAWHASBEENTRANSMITTEDNOTACKHASBEENRECEIVED = "SLA_W_HAS_BEEN_TRANSMITTED_NOT_ACK_HAS_BEEN_RECEIVED"
                    case DATABYTEHASBEENTRANSMITTEDACKHASBEENRECEIVED = "DATA_BYTE_HAS_BEEN_TRANSMITTED_ACK_HAS_BEEN_RECEIVED"
                    case DATABYTEHASBEENTRANSMITTEDNOTACKHASBEENRECEIVED = "DATA_BYTE_HAS_BEEN_TRANSMITTED_NOT_ACK_HAS_BEEN_RECEIVED"
                    case ARBITRATIONLOSTINSLAWORDATABYTESTRANSMITTERARBITRATIONLOSTINSLARORNOTACKBITRECEIVER = "ARBITRATION_LOST_IN_SLA_W_OR_DATA_BYTES_TRANSMITTER_ARBITRATION_LOST_IN_SLA_R_OR_NOT_ACK_BIT_RECEIVER"
                    case SLARHASBEENTRANSMITTEDACKHASBEENRECEIVED = "SLA_R_HAS_BEEN_TRANSMITTED_ACK_HAS_BEEN_RECEIVED"
                    case SLARHASBEENTRANSMITTEDNOTACKHASBEENRECEIVED = "SLA_R_HAS_BEEN_TRANSMITTED_NOT_ACK_HAS_BEEN_RECEIVED"
                    case DATABYTEHASBEENRECEIVEDACKHASBEENRETURNED = "DATA_BYTE_HAS_BEEN_RECEIVED_ACK_HAS_BEEN_RETURNED"
                    case DATABYTEHASBEENRECEIVEDNOTACKHASBEENRETURNED = "DATA_BYTE_HAS_BEEN_RECEIVED_NOT_ACK_HAS_BEEN_RETURNED"
                    case OWNSLAWHASBEENRECEIVEDACKHASBEENRETURNED = "OWN_SLA_W_HAS_BEEN_RECEIVED_ACK_HAS_BEEN_RETURNED"
                    case ARBITRATIONLOSTINSLARWASMASTEROWNSLAWHASBEENRECEIVEDACKHASBEENRETURNED = "ARBITRATION_LOST_IN_SLA_R_W_AS_MASTER_OWN_SLA_W_HAS_BEEN_RECEIVED_ACK_HAS_BEEN_RETURNED"
                    case GENERALCALLADDRESSHASBEENRECEIVEDACKHASBEENRETURNED = "GENERAL_CALL_ADDRESS_HAS_BEEN_RECEIVED_ACK_HAS_BEEN_RETURNED"
                    case ARBITRATIONLOSTINSLARWASMASTERGENERALCALLADDRESSHASBEENRECEIVEDACKHASBEENRETURNED = "ARBITRATION_LOST_IN_SLA_R_W_AS_MASTER_GENERAL_CALL_ADDRESS_HAS_BEEN_RECEIVED_ACK_HAS_BEEN_RETURNED"
                    case PREVIOUSLYADDRESSEDWITHOWNSLAWDATAHASBEENRECEIVEDACKHASBEENRETURNED = "PREVIOUSLY_ADDRESSED_WITH_OWN_SLA_W_DATA_HAS_BEEN_RECEIVED_ACK_HAS_BEEN_RETURNED"
                    case PREVIOUSLYADDRESSEDWITHOWNSLAWDATAHASBEENRECEIVEDNOTACKHASBEENRETURNED = "PREVIOUSLY_ADDRESSED_WITH_OWN_SLA_W_DATA_HAS_BEEN_RECEIVED_NOT_ACK_HAS_BEEN_RETURNED"
                    case PREVIOUSLYADDRESSEDWITHGENERALCALLDATAHASBEENRECEIVEDACKHASBEENRETURNED = "PREVIOUSLY_ADDRESSED_WITH_GENERAL_CALL_DATA_HAS_BEEN_RECEIVED_ACK_HAS_BEEN_RETURNED"
                    case PREVIOUSLYADDRESSEDWITHGENERALCALLDATAHASBEENRECEIVEDNOTACKHASBEENRETURNED = "PREVIOUSLY_ADDRESSED_WITH_GENERAL_CALL_DATA_HAS_BEEN_RECEIVED_NOT_ACK_HAS_BEEN_RETURNED"
                    case ASTOPCONDITIONORREPEATEDSTARTCONDITIONHASBEENRECEIVEDWHILESTILLADDRESSEDASSLAVE = "A_STOP_CONDITION_OR_REPEATED_START_CONDITION_HAS_BEEN_RECEIVED_WHILE_STILL_ADDRESSED_AS_SLAVE"
                    case OWNSLARHASBEENRECEIVEDACKHASBEENRETURNED = "OWN_SLA_R_HAS_BEEN_RECEIVED_ACK_HAS_BEEN_RETURNED"
                    case ARBITRATIONLOSTINSLARWASMASTEROWNSLARHASBEENRECEIVEDACKHASBEENRETURNED = "ARBITRATION_LOST_IN_SLA_R_W_AS_MASTER_OWN_SLA_R_HAS_BEEN_RECEIVED_ACK_HAS_BEEN_RETURNED"
                    case DATABYTEINTWDRHASBEENTRANSMITTEDACKHASBEENRECEIVED = "DATA_BYTE_IN_TWDR_HAS_BEEN_TRANSMITTED_ACK_HAS_BEEN_RECEIVED"
                    case DATABYTEINTWDRHASBEENTRANSMITTEDNOACKHASBEENRECEIVED = "DATA_BYTE_IN_TWDR_HAS_BEEN_TRANSMITTED_NO_ACK_HAS_BEEN_RECEIVED"
                    case LASTDATABYTEINTWDRHASBEENTRANSMITTEDTWEA0ACKHASBEENRECEIVED = "LAST_DATA_BYTE_IN_TWDR_HAS_BEEN_TRANSMITTED_TWEA_0_ACK_HAS_BEEN_RECEIVED"
                    case NORELEVANTSTATEINFORMATIONAVAILABLETWINT0 = "NO_RELEVANT_STATE_INFORMATION_AVAILABLE_TWINT_0"
                    case RISINGLEADINGEDGEFALLINGTRAILINGEDGE = "RISING_LEADING_EDGE_FALLING_TRAILING_EDGE"
                    case FALLINGLEADINGEGDERISINGTRAILINGEDGE = "FALLING_LEADING_EGDE_RISING_TRAILING_EDGE"
                    case SAMPLELEADINGEDGESETUPTRAILINGEDGE = "SAMPLE_LEADING_EDGE_SETUP_TRAILING_EDGE"
                    case SETUPLEADINGEDGESAMPLETRAILINGEDGE = "SETUP_LEADING_EDGE_SAMPLE_TRAILING_EDGE"
                    case FOSC4FOSC2SPI2X01 = "FOSC_4_FOSC_2_SPI2X_0_1"
                    case FOSC16FOSC8SPI2X01 = "FOSC_16_FOSC_8_SPI2X_0_1"
                    case FOSC64FOSC32SPI2X01 = "FOSC_64_FOSC_32_SPI2X_0_1"
                    case FOSC128FOSC64SPI2X01 = "FOSC_128_FOSC_64_SPI2X_0_1"
                    case NOCLOCKSOURCETIMERCOUNTER0STOPPED = "NO_CLOCK_SOURCE_TIMER_COUNTER0_STOPPED"
                    case CLKIO1NOPRESCALING = "CLK_IO_1_NO_PRESCALING"
                    case CLKIO8FROMPRESCALER = "CLK_IO_8_FROM_PRESCALER"
                    case CLKIO64FROMPRESCALER = "CLK_IO_64_FROM_PRESCALER"
                    case CLKIO256FROMPRESCALER = "CLK_IO_256_FROM_PRESCALER"
                    case CLKIO1024FROMPRESCALER = "CLK_IO_1024_FROM_PRESCALER"
                    case EXTERNALCLOCKSOURCEONT0PINCLOCKONFALLINGEDGE = "EXTERNAL_CLOCK_SOURCE_ON_T0_PIN_CLOCK_ON_FALLING_EDGE"
                    case EXTERNALCLOCKSOURCEONT0PINCLOCKONRISINGEDGE = "EXTERNAL_CLOCK_SOURCE_ON_T0_PIN_CLOCK_ON_RISING_EDGE"
                    case NORMALPORTOPERATIONOC0ADISCONNECTED = "NORMAL_PORT_OPERATION_OC0A_DISCONNECTED"
                    case TOGGLEOC0AONCOMPAREMATCH = "TOGGLE_OC0A_ON_COMPARE_MATCH"
                    case CLEAROC0AONCOMPAREMATCH = "CLEAR_OC0A_ON_COMPARE_MATCH"
                    case SETOC0AONCOMPAREMATCH = "SET_OC0A_ON_COMPARE_MATCH"
                    case NORMALPORTOPERATIONOC0BDISCONNECTED = "NORMAL_PORT_OPERATION_OC0B_DISCONNECTED"
                    case TOGGLEOC0BONCOMPAREMATCH = "TOGGLE_OC0B_ON_COMPARE_MATCH"
                    case CLEAROC0BONCOMPAREMATCH = "CLEAR_OC0B_ON_COMPARE_MATCH"
                    case SETOC0BONCOMPAREMATCH = "SET_OC0B_ON_COMPARE_MATCH"
                    case NORMALMODEOFOPERATION = "NORMAL_MODE_OF_OPERATION"
                    case PWMPHASECORRECTTOP0XFF = "PWM_PHASE_CORRECT_TOP_0XFF"
                    case CTCTOPOCRA = "CTC_TOP_OCRA"
                    case FASTPWMTOP0XFF = "FAST_PWM_TOP_0XFF"
                    case PWMPHASECORRECTTOPOCRA = "PWM_PHASE_CORRECT_TOP_OCRA"
                    case FASTPWMTOPOCRA = "FAST_PWM_TOP_OCRA"
                    case NORMALPORTOPERATIONOC2ADISCONNECTED = "NORMAL_PORT_OPERATION_OC2A_DISCONNECTED"
                    case TOGGLEOC2AONCOMPAREMATCH = "TOGGLE_OC2A_ON_COMPARE_MATCH"
                    case CLEAROC2AONCOMPAREMATCH = "CLEAR_OC2A_ON_COMPARE_MATCH"
                    case SETOC2AONCOMPAREMATCH = "SET_OC2A_ON_COMPARE_MATCH"
                    case NORMALPORTOPERATIONOC2BDISCONNECTED = "NORMAL_PORT_OPERATION_OC2B_DISCONNECTED"
                    case TOGGLEOC2BONCOMPAREMATCH = "TOGGLE_OC2B_ON_COMPARE_MATCH"
                    case CLEAROC2BONCOMPAREMATCH = "CLEAR_OC2B_ON_COMPARE_MATCH"
                    case SETOC2BONCOMPAREMATCH = "SET_OC2B_ON_COMPARE_MATCH"
                    case NOCLOCKSOURCETIMERCOUNTER2STOPPED = "NO_CLOCK_SOURCE_TIMER_COUNTER2_STOPPED"
                    case CLKT2S1NOPRESCALING = "CLK_T2S_1_NO_PRESCALING"
                    case CLKT2S8FROMPRESCALER = "CLK_T2S_8_FROM_PRESCALER"
                    case CLKT2S32FROMPRESCALER = "CLK_T2S_32_FROM_PRESCALER"
                    case CLKT2S64FROMPRESCALER = "CLK_T2S_64_FROM_PRESCALER"
                    case CLKT2S128FROMPRESCALER = "CLK_T2S_128_FROM_PRESCALER"
                    case CLKT2S256FROMPRESCALER = "CLK_T2S_256_FROM_PRESCALER"
                    case CLKT2S1024FROMPRESCALER = "CLK_T2S_1024_FROM_PRESCALER"
                    case NORMALOPERATION = "NORMAL_OPERATION"
                    case PWMPHASECORRECT8BIT = "PWM_PHASE_CORRECT_8_BIT"
                    case PWMPHASECORRECT9BIT = "PWM_PHASE_CORRECT_9_BIT"
                    case PWMPHASECORRECT10BIT = "PWM_PHASE_CORRECT_10_BIT"
                    case CTCTOPOCRNA = "CTC_TOP_OCRNA"
                    case FASTPWM8BIT = "FAST_PWM_8_BIT"
                    case FASTPWM9BIT = "FAST_PWM_9_BIT"
                    case FASTPWM10BIT = "FAST_PWM_10_BIT"
                    case PWMPHASEANDFREQUENCYCORRECTTOPICRN = "PWM_PHASE_AND_FREQUENCY_CORRECT_TOP_ICRN"
                    case PWMPHASEANDFREQUENCYCORRECTTOPOCRNA = "PWM_PHASE_AND_FREQUENCY_CORRECT_TOP_OCRNA"
                    case PWMPHASECORRECTTOPICRN = "PWM_PHASE_CORRECT_TOP_ICRN"
                    case PWMPHASECORRECTTOPOCRNA = "PWM_PHASE_CORRECT_TOP_OCRNA"
                    case FASTPWMTOPICRN = "FAST_PWM_TOP_ICRN"
                    case FASTPWMTOPOCRNA = "FAST_PWM_TOP_OCRNA"
                    case NOCLOCKSOURCETIMERCOUNTERSTOPPED = "NO_CLOCK_SOURCE_TIMER_COUNTER_STOPPED"
                    case NORMALPORTOPERATIONOCNAOCNBOCNCDISCONNECTED = "NORMAL_PORT_OPERATION_OCNA_OCNB_OCNC_DISCONNECTED"
                    case TOGGLEOCNAOCNBOCNCONCOMPAREMATCH = "TOGGLE_OCNA_OCNB_OCNC_ON_COMPARE_MATCH"
                    case CLEAROCNAOCNBOCNCONCOMPAREMATCHSETOUTPUTTOLOWLEVEL = "CLEAR_OCNA_OCNB_OCNC_ON_COMPARE_MATCH_SET_OUTPUT_TO_LOW_LEVEL"
                    case SETOCNAOCNBOCNCONCOMPAREMATCHSETOUTPUTTOHIGHLEVEL = "SET_OCNA_OCNB_OCNC_ON_COMPARE_MATCH_SET_OUTPUT_TO_HIGH_LEVEL"
                    case EXTERNALCLOCKSOURCEONTNPINCLOCKONFALLINGEDGE = "EXTERNAL_CLOCK_SOURCE_ON_TN_PIN_CLOCK_ON_FALLING_EDGE"
                    case EXTERNALCLOCKSOURCEONTNPINCLOCKONRISINGEDGE = "EXTERNAL_CLOCK_SOURCE_ON_TN_PIN_CLOCK_ON_RISING_EDGE"
                    case PALTDMINUS3US = "PALTD_MINUS_3US"
                    case PALTDMINUS2US = "PALTD_MINUS_2US"
                    case PALTDMINUS1US = "PALTD_MINUS_1US"
                    case PALTD0US = "PALTD_0US"
                    case PALTD1US = "PALTD_1US"
                    case PALTD2US = "PALTD_2US"
                    case PALTD3US = "PALTD_3US"
                    case PALTD4US = "PALTD_4US"
                    case PALTUMINUS3US = "PALTU_MINUS_3US"
                    case PALTUMINUS2US = "PALTU_MINUS_2US"
                    case PALTUMINUS1US = "PALTU_MINUS_1US"
                    case PALTU0US = "PALTU_0US"
                    case PALTU1US = "PALTU_1US"
                    case PALTU2US = "PALTU_2US"
                    case PALTU3US = "PALTU_3US"
                    case PALTU4US = "PALTU_4US"
                    case AESMODEECB = "AES_MODE_ECB"
                    case AESMODECBC = "AES_MODE_CBC"
                    case AESDIRENC = "AES_DIR_ENC"
                    case AESDIRDEC = "AES_DIR_DEC"
                    case CCANOTFIN = "CCA_NOT_FIN"
                    case CCAFIN = "CCA_FIN"
                    case CCABUSY = "CCA_BUSY"
                    case CCAIDLE = "CCA_IDLE"
                    case TSTDISABLED = "TST_DISABLED"
                    case TSTENABLED = "TST_ENABLED"
                    case PON = "P_ON"
                    case BUSYRX = "BUSY_RX"
                    case BUSYTX = "BUSY_TX"
                    case RXON = "RX_ON"
                    case TRXOFF = "TRX_OFF"
                    case PLLON = "PLL_ON"
                    case SLEEP = "SLEEP"
                    case BUSYRXAACK = "BUSY_RX_AACK"
                    case BUSYTXARET = "BUSY_TX_ARET"
                    case RXAACKON = "RX_AACK_ON"
                    case TXARETON = "TX_ARET_ON"
                    case STATETRANSITIONINPROGRESS = "STATE_TRANSITION_IN_PROGRESS"
                    case TRACSUCCESS = "TRAC_SUCCESS"
                    case TRACSUCCESSDATAPENDING = "TRAC_SUCCESS_DATA_PENDING"
                    case TRACSUCCESSWAITFORACK = "TRAC_SUCCESS_WAIT_FOR_ACK"
                    case TRACCHANNELACCESSFAILURE = "TRAC_CHANNEL_ACCESS_FAILURE"
                    case TRACNOACK = "TRAC_NO_ACK"
                    case TRACINVALID = "TRAC_INVALID"
                    case CMDNOP = "CMD_NOP"
                    case CMDTXSTART = "CMD_TX_START"
                    case CMDFORCETRXOFF = "CMD_FORCE_TRX_OFF"
                    case CMDFORCEPLLON = "CMD_FORCE_PLL_ON"
                    case CMDRXON = "CMD_RX_ON"
                    case CMDTRXOFF = "CMD_TRX_OFF"
                    case CMDPLLON = "CMD_PLL_ON"
                    case CMDRXAACKON = "CMD_RX_AACK_ON"
                    case CMDTXARETON = "CMD_TX_ARET_ON"
                    case three5DBM = "3_5_DBM"
                    case three3DBM = "3_3_DBM"
                    case two8DBM = "2_8_DBM"
                    case two3DBM = "2_3_DBM"
                    case one8DBM = "1_8_DBM"
                    case one2DBM = "1_2_DBM"
                    case one2DBM2 = "_12_DBM"
                    case zero5DBM = "0_5_DBM"
                    case zero5DBM2 = "_0_5_DBM"
                    case one5DBM = "_1_5_DBM"
                    case two5DBM = "_2_5_DBM"
                    case three5DBM2 = "_3_5_DBM"
                    case four5DBM = "_4_5_DBM"
                    case six5DBM = "_6_5_DBM"
                    case eight5DBM = "_8_5_DBM"
                    case one15DBM = "_11_5_DBM"
                    case one65DBM = "_16_5_DBM"
                    case CRCINVALID = "CRC_INVALID"
                    case CRCVALID = "CRC_VALID"
                    case RSSIMIN = "RSSI_MIN"
                    case RSSIMINPLUS3dB = "RSSI_MIN_PLUS_3dB"
                    case VAL2 = "VAL_2"
                    case RSSIMAX = "RSSI_MAX"
                    case EDMIN = "ED_MIN"
                    case EDMINPLUS1dB = "ED_MIN_PLUS_1dB"
                    case EDMAX = "ED_MAX"
                    case EDRESET = "ED_RESET"
                    case CCACSORED = "CCA_CS_OR_ED"
                    case CCAED = "CCA_ED"
                    case CCACS = "CCA_CS"
                    case CCACSANDED = "CCA_CS_AND_ED"
                    case F2405MHZ = "F_2405MHZ"
                    case F2410MHZ = "F_2410MHZ"
                    case F2415MHZ = "F_2415MHZ"
                    case F2420MHZ = "F_2420MHZ"
                    case F2425MHZ = "F_2425MHZ"
                    case F2430MHZ = "F_2430MHZ"
                    case F2435MHZ = "F_2435MHZ"
                    case F2440MHZ = "F_2440MHZ"
                    case F2445MHZ = "F_2445MHZ"
                    case F2450MHZ = "F_2450MHZ"
                    case F2455MHZ = "F_2455MHZ"
                    case F2460MHZ = "F_2460MHZ"
                    case F2465MHZ = "F_2465MHZ"
                    case F2470MHZ = "F_2470MHZ"
                    case F2475MHZ = "F_2475MHZ"
                    case F2480MHZ = "F_2480MHZ"
                    case PDTTHRESANTDIVOFF = "PDT_THRES_ANT_DIV_OFF"
                    case PDTTHRESANTDIVON = "PDT_THRES_ANT_DIV_ON"
                    case IEEESFD = "IEEE_SFD"
                    case RATE250KB = "RATE_250KB"
                    case RATE500KB = "RATE_500KB"
                    case RATE1000KB = "RATE_1000KB"
                    case RATE2000KB = "RATE_2000KB"
                    case ANTENNA0 = "ANTENNA_0"
                    case ANTENNA1 = "ANTENNA_1"
                    case ANTENNADIVERSITYALGORITHMDISABLED = "ANTENNA_DIVERSITY_ALGORITHM_DISABLED"
                    case ANTENNADIVERSITYALGORITHMENABLED = "ANTENNA_DIVERSITY_ALGORITHM_ENABLED"
                    case ANTDIVEXTSWDIS = "ANT_DIV_EXT_SW_DIS"
                    case ANTDIVEXTSWEN = "ANT_DIV_EXT_SW_EN"
                    case ANT1 = "ANT_1"
                    case ANT0 = "ANT_0"
                    case ANTRESET = "ANT_RESET"
                    case AVDDINT = "AVDD_INT"
                    case AVDDEXT = "AVDD_EXT"
                    case ANALOGVOLTAGEREGULATORDISABLEDORSUPPLYVOLTAGENOTSTABLE = "ANALOG_VOLTAGE_REGULATOR_DISABLED_OR_SUPPLY_VOLTAGE_NOT_STABLE"
                    case ANALOGSUPPLYVOLTAGEHASSETTLED = "ANALOG_SUPPLY_VOLTAGE_HAS_SETTLED"
                    case DVDDINT = "DVDD_INT"
                    case DVDDEXT = "DVDD_EXT"
                    case DIGITALVOLTAGEREGULATORDISABLEDORSUPPLYVOLTAGENOTSTABLE = "DIGITAL_VOLTAGE_REGULATOR_DISABLED_OR_SUPPLY_VOLTAGE_NOT_STABLE"
                    case DIGITALSUPPLYVOLTAGEHASSETTLED = "DIGITAL_SUPPLY_VOLTAGE_HAS_SETTLED"
                    case THEBATTERYVOLTAGEISBELOWTHETHRESHOLD = "THE_BATTERY_VOLTAGE_IS_BELOW_THE_THRESHOLD"
                    case THEBATTERYVOLTAGEISABOVETHETHRESHOLD = "THE_BATTERY_VOLTAGE_IS_ABOVE_THE_THRESHOLD"
                    case BATMONHRDIS = "BATMON_HR_DIS"
                    case BATMONHREN = "BATMON_HR_EN"
                    case two550V170VBATMONHR10 = "2_550V_1_70V_BATMON_HR_1_0"
                    case two625V175VBATMONHR10 = "2_625V_1_75V_BATMON_HR_1_0"
                    case two700V180VBATMONHR10 = "2_700V_1_80V_BATMON_HR_1_0"
                    case two775V185VBATMONHR10 = "2_775V_1_85V_BATMON_HR_1_0"
                    case two850V190VBATMONHR10 = "2_850V_1_90V_BATMON_HR_1_0"
                    case two925V195VBATMONHR10 = "2_925V_1_95V_BATMON_HR_1_0"
                    case three000V200VBATMONHR10 = "3_000V_2_00V_BATMON_HR_1_0"
                    case three075V205VBATMONHR10 = "3_075V_2_05V_BATMON_HR_1_0"
                    case three150V210VBATMONHR10 = "3_150V_2_10V_BATMON_HR_1_0"
                    case three225V215VBATMONHR10 = "3_225V_2_15V_BATMON_HR_1_0"
                    case three300V220VBATMONHR10 = "3_300V_2_20V_BATMON_HR_1_0"
                    case three375V225VBATMONHR10 = "3_375V_2_25V_BATMON_HR_1_0"
                    case three450V230VBATMONHR10 = "3_450V_2_30V_BATMON_HR_1_0"
                    case three525V235VBATMONHR10 = "3_525V_2_35V_BATMON_HR_1_0"
                    case three600V240VBATMONHR10 = "3_600V_2_40V_BATMON_HR_1_0"
                    case three675V245VBATMONHR10 = "3_675V_2_45V_BATMON_HR_1_0"
                    case INTERNALCRYSTALOSCILLATORDISABLEDUSEEXTERNALREFERENCEFREQUENCY = "INTERNAL_CRYSTAL_OSCILLATOR_DISABLED_USE_EXTERNAL_REFERENCE_FREQUENCY"
                    case INTERNALCRYSTALOSCILLATORENABLEDAMPLITUDEREGULATIONOFOSCILLATIONENABLED = "INTERNAL_CRYSTAL_OSCILLATOR_ENABLED_AMPLITUDE_REGULATION_OF_OSCILLATION_ENABLED"
                    case XTALTRIMMIN = "XTAL_TRIM_MIN"
                    case VAL0x1 = "VAL_0x1"
                    case VAL0x2 = "VAL_0x2"
                    case XTALTRIMMAX = "XTAL_TRIM_MAX"
                    case RXPDTLEVELMIN = "RX_PDT_LEVEL_MIN"
                    case VAL0xE = "VAL_0xE"
                    case RXPDTLEVELMAX = "RX_PDT_LEVEL_MAX"
                    case ACTIVATESMINIMUMPOWERSAVINGBEHAVIOURFORSMARTRECEIVINGMODE = "ACTIVATES_MINIMUM_POWER_SAVING_BEHAVIOUR_FOR_SMART_RECEIVING_MODE"
                    case ACTIVATESMAXIMUMPOWERSAVINGBEHAVIOURFORSMARTRECEIVINGMODE = "ACTIVATES_MAXIMUM_POWER_SAVING_BEHAVIOUR_FOR_SMART_RECEIVING_MODE"
                    case AACKACKTIME12SYM = "AACK_ACK_TIME_12_SYM"
                    case AACKACKTIME2SYM = "AACK_ACK_TIME_2_SYM"
                    case PATmega128RFA1 = "P_ATmega128RFA1"
                    case PRFA2 = "P_RFA2"
                    case PRFR2 = "P_RFR2"
                    case REVA = "REV_A"
                    case REVB = "REV_B"
                    case ATMELBYTE0 = "ATMEL_BYTE_0"
                    case ATMELBYTE1 = "ATMEL_BYTE_1"
                    case RETRANSMISSIONOFFRAMEISNOTATTEMPTED = "RETRANSMISSION_OF_FRAME_IS_NOT_ATTEMPTED"
                    case RETRANSMISSIONOFFRAMEISATTEMPTEDONCE = "RETRANSMISSION_OF_FRAME_IS_ATTEMPTED_ONCE"
                    case RETRANSMISSIONOFFRAMEISATTEMPTED15TIMES = "RETRANSMISSION_OF_FRAME_IS_ATTEMPTED_15_TIMES"
                    case NOREPETITIONOFCSMACAPROCEDURE = "NO_REPETITION_OF_CSMA_CA_PROCEDURE"
                    case ONEREPETITIONOFCSMACAPROCEDURE = "ONE_REPETITION_OF_CSMA_CA_PROCEDURE"
                    case FIVEREPETITIONSHIGHESTIEEE802154COMPLIANTVALUE = "FIVE_REPETITIONS_HIGHEST_IEEE_802_15_4_COMPLIANT_VALUE"
                    case IMMEDIATEFRAMERETRANSMISSIONWITHOUTPERFORMINGCSMACA = "IMMEDIATE_FRAME_RE_TRANSMISSION_WITHOUT_PERFORMING_CSMA_CA"
                    case SLOTTEDOPDIS = "SLOTTED_OP_DIS"
                    case SLOTTEDOPEN = "SLOTTED_OP_EN"
                    case ACKNOWLEDGEFRAMESWITHVERSIONNUMBER0 = "ACKNOWLEDGE_FRAMES_WITH_VERSION_NUMBER_0"
                    case ACKNOWLEDGEFRAMESWITHVERSIONNUMBER0OR1 = "ACKNOWLEDGE_FRAMES_WITH_VERSION_NUMBER_0_OR_1"
                    case ACKNOWLEDGEFRAMESWITHVERSIONNUMBER0OR1OR2 = "ACKNOWLEDGE_FRAMES_WITH_VERSION_NUMBER_0_OR_1_OR_2"
                    case ACKNOWLEDGEFRAMESINDEPENDENTOFFRAMEVERSIONNUMBER = "ACKNOWLEDGE_FRAMES_INDEPENDENT_OF_FRAME_VERSION_NUMBER"
                    case THISVALUEISNOTVALIDFORTHEMAXIMUMBACKOFFEXPONENT = "THIS_VALUE_IS_NOT_VALID_FOR_THE_MAXIMUM_BACK_OFF_EXPONENT"
                    case MINIMUMIEEECOMPLIANTVALUEFORTHEMAXIMUMBACKOFFEXPONENT = "MINIMUM_IEEE_COMPLIANT_VALUE_FOR_THE_MAXIMUM_BACK_OFF_EXPONENT"
                    case MAXIMUMIEEECOMPLIANTVALUEFORTHEMAXIMUMBACKOFFEXPONENT = "MAXIMUM_IEEE_COMPLIANT_VALUE_FOR_THE_MAXIMUM_BACK_OFF_EXPONENT"
                    case MINIMUMVALUEOFMINIMUMBACKOFFEXPONENT = "MINIMUM_VALUE_OF_MINIMUM_BACK_OFF_EXPONENT"
                    case MAXIMUMVALUEOFMINIMUMBACKOFFEXPONENTMINBEMUSTBESMALLEROREQUALTOMAXBE = "MAXIMUM_VALUE_OF_MINIMUM_BACK_OFF_EXPONENT_MIN_BE_MUST_BE_SMALLER_OR_EQUAL_TO_MAX_BE"
                    case NORMALNOTESTISACTIVE = "NORMAL_NO_TEST_IS_ACTIVE"
                    case TSTCONTTXCONTINUOUSTRANSMIT = "TST_CONT_TX_CONTINUOUS_TRANSMIT"
                    case TRANSCEIVERCLOCKDIVIDEDBY256625KHZ = "TRANSCEIVER_CLOCK_DIVIDED_BY_256_62_5KHZ"
                    case TRANSCEIVERCLOCKDIVIDEDBY128125KHZ = "TRANSCEIVER_CLOCK_DIVIDED_BY_128_125KHZ"
                    case TRANSCEIVERCLOCKDIVIDEDBY64250KHZ = "TRANSCEIVER_CLOCK_DIVIDED_BY_64_250KHZ"
                    case TRANSCEIVERCLOCKDIVIDEDBY32500KHZ = "TRANSCEIVER_CLOCK_DIVIDED_BY_32_500KHZ"
                    case TRANSCEIVERCLOCKDIVIDEDBY161MHZ = "TRANSCEIVER_CLOCK_DIVIDED_BY_16_1MHZ"
                    case TRANSCEIVERCLOCKDIVIDEDBY82MHZ = "TRANSCEIVER_CLOCK_DIVIDED_BY_8_2MHZ"
                    case TRANSCEIVERCLOCKDIVIDEDBY44MHZ = "TRANSCEIVER_CLOCK_DIVIDED_BY_4_4MHZ"
                    case COMPAREUNIT3RELATIVECOMPARESOURCEBEACONTIMESTAMPREGISTER = "COMPARE_UNIT_3_RELATIVE_COMPARE_SOURCE_BEACON_TIMESTAMP_REGISTER"
                    case COMPAREUNIT3RELATIVECOMPARESOURCETRANSMITFRAMETIMESTAMPREGISTER = "COMPARE_UNIT_3_RELATIVE_COMPARE_SOURCE_TRANSMIT_FRAME_TIMESTAMP_REGISTER"
                    case COMPAREUNIT3RELATIVECOMPARESOURCERECEIVEDFRAMETIMESTAMPREGISTER = "COMPARE_UNIT_3_RELATIVE_COMPARE_SOURCE_RECEIVED_FRAME_TIMESTAMP_REGISTER"
                    case COMPAREUNIT2RELATIVECOMPARESOURCEBEACONTIMESTAMPREGISTER = "COMPARE_UNIT_2_RELATIVE_COMPARE_SOURCE_BEACON_TIMESTAMP_REGISTER"
                    case COMPAREUNIT2RELATIVECOMPARESOURCETRANSMITFRAMETIMESTAMPREGISTER = "COMPARE_UNIT_2_RELATIVE_COMPARE_SOURCE_TRANSMIT_FRAME_TIMESTAMP_REGISTER"
                    case COMPAREUNIT2RELATIVECOMPARESOURCERECEIVEDFRAMETIMESTAMPREGISTER = "COMPARE_UNIT_2_RELATIVE_COMPARE_SOURCE_RECEIVED_FRAME_TIMESTAMP_REGISTER"
                    case COMPAREUNIT1RELATIVECOMPARESOURCEBEACONTIMESTAMPREGISTER = "COMPARE_UNIT_1_RELATIVE_COMPARE_SOURCE_BEACON_TIMESTAMP_REGISTER"
                    case COMPAREUNIT1RELATIVECOMPARESOURCETRANSMITFRAMETIMESTAMPREGISTER = "COMPARE_UNIT_1_RELATIVE_COMPARE_SOURCE_TRANSMIT_FRAME_TIMESTAMP_REGISTER"
                    case COMPAREUNIT1RELATIVECOMPARESOURCERECEIVEDFRAMETIMESTAMPREGISTER = "COMPARE_UNIT_1_RELATIVE_COMPARE_SOURCE_RECEIVED_FRAME_TIMESTAMP_REGISTER"
                    case ERASEANDWRITEINONEOPERATIONATOMICOPERATION = "ERASE_AND_WRITE_IN_ONE_OPERATION_ATOMIC_OPERATION"
                    case RESERVEDFORFUTUREUSE = "RESERVED_FOR_FUTURE_USE"
                    case REFERTOTHEDEBUGGERDOCUMENTATIONFORFURTHERINFORMATIONONHOWTOUSETHISREGISTER = "REFER_TO_THE_DEBUGGER_DOCUMENTATION_FOR_FURTHER_INFORMATION_ON_HOW_TO_USE_THIS_REGISTER"
                    case THELOWLEVELOFINTNGENERATESANINTERRUPTREQUEST = "THE_LOW_LEVEL_OF_INTN_GENERATES_AN_INTERRUPT_REQUEST"
                    case ANYEDGEOFINTNGENERATESASYNCHRONOUSLYANINTERRUPTREQUEST = "ANY_EDGE_OF_INTN_GENERATES_ASYNCHRONOUSLY_AN_INTERRUPT_REQUEST"
                    case THEFALLINGEDGEOFINTNGENERATESASYNCHRONOUSLYANINTERRUPTREQUEST = "THE_FALLING_EDGE_OF_INTN_GENERATES_ASYNCHRONOUSLY_AN_INTERRUPT_REQUEST"
                    case THERISINGEDGEOFINTNGENERATESASYNCHRONOUSLYANINTERRUPTREQUEST = "THE_RISING_EDGE_OF_INTN_GENERATES_ASYNCHRONOUSLY_AN_INTERRUPT_REQUEST"
                    case ALLEXTERNALPININTERRUPTSAREDISABLED = "ALL_EXTERNAL_PIN_INTERRUPTS_ARE_DISABLED"
                    case ALLEXTERNALPININTERRUPTSAREENABLED = "ALL_EXTERNAL_PIN_INTERRUPTS_ARE_ENABLED"
                    case NOEDGEORLOGICCHANGEONINT70OCCURRED = "NO_EDGE_OR_LOGIC_CHANGE_ON_INT7_0_OCCURRED"
                    case AEDGEORLOGICCHANGEONINT0OCCURREDANDTRIGGEREDANINTERRUPTREQUEST = "A_EDGE_OR_LOGIC_CHANGE_ON_INT0_OCCURRED_AND_TRIGGERED_AN_INTERRUPT_REQUEST"
                    case AEDGEORLOGICCHANGEONINT7OCCURREDANDTRIGGEREDANINTERRUPTREQUEST = "A_EDGE_OR_LOGIC_CHANGE_ON_INT7_OCCURRED_AND_TRIGGERED_AN_INTERRUPT_REQUEST"
                    case AREFINTERNALREFERENCEVOLTAGEGENERATIONTURNEDOFF = "AREF_INTERNAL_REFERENCE_VOLTAGE_GENERATION_TURNED_OFF"
                    case AVDDWITHEXTERNALCAPACITORATAREFPIN = "AVDD_WITH_EXTERNAL_CAPACITOR_AT_AREF_PIN"
                    case INTERNAL15VVOLTAGEREFERENCENOEXTERNALCAPACITORATAREFPIN = "INTERNAL_1_5V_VOLTAGE_REFERENCE_NO_EXTERNAL_CAPACITOR_AT_AREF_PIN"
                    case INTERNAL16VVOLTAGEREFERENCENOEXTERNALCAPACITORATAREFPIN = "INTERNAL_1_6V_VOLTAGE_REFERENCE_NO_EXTERNAL_CAPACITOR_AT_AREF_PIN"
                    case SINGLEENDED1DIFFERENTIAL3ADCCLOCKCYCLES = "SINGLE_ENDED_1_DIFFERENTIAL_3_ADC_CLOCK_CYCLES"
                    case SINGLEENDED2DIFFERENTIAL5ADCCLOCKCYCLES = "SINGLE_ENDED_2_DIFFERENTIAL_5_ADC_CLOCK_CYCLES"
                    case SINGLEENDED3DIFFERENTIAL7ADCCLOCKCYCLES = "SINGLE_ENDED_3_DIFFERENTIAL_7_ADC_CLOCK_CYCLES"
                    case SINGLEENDED4DIFFERENTIAL9ADCCLOCKCYCLES = "SINGLE_ENDED_4_DIFFERENTIAL_9_ADC_CLOCK_CYCLES"
                    case threeADCCLOCKCYCLES = "3_ADC_CLOCK_CYCLES"
                    case sevenADCCLOCKCYCLES = "7_ADC_CLOCK_CYCLES"
                    case one1ADCCLOCKCYCLES = "11_ADC_CLOCK_CYCLES"
                    case one5ADCCLOCKCYCLES = "15_ADC_CLOCK_CYCLES"
                    case two51ADCCLOCKCYCLES = "251_ADC_CLOCK_CYCLES"
                    case two55ADCCLOCKCYCLES = "255_ADC_CLOCK_CYCLES"
                    case CALIBRATIONVALUEFORLOWESTOSCILLATORFREQUENCY = "CALIBRATION_VALUE_FOR_LOWEST_OSCILLATOR_FREQUENCY"
                    case ENDVALUEOFLOWFREQUENCYRANGECALIBRATION = "END_VALUE_OF_LOW_FREQUENCY_RANGE_CALIBRATION"
                    case STARTVALUEOFHIGHFREQUENCYRANGECALIBRATION = "START_VALUE_OF_HIGH_FREQUENCY_RANGE_CALIBRATION"
                    case CALIBRATIONVALUEFORHIGHESTOSCILLATORFREQUENCY = "CALIBRATION_VALUE_FOR_HIGHEST_OSCILLATOR_FREQUENCY"
                    case DIVISIONFACTOR1RCOSCILLATOR2 = "DIVISION_FACTOR_1_RC_OSCILLATOR_2"
                    case DIVISIONFACTOR2RCOSCILLATOR4 = "DIVISION_FACTOR_2_RC_OSCILLATOR_4"
                    case DIVISIONFACTOR4RCOSCILLATOR8 = "DIVISION_FACTOR_4_RC_OSCILLATOR_8"
                    case DIVISIONFACTOR8RCOSCILLATOR16 = "DIVISION_FACTOR_8_RC_OSCILLATOR_16"
                    case DIVISIONFACTOR16RCOSCILLATOR32 = "DIVISION_FACTOR_16_RC_OSCILLATOR_32"
                    case DIVISIONFACTOR32RCOSCILLATOR64 = "DIVISION_FACTOR_32_RC_OSCILLATOR_64"
                    case DIVISIONFACTOR64RCOSCILLATOR128 = "DIVISION_FACTOR_64_RC_OSCILLATOR_128"
                    case DIVISIONFACTOR128RCOSCILLATOR256 = "DIVISION_FACTOR_128_RC_OSCILLATOR_256"
                    case DIVISIONFACTOR256RCOSCILLATOR512 = "DIVISION_FACTOR_256_RC_OSCILLATOR_512"
                    case DIVISIONFACTOR1ONLYPERMITTEDFORRCOSCILLATORFLASHANDEEPROMPROGRAMMINGISNOTALLOWED = "DIVISION_FACTOR_1_ONLY_PERMITTED_FOR_RC_OSCILLATOR_FLASH_AND_EEPROM_PROGRAMMING_IS_NOT_ALLOWED"
                    case FACTORYROW = "FACTORY_ROW"
                    case USERROW1 = "USER_ROW_1"
                    case USERROW2 = "USER_ROW_2"
                    case USERROW3 = "USER_ROW_3"
                    case CENTERVALUE = "CENTER_VALUE"
                    case VOLTAGESTEPUP = "VOLTAGE_STEP_UP"
                    case VOLTAGESTEPDOWN = "VOLTAGE_STEP_DOWN"
                    case SETTINGFORHIGHESTVOLTAGE = "SETTING_FOR_HIGHEST_VOLTAGE"
                    case SETTINGFORLOWESTVOLTAGE = "SETTING_FOR_LOWEST_VOLTAGE"
                    case CALIBRATIONLIMITFORFASTPROCESSCORNERHIGHOUTPUTVOLTAGE = "CALIBRATION_LIMIT_FOR_FAST_PROCESS_CORNER_HIGH_OUTPUT_VOLTAGE"
                    case CALIBRATIONLIMITFORSLOWPROCESSCORNERLOWOUTPUTVOLTAGE = "CALIBRATION_LIMIT_FOR_SLOW_PROCESS_CORNER_LOW_OUTPUT_VOLTAGE"
                    case PADIO2MA = "PAD_IO_2MA"
                    case PADIO4MA = "PAD_IO_4MA"
                    case PADIO6MA = "PAD_IO_6MA"
                    case PADIO8MA = "PAD_IO_8MA"
                    case TRXOSC258CK4MS1 = "TRXOSC_258CK_4MS1"
                    case TRXOSC258CK65MS = "TRXOSC_258CK_65MS"
                    case TRXOSC1KCK0MS = "TRXOSC_1KCK_0MS"
                    case TRXOSC1KCK4MS1 = "TRXOSC_1KCK_4MS1"
                    case TRXOSC1KCK65MS = "TRXOSC_1KCK_65MS"
                    case TRXOSC16KCK0MS = "TRXOSC_16KCK_0MS"
                    case TRXOSC16KCK4MS1 = "TRXOSC_16KCK_4MS1"
                    case TRXOSC16KCK65MS = "TRXOSC_16KCK_65MS"
                    case PABUFLT0US = "PA_BUF_LT_0US"
                    case PABUFLT2US = "PA_BUF_LT_2US"
                    case PABUFLT4US = "PA_BUF_LT_4US"
                    case PABUFLT6US = "PA_BUF_LT_6US"
                    case PALT2US = "PA_LT_2US"
                    case PALT4US = "PA_LT_4US"
                    case PALT6US = "PA_LT_6US"
                    case PALT8US = "PA_LT_8US"
                    case three0DBM = "3_0_DBM"
                    case one3DBM = "1_3_DBM"
                    case zero7DBM = "0_7_DBM"
                    case zero0DBM = "0_0_DBM"
                    case oneDBM = "_1_DBM"
                    case twoDBM = "_2_DBM"
                    case threeDBM = "_3_DBM"
                    case fourDBM = "_4_DBM"
                    case fiveDBM = "_5_DBM"
                    case sevenDBM = "_7_DBM"
                    case nineDBM = "_9_DBM"
                    
                    case one7DBM = "_17_DBM"
                    case two550VBATMONHR1170VBATMONHR0 = "2_550V_BATMON_HR_1_1_70V_BATMON_HR_0"
                    case two625VBATMONHR1175VBATMONHR0 = "2_625V_BATMON_HR_1_1_75V_BATMON_HR_0"
                    case two700VBATMONHR1180VBATMONHR0 = "2_700V_BATMON_HR_1_1_80V_BATMON_HR_0"
                    case two775VBATMONHR1185VBATMONHR0 = "2_775V_BATMON_HR_1_1_85V_BATMON_HR_0"
                    case two850VBATMONHR1190VBATMONHR0 = "2_850V_BATMON_HR_1_1_90V_BATMON_HR_0"
                    case two925VBATMONHR1195VBATMONHR0 = "2_925V_BATMON_HR_1_1_95V_BATMON_HR_0"
                    case three000VBATMONHR1200VBATMONHR0 = "3_000V_BATMON_HR_1_2_00V_BATMON_HR_0"
                    case three075VBATMONHR1205VBATMONHR0 = "3_075V_BATMON_HR_1_2_05V_BATMON_HR_0"
                    case three150VBATMONHR1210VBATMONHR0 = "3_150V_BATMON_HR_1_2_10V_BATMON_HR_0"
                    case three225VBATMONHR1215VBATMONHR0 = "3_225V_BATMON_HR_1_2_15V_BATMON_HR_0"
                    case three300VBATMONHR1220VBATMONHR0 = "3_300V_BATMON_HR_1_2_20V_BATMON_HR_0"
                    case three375VBATMONHR1225VBATMONHR0 = "3_375V_BATMON_HR_1_2_25V_BATMON_HR_0"
                    case three450VBATMONHR1230VBATMONHR0 = "3_450V_BATMON_HR_1_2_30V_BATMON_HR_0"
                    case three525VBATMONHR1235VBATMONHR0 = "3_525V_BATMON_HR_1_2_35V_BATMON_HR_0"
                    case three600VBATMONHR1240VBATMONHR0 = "3_600V_BATMON_HR_1_2_40V_BATMON_HR_0"
                    case three675VBATMONHR1245VBATMONHR0 = "3_675V_BATMON_HR_1_2_45V_BATMON_HR_0"
                    case RUNNINGCLK16 = "RUNNING_CLK_16"
                    case INTRCOSC128KHZ6CK4MS = "INTRCOSC_128KHZ_6CK_4MS"
                    case INTRCOSC128KHZ6CK64MS = "INTRCOSC_128KHZ_6CK_64MS"
                    case FSOSC258CK4MS1CRESFASTPWR = "FSOSC_258CK_4MS1_CRES_FASTPWR"
                    case FSOSC258CK65MSCRESSLOWPWR = "FSOSC_258CK_65MS_CRES_SLOWPWR"
                    case FSOSC1KCK0MSCRESBODEN = "FSOSC_1KCK_0MS_CRES_BODEN"
                    case FSOSC1KCK4MS1CRESFASTPWR = "FSOSC_1KCK_4MS1_CRES_FASTPWR"
                    case FSOSC1KCK65MSCRESSLOWPWR = "FSOSC_1KCK_65MS_CRES_SLOWPWR"
                    case FSOSC16KCK0MSXOSCBODEN = "FSOSC_16KCK_0MS_XOSC_BODEN"
                    case FSOSC16KCK4MS1XOSCFASTPWR = "FSOSC_16KCK_4MS1_XOSC_FASTPWR"
                    case FSOSC16KCK65MSXOSCSLOWPWR = "FSOSC_16KCK_65MS_XOSC_SLOWPWR"
                    case ADC0ADC010X = "ADC0_ADC0_10X"
                    case ADC1ADC010X = "ADC1_ADC0_10X"
                    case ADC0ADC0200x = "ADC0_ADC0_200x"
                    case ADC1ADC0200X = "ADC1_ADC0_200X"
                    case ADC2ADC210X = "ADC2_ADC2_10X"
                    case ADC3ADC210X = "ADC3_ADC2_10X"
                    case ADC2ADC2200X = "ADC2_ADC2_200X"
                    case ADC3ADC2200X = "ADC3_ADC2_200X"
                    case ADC0ADC11X = "ADC0_ADC1_1X"
                    case ADC1ADC11X = "ADC1_ADC1_1X"
                    case ADC2ADC11X = "ADC2_ADC1_1X"
                    case ADC3ADC11X = "ADC3_ADC1_1X"
                    case ADC4ADC11X = "ADC4_ADC1_1X"
                    case ADC5ADC11X = "ADC5_ADC1_1X"
                    case ADC6ADC11X = "ADC6_ADC1_1X"
                    case ADC7ADC11X = "ADC7_ADC1_1X"
                    case ADC0ADC21X = "ADC0_ADC2_1X"
                    case ADC1ADC21X = "ADC1_ADC2_1X"
                    case ADC2ADC21X = "ADC2_ADC2_1X"
                    case ADC3ADC21X = "ADC3_ADC2_1X"
                    case ADC4ADC21X = "ADC4_ADC2_1X"
                    case ADC5ADC21X = "ADC5_ADC2_1X"
                    case THREEWIREMODE = "THREE_WIRE_MODE"
                    case TWOWIREMODE = "TWO_WIRE_MODE"
                    case TWOWIREMODEHELDLOW = "TWO_WIRE_MODE_HELD_LOW"
                    case SEG012 = "SEG0_12"
                    case SEG014 = "SEG0_14"
                    case SEG015 = "SEG0_15"
                    case SEG018 = "SEG0_18"
                    case SEG020 = "SEG0_20"
                    case SEG022 = "SEG0_22"
                    case SEG023 = "SEG0_23"
                    case SEG024 = "SEG0_24"
                    case CLKLCD16 = "CLKLCD_16"
                    case CLKLCD64 = "CLKLCD_64"
                    case CLKLCD128 = "CLKLCD_128"
                    case CLKLCD256 = "CLKLCD_256"
                    case CLKLCD512 = "CLKLCD_512"
                    case CLKLCD1024 = "CLKLCD_1024"
                    case CLKLCD2048 = "CLKLCD_2048"
                    case CLKLCD4096 = "CLKLCD_4096"
                    case three00US = "300US"
                    case seven0US = "70US"
                    case one50US = "150US"
                    case four50US = "450US"
                    case five75US = "575US"
                    case eight50US = "850US"
                    case one150US = "1150US"
                    case five0PERCENTOFLCDCLOCK = "50_PERCENT_OF_LCD_CLOCK"
                    case two60V = "2_60V"
                    case two65V = "2_65V"
                    case two70V = "2_70V"
                    case two75V = "2_75V"
                    case two80V = "2_80V"
                    case two85V = "2_85V"
                    case two90V = "2_90V"
                    case two95V = "2_95V"
                    case three00V = "3_00V"
                    case three05V = "3_05V"
                    case three10V = "3_10V"
                    case three15V = "3_15V"
                    case three20V = "3_20V"
                    case three25V = "3_25V"
                    case three30V = "3_30V"
                    case three35V = "3_35V"
                    case five12W1FE00 = "512W_1FE00"
                    case one024W1FC00 = "1024W_1FC00"
                    case two048W1F800 = "2048W_1F800"
                    case four096W1F000 = "4096W_1F000"
                    case CFDDISABLED = "CFD_DISABLED"
                    case CFDENABLED = "CFD_ENABLED"
                    case FOSC2ORFOSC4 = "FOSC_2_OR_FOSC_4"
                    case FOSC8ORFOSC16 = "FOSC_8_OR_FOSC_16"
                    case FOSC32ORFOSC64 = "FOSC_32_OR_FOSC_64"
                    case FOSC64ORFOSC128 = "FOSC_64_OR_FOSC_128"
                    case ADCVoltageReferenceSelection = "ADC Voltage Reference Selection"
                    case InputChannelSelection = "Input Channel Selection"
                    case SEG026 = "SEG0_26"
                    case SEG028 = "SEG0_28"
                    case SEG030 = "SEG0_30"
                    case SEG032 = "SEG0_32"
                    case SEG034 = "SEG0_34"
                    case SEG036 = "SEG0_36"
                    case SEG038 = "SEG0_38"
                    case SEG039 = "SEG0_39"
                    case two56W4F00 = "256W_4F00"
                    case five12W4E00 = "512W_4E00"
                    case one024W4C00 = "1024W_4C00"
                    case two048W4800 = "2048W_4800"
                    case one4CK3MS9 = "14CK_3MS9"
                    case one4CK62MS5 = "14CK_62MS5"
                    case fourKSLOWRC1K32KHZ = "4K_SLOW_RC_1K_32KHZ"
                    case eightKSLOWRC2K32KHZ = "8K_SLOW_RC_2K_32KHZ"
                    case one6KSLOWRC4K32KHZ = "16K_SLOW_RC_4K_32KHZ"
                    case three2KSLOWRC8K32KHZ = "32K_SLOW_RC_8K_32KHZ"
                    case six4KSLOWRC16K32KHZ = "64K_SLOW_RC_16K_32KHZ"
                    case one28KSLOWRC32K32KHZ = "128K_SLOW_RC_32K_32KHZ"
                    case two56KSLOWRC64K32KHZ = "256K_SLOW_RC_64K_32KHZ"
                    case five12KSLOWRC128K32KHZ = "512K_SLOW_RC_128K_32KHZ"
                    case six1US = "61_US"
                    case one22US = "122_US"
                    case one83US = "183_US"
                    case two44US = "244_US"
                    case three05US = "305_US"
                    case three66US = "366_US"
                    case four27US = "427_US"
                    case four88US = "488_US"
                    case six10US = "610_US"
                    case seven32US = "732_US"
                    case eight54US = "854_US"
                    case nine76US = "976_US"
                    case one098US = "1098_US"
                    case one220US = "1220_US"
                    case one342US = "1342_US"
                    case one464US = "1464_US"
                    case oneMS = "1_MS"
                    case oneMS2 = "1MS" // Duplicate
                    case twoMS = "2_MS"
                    case twoMS2 = "2MS" // Duplicate
                    case fourMS = "4_MS"
                    case fourMS2 = "4MS" // Duplicate
                    case sixMS = "6_MS"
                    case eightMS = "8_MS"
                    case eightMS2 = "8MS" // Duplicate
                    case one6MS = "16_MS"
                    case one6MS2 = "16MS" // Duplicate
                    case one0MS = "10_MS"
                    case one2MS = "12_MS"
                    case one4MS = "14_MS"
                    case one8MS = "18_MS"
                    case two0MS = "20_MS"
                    case two2MS = "22_MS"
                    case two4MS = "24_MS"
                    case two6MS = "26_MS"
                    case two8MS = "28_MS"
                    case three0MS = "30_MS"
                    case zero050V = "0_050V"
                    case zero055V = "0_055V"
                    case zero060V = "0_060V"
                    case zero065V = "0_065V"
                    case zero070V = "0_070V"
                    case zero080V = "0_080V"
                    case zero090V = "0_090V"
                    case zero100V = "0_100V"
                    case zero110V = "0_110V"
                    case zero120V = "0_120V"
                    case zero130V = "0_130V"
                    case zero140V = "0_140V"
                    case zero160V = "0_160V"
                    case zero180V = "0_180V"
                    case zero200V = "0_200V"
                    case zero220V = "0_220V"
                    case zero240V = "0_240V"
                    case zero260V = "0_260V"
                    case zero280V = "0_280V"
                    case zero320V = "0_320V"
                    case zero360V = "0_360V"
                    case zero400V = "0_400V"
                    case zero440V = "0_440V"
                    case seven50MS = "750MS"
                    case one250MS = "1250MS"
                    case one500MS = "1500MS"
                    case four71V = "4_71V"
                    case five03V = "5_03V"
                    case five34V = "5_34V"
                    case five66V = "5_66V"
                    case five97V = "5_97V"
                    case six29V = "6_29V"
                    case six60V = "6_60V"
                    case six91V = "6_91V"
                    case seven23V = "7_23V"
                    case seven54V = "7_54V"
                    case seven86V = "7_86V"
                    case eight17V = "8_17V"
                    case eight49V = "8_49V"
                    case eight80V = "8_80V"
                    case nine11V = "9_11V"
                    case nine43V = "9_43V"
                    case one25MS = "125MS"
                    case LS0X22000X1FFFUS0X20000XFFFF = "LS_0X2200_0X1FFF_US_0X2000_0XFFFF"
                    case LS0X22000X3FFFUS0X40000XFFFF = "LS_0X2200_0X3FFF_US_0X4000_0XFFFF"
                    case LS0X22000X5FFFUS0X60000XFFFF = "LS_0X2200_0X5FFF_US_0X6000_0XFFFF"
                    case LS0X22000X7FFFUS0X80000XFFFF = "LS_0X2200_0X7FFF_US_0X8000_0XFFFF"
                    case LS0X22000X9FFFUS0XA0000XFFFF = "LS_0X2200_0X9FFF_US_0XA000_0XFFFF"
                    case LS0X22000XBFFFUS0XC0000XFFFF = "LS_0X2200_0XBFFF_US_0XC000_0XFFFF"
                    case LS0X22000XDFFFUS0XE0000XFFFF = "LS_0X2200_0XDFFF_US_0XE000_0XFFFF"
                    case ADC11 = "ADC11"
                    case ADC12 = "ADC12"
                    case ADC13 = "ADC13"
                    case ADC14 = "ADC14"
                    case ADC15 = "ADC15"
                    case ADC8ADC810X = "ADC8_ADC8_10X"
                    case ADC9ADC810X = "ADC9_ADC8_10X"
                    case ADC8ADC8200x = "ADC8_ADC8_200x"
                    case ADC9ADC8200X = "ADC9_ADC8_200X"
                    case ADC10ADC1010X = "ADC10_ADC10_10X"
                    case ADC11ADC1010X = "ADC11_ADC10_10X"
                    case ADC10ADC10200X = "ADC10_ADC10_200X"
                    case ADC11ADC10200X = "ADC11_ADC10_200X"
                    case ADC8ADC91X = "ADC8_ADC9_1X"
                    case ADC9ADC91X = "ADC9_ADC9_1X"
                    case ADC10ADC91X = "ADC10_ADC9_1X"
                    case ADC11ADC91X = "ADC11_ADC9_1X"
                    case ADC12ADC91X = "ADC12_ADC9_1X"
                    case ADC13ADC91X = "ADC13_ADC9_1X"
                    case ADC14ADC91X = "ADC14_ADC9_1X"
                    case ADC15ADC91X = "ADC15_ADC9_1X"
                    case ADC8ADC101X = "ADC8_ADC10_1X"
                    case ADC9ADC101X = "ADC9_ADC10_1X"
                    case ADC10ADC101X = "ADC10_ADC10_1X"
                    case ADC11ADC101X = "ADC11_ADC10_1X"
                    case ADC12ADC101X = "ADC12_ADC10_1X"
                    case ADC13ADC101X = "ADC13_ADC10_1X"
                    case REVC = "REV_C"
                    case REVD = "REV_D"
                    case one60MHz = "16_0_MHz"
                    case HysteresisModeselect = "Hysteresis Mode select"
                    case OFF = "OFF"
                    case one0mV = "10mV"
                    case two5mV = "25mV"
                    case five0mV = "50mV"
                    case InterruptModeselect = "Interrupt Mode select"
                    case BOTHEDGE = "BOTHEDGE"
                    case NEGEDGE = "NEGEDGE"
                    case POSEDGE = "POSEDGE"
                    case LowPowerModeselect = "Low Power Mode select"
                    case DIS = "DIS"
                    case EN = "EN"
                    case NegativeInputMUXSelection = "Negative Input MUX Selection"
                    case PIN0 = "PIN0"
                    case PIN1 = "PIN1"
                    case PIN2 = "PIN2"
                    case DACREF = "DACREF"
                    case PositiveInputMUXSelection = "Positive Input MUX Selection"
                    case PIN3 = "PIN3"
                    case DutyCycleselect = "Duty Cycle select"
                    case DUTY50 = "DUTY50"
                    case DUTY25 = "DUTY25"
                    case ADCResolutionselect = "ADC Resolution select"
                    case one0BIT = "10BIT"
                    case AccumulationSamplesselect = "Accumulation Samples select"
                    case ACC1 = "ACC1"
                    case ACC2 = "ACC2"
                    case ACC4 = "ACC4"
                    case ACC8 = "ACC8"
                    case ACC16 = "ACC16"
                    case ACC32 = "ACC32"
                    case ACC64 = "ACC64"
                    case ClockPrescalerselect = "Clock Pre-scaler select"
                    case DIV2 = "DIV2"
                    case DIV4 = "DIV4"
                    case DIV8 = "DIV8"
                    case DIV16 = "DIV16"
                    case DIV32 = "DIV32"
                    case DIV64 = "DIV64"
                    case DIV128 = "DIV128"
                    case DIV256 = "DIV256"
                    case ReferenceSelection = "Reference Selection"
                    case INTREF = "INTREF"
                    case VDDREF = "VDDREF"
                    case VREFA = "VREFA"
                    case AutomaticSamplingDelayVariationselect = "Automatic Sampling Delay Variation select"
                    case ASVOFF = "ASVOFF"
                    case ASVON = "ASVON"
                    case InitialDelaySelection = "Initial Delay Selection"
                    case DLY0 = "DLY0"
                    case DLY16 = "DLY16"
                    case DLY32 = "DLY32"
                    case DLY64 = "DLY64"
                    case DLY128 = "DLY128"
                    case DLY256 = "DLY256"
                    case WindowComparatorModeselect = "Window Comparator Mode select"
                    case BELOW = "BELOW"
                    case ABOVE = "ABOVE"
                    case INSIDE = "INSIDE"
                    case OUTSIDE = "OUTSIDE"
                    case AnalogChannelSelectionBits = "Analog Channel Selection Bits"
                    case AIN0 = "AIN0"
                    case AIN7 = "AIN7"
                    case AIN8 = "AIN8"
                    case AIN9 = "AIN9"
                    case AIN10 = "AIN10"
                    case AIN11 = "AIN11"
                    case AIN12 = "AIN12"
                    case AIN13 = "AIN13"
                    case AIN14 = "AIN14"
                    case AIN15 = "AIN15"
                    case Operationinactivemodeselect = "Operation in active mode select"
                    case ENABLED = "ENABLED"
                    case SAMPLED = "SAMPLED"
                    case ENWAKE = "ENWAKE"
                    case Samplefrequencyselect = "Sample frequency select"
                    case oneKHZ = "1KHZ"
                    case one25HZ = "125HZ"
                    case Operationinsleepmodeselect = "Operation in sleep mode select"
                    case Bodlevelselect = "Bod level select"
                    case BODLEVEL0 = "BODLEVEL0"
                    case BODLEVEL2 = "BODLEVEL2"
                    case BODLEVEL7 = "BODLEVEL7"
                    case Configurationselect = "Configuration select"
                    case CROSS = "CROSS"
                    case voltagelevelmonitorlevelselect = "voltage level monitor level select"
                    case fiveABOVE = "5ABOVE"
                    case one5ABOVE = "15ABOVE"
                    case two5ABOVE = "25ABOVE"
                    case InterruptModeforLUT0select = "Interrupt Mode for LUT0 select"
                    case INTDISABLE = "INTDISABLE"
                    case RISING = "RISING"
                    case FALLING = "FALLING"
                    case BOTH = "BOTH"
                    case InterruptModeforLUT1select = "Interrupt Mode for LUT1 select"
                    case InterruptModeforLUT2select = "Interrupt Mode for LUT2 select"
                    case InterruptModeforLUT3select = "Interrupt Mode for LUT3 select"
                    case ClockSourceSelection = "Clock Source Selection"
                    case CLKPER = "CLKPER"
                    case IN2 = "IN2"
                    case OSC20M = "OSC20M"
                    case OSCULP32K = "OSCULP32K"
                    case OSCULP1K = "OSCULP1K"
                    case EdgeDetectionEnableselect = "Edge Detection Enable select"
                    case FilterSelection = "Filter Selection"
                    case DISABLE = "DISABLE"
                    case SYNCH = "SYNCH"
                    case FILTER = "FILTER"
                    case LUTInput0SourceSelection = "LUT Input 0 Source Selection"
                    case MASK = "MASK"
                    case FEEDBACK = "FEEDBACK"
                    case LINK = "LINK"
                    case EVENTA = "EVENTA"
                    case EVENTB = "EVENTB"
                    case IO = "IO"
                    case AC0 = "AC0"
                    case USART0 = "USART0"
                    case SPI0 = "SPI0"
                    case TCA0 = "TCA0"
                    case TCB0 = "TCB0"
                    case LUTInput1SourceSelection = "LUT Input 1 Source Selection"
                    case USART1 = "USART1"
                    case TCB1 = "TCB1"
                    case LUTInput2SourceSelection = "LUT Input 2 Source Selection"
                    case USART2 = "USART2"
                    case TCB2 = "TCB2"
                    case SequentialSelection = "Sequential Selection"
                    case DFF = "DFF"
                    case JK = "JK"
                    case LATCH = "LATCH"
                    case RS = "RS"
                    case Clockselect = "Clock select"
                    case XOSC32K = "XOSC32K"
                    case EXTCLK = "EXTCLK"
                    case Prescalerdivisionselect = "Prescaler division select"
                    case twoX = "2X"
                    case sixX = "6X"
                    case one0X = "10X"
                    case one2X = "12X"
                    case two4X = "24X"
                    case four8X = "48X"
                    case Crystalstartuptimeselect = "Crystal startup time select"
                    case oneK = "1K"
                    case one6K = "16K"
                    case three2K = "32K"
                    case six4K = "64K"
                    case CCPsignatureselect = "CCP signature select"
                    case SPM = "SPM"
                    case IOREG = "IOREG"
                    case CRCFlashAccessModeselect = "CRC Flash Access Mode select"
                    case PRIORITY = "PRIORITY"
                    case CRCSourceselect = "CRC Source select"
                    case FLASH = "FLASH"
                    case APPLICATION = "APPLICATION"
                    case BOOT = "BOOT"
                    case Generatorselector = "Generator selector"
                    case UPDI = "UPDI"
                    case RTCOVF = "RTC_OVF"
                    case RTCCMP = "RTC_CMP"
                    case RTCPIT0 = "RTC_PIT0"
                    case RTCPIT1 = "RTC_PIT1"
                    case RTCPIT2 = "RTC_PIT2"
                    case RTCPIT3 = "RTC_PIT3"
                    case CCLLUT0 = "CCL_LUT0"
                    case CCLLUT1 = "CCL_LUT1"
                    case CCLLUT2 = "CCL_LUT2"
                    case CCLLUT3 = "CCL_LUT3"
                    case AC0OUT = "AC0_OUT"
                    case ADC0RESRDY = "ADC0_RESRDY"
                    case PORT0PIN0 = "PORT0_PIN0"
                    case PORT0PIN1 = "PORT0_PIN1"
                    case PORT0PIN2 = "PORT0_PIN2"
                    case PORT0PIN3 = "PORT0_PIN3"
                    case PORT0PIN4 = "PORT0_PIN4"
                    case PORT0PIN5 = "PORT0_PIN5"
                    case PORT0PIN6 = "PORT0_PIN6"
                    case PORT0PIN7 = "PORT0_PIN7"
                    case PORT1PIN0 = "PORT1_PIN0"
                    case PORT1PIN1 = "PORT1_PIN1"
                    case PORT1PIN2 = "PORT1_PIN2"
                    case PORT1PIN3 = "PORT1_PIN3"
                    case PORT1PIN4 = "PORT1_PIN4"
                    case PORT1PIN5 = "PORT1_PIN5"
                    case PORT1PIN6 = "PORT1_PIN6"
                    case PORT1PIN7 = "PORT1_PIN7"
                    case USART0XCK = "USART0_XCK"
                    case USART1XCK = "USART1_XCK"
                    case USART2XCK = "USART2_XCK"
                    case USART3XCK = "USART3_XCK"
                    case SPI0SCK = "SPI0_SCK"
                    case TCA0OVFLUNF = "TCA0_OVF_LUNF"
                    case TCA0HUNF = "TCA0_HUNF"
                    case TCA0CMP0 = "TCA0_CMP0"
                    case TCA0CMP1 = "TCA0_CMP1"
                    case TCA0CMP2 = "TCA0_CMP2"
                    case TCB0CAPT = "TCB0_CAPT"
                    case TCB1CAPT = "TCB1_CAPT"
                    case TCB2CAPT = "TCB2_CAPT"
                    case TCB3CAPT = "TCB3_CAPT"
                    case Softwareeventonchannelsselect = "Software event on channels select"
                    case EVSTROBECH0 = "EV_STROBE_CH0"
                    case EVSTROBECH1 = "EV_STROBE_CH1"
                    case EVSTROBECH2 = "EV_STROBE_CH2"
                    case EVSTROBECH3 = "EV_STROBE_CH3"
                    case EVSTROBECH4 = "EV_STROBE_CH4"
                    case EVSTROBECH5 = "EV_STROBE_CH5"
                    case EVSTROBECH6 = "EV_STROBE_CH6"
                    case EVSTROBECH7 = "EV_STROBE_CH7"
                    case Channelselector = "Channel selector"
                    case CHANNEL0 = "CHANNEL0"
                    case CHANNEL1 = "CHANNEL1"
                    case CHANNEL2 = "CHANNEL2"
                    case CHANNEL3 = "CHANNEL3"
                    case CHANNEL4 = "CHANNEL4"
                    case CHANNEL5 = "CHANNEL5"
                    case BODOperationinActiveModeselect = "BOD Operation in Active Mode select"
                    case BODLevelselect = "BOD Level select"
                    case BODSampleFrequencyselect = "BOD Sample Frequency select"
                    case BODOperationinSleepModeselect = "BOD Operation in Sleep Mode select"
                    case FrequencySelect = "Frequency Select"
                    case sixteenMHZ = "16MHZ"
                    case twentyMHZ = "20MHZ"
                    case BOOTAPP = "BOOTAPP"
                    case NOCRC = "NOCRC"
                    case ResetPinConfigurationselect = "Reset Pin Configuration select"
                    case GPIO = "GPIO"
                    case RST = "RST"
                    case StartupTimeselect = "Startup Time select"
                    case zeroMS = "0MS"
                    
                    case three2MS = "32MS"
                    case six4MS = "64MS"
                    case WatchdogTimeoutPeriodselect = "Watchdog Timeout Period select"
                    case eightCLK = "8CLK"
                    case one6CLK = "16CLK"
                    case three2CLK = "32CLK"
                    case six4CLK = "64CLK"
                    case one28CLK = "128CLK"
                    case two56CLK = "256CLK"
                    case five12CLK = "512CLK"
                    case oneKCLK = "1KCLK"
                    case twoKCLK = "2KCLK"
                    case fourKCLK = "4KCLK"
                    case eightKCLK = "8KCLK"
                    case WatchdogWindowTimeoutPeriodselect = "Watchdog Window Timeout Period select"
                    case LockBitsselect = "Lock Bits select"
                    case RWLOCK = "RWLOCK"
                    case Commandselect = "Command select"
                    case PAGEWRITE = "PAGEWRITE"
                    case PAGEERASE = "PAGEERASE"
                    case PAGEERASEWRITE = "PAGEERASEWRITE"
                    case PAGEBUFCLR = "PAGEBUFCLR"
                    case CHIPERASE = "CHIPERASE"
                    case EEERASE = "EEERASE"
                    case FUSEWRITE = "FUSEWRITE"
                    case InputSenseConfigurationselect = "Input/Sense Configuration select"
                    case BOTHEDGES = "BOTHEDGES"
                    case INPUTDISABLE = "INPUT_DISABLE"
                    case LEVEL = "LEVEL"
                    case EventOutputAselect = "Event Output A select"
                    case ALT1 = "ALT1"
                    case EventOutputCselect = "Event Output C select"
                    case EventOutputDselect = "Event Output D select"
                    case EventOutputFselect = "Event Output F select"
                    case PortMultiplexerTCA0select = "Port Multiplexer TCA0 select"
                    case PORTA = "PORTA"
                    case PORTB = "PORTB"
                    case PORTC = "PORTC"
                    case PORTD = "PORTD"
                    case PORTE = "PORTE"
                    case PORTF = "PORTF"
                    case PortMultiplexerTCB0select = "Port Multiplexer TCB0 select"
                    case PortMultiplexerTCB1select = "Port Multiplexer TCB1 select"
                    case PortMultiplexerTCB2select = "Port Multiplexer TCB2 select"
                    case PortMultiplexerTCB3select = "Port Multiplexer TCB3 select"
                    case PortMultiplexerSPI0select = "Port Multiplexer SPI0 select"
                    case ALT2 = "ALT2"
                    case PortMultiplexerTWI0select = "Port Multiplexer TWI0 select"
                    case PortMultiplexerUSART0select = "Port Multiplexer USART0 select"
                    case PortMultiplexerUSART1select = "Port Multiplexer USART1 select"
                    case PortMultiplexerUSART2select = "Port Multiplexer USART2 select"
                    case PortMultiplexerUSART3select = "Port Multiplexer USART3 select"
                    case ClockSelect = "Clock Select"
                    case INT32K = "INT32K"
                    case INT1K = "INT1K"
                    case TOSC32K = "TOSC32K"
                    case PrescalingFactorselect = "Prescaling Factor select"
                    case DIV1 = "DIV1"
                    case DIV512 = "DIV512"
                    case DIV1024 = "DIV1024"
                    case DIV2048 = "DIV2048"
                    case DIV4096 = "DIV4096"
                    case DIV8192 = "DIV8192"
                    case DIV16384 = "DIV16384"
                    case DIV32768 = "DIV32768"
                    case Periodselect = "Period select"
                    case CYC4 = "CYC4"
                    case CYC8 = "CYC8"
                    case CYC16 = "CYC16"
                    case CYC32 = "CYC32"
                    case CYC64 = "CYC64"
                    case CYC128 = "CYC128"
                    case CYC256 = "CYC256"
                    case CYC512 = "CYC512"
                    case CYC1024 = "CYC1024"
                    case CYC2048 = "CYC2048"
                    case CYC4096 = "CYC4096"
                    case CYC8192 = "CYC8192"
                    case CYC16384 = "CYC16384"
                    case CYC32768 = "CYC32768"
                    case Sleepmodeselect = "Sleep mode select"
                    case Prescalerselect = "Prescaler select"
                    case SPIModeselect = "SPI Mode select"
                    case zero = "0"
                    case ClockSelection = "Clock Selection"
                    case Waveformgenerationmodeselect = "Waveform generation mode select"
                    case FRQ = "FRQ"
                    case SINGLESLOPE = "SINGLESLOPE"
                    case DSTOP = "DSTOP"
                    case DSBOTH = "DSBOTH"
                    case DSBOTTOM = "DSBOTTOM"
                    case UPDATE = "UPDATE"
                    case RESTART = "RESTART"
                    case RESET = "RESET"
                    case Directionselect = "Direction select"
                    case UP = "UP"
                    case DOWN = "DOWN"
                    case EventActionselect = "Event Action select"
                    case ANYEDGE = "ANYEDGE"
                    case HIGHLVL = "HIGHLVL"
                    case UPDOWN = "UPDOWN"
                    case CLKDIV1 = "CLKDIV1"
                    case CLKDIV2 = "CLKDIV2"
                    case CLKTCA = "CLKTCA"
                    case TimerModeselect = "Timer Mode select"
                    case INT = "INT"
                    case TIMEOUT = "TIMEOUT"
                    case CAPT = "CAPT"
                    case PW = "PW"
                    case FRQPW = "FRQPW"
                    case SINGLE = "SINGLE"
                    case PWM8 = "PWM8"
                    case SDAHoldTimeselect = "SDA Hold Time select"
                    case five0NS = "50NS"
                    case three00NS = "300NS"
                    case five00NS = "500NS"
                    case SDASetupTimeselect = "SDA Setup Time select"
                    case fourCYC = "4CYC"
                    case eightCYC = "8CYC"
                    case InactiveBusTimeoutselect = "Inactive Bus Timeout select"
                    case five0US = "50US"
                    case one00US = "100US"
                    case two00US = "200US"
                    case AcknowledgeActionselect = "Acknowledge Action select"
                    case ACK = "ACK"
                    case NACK = "NACK"
                    case NOACT = "NOACT"
                    case REPSTART = "REPSTART"
                    case RECVTRANS = "RECVTRANS"
                    case STOP = "STOP"
                    case BusStateselect = "Bus State select"
                    case UNKNOWN = "UNKNOWN"
                    case OWNER = "OWNER"
                    case BUSY = "BUSY"
                    case COMPTRANS = "COMPTRANS"
                    case RESPONSE = "RESPONSE"
                    case ClientAddressorStopselect = "Client Address or Stop select"
                    case ADR = "ADR"
                    case RS485Modeinternaltransmitterselect = "RS485 Mode internal transmitter select"
                    case EXT = "EXT"
                    case ReceiverModeselect = "Receiver Mode select"
                    case CLK2X = "CLK2X"
                    case GENAUTO = "GENAUTO"
                    case LINAUTO = "LINAUTO"
                    case CommunicationModeselect = "Communication Mode select"
                    case ASYNCHRONOUS = "ASYNCHRONOUS"
                    case SYNCHRONOUS = "SYNCHRONOUS"
                    case IRCOM = "IRCOM"
                    case MSPI = "MSPI"
                    case CharacterSizeselect = "Character Size select"
                    case nineBITL = "9BITL"
                    case nineBITH = "9BITH"
                    case ParityModeselect = "Parity Mode select"
                    case EVEN = "EVEN"
                    case ODD = "ODD"
                    case StopBitModeselect = "Stop Bit Mode select"
                    case AutoBaudWindowselect = "Auto Baud Window select"
                    case WDW0 = "WDW0"
                    case WDW1 = "WDW1"
                    case WDW2 = "WDW2"
                    case WDW3 = "WDW3"
                    case AC0referenceselect = "AC0 reference select"
                    case zeroV55 = "0V55"
                    case oneV1 = "1V1"
                    case fourV34 = "4V34"
                    case oneV5 = "1V5"
                    case AVDD = "AVDD"
                    case ADC0referenceselect = "ADC0 reference select"
                    case Windowselect = "Window select"
                    case CHANNEL6 = "CHANNEL6"
                    case CHANNEL7 = "CHANNEL7"
                    case EventOutputBselect = "Event Output B select"
                    case EventOutputEselect = "Event Output E select"
                    case oneMhz = "1_Mhz"
                    case twoMhz = "2_Mhz"
                    case fourMhz = "4_Mhz"
                    case eightMhz = "8_Mhz"
                    case EXTCLK14CK0MS = "EXTCLK_14CK_0MS"
                }
                
                enum Value: String, Codable {
                    case zeroX00 = "0x00"
                    case zeroX10 = "0x10"
                    case zeroX20 = "0x20"
                    case zeroX02 = "0x02"
                    case zeroX12 = "0x12"
                    case zeroX22 = "0x22"
                    case zeroX07 = "0x07"
                    case zeroX17 = "0x17"
                    case zeroX27 = "0x27"
                    case zeroX06 = "0x06"
                    case zeroX16 = "0x16"
                    case zeroX26 = "0x26"
                    case zeroX05 = "0x05"
                    case zeroX15 = "0x15"
                    case zeroX25 = "0x25"
                    case zeroX04 = "0x04"
                    case zeroX14 = "0x14"
                    case zeroX24 = "0x24"
                    case zeroX08 = "0x08"
                    case zeroX18 = "0x18"
                    case zeroX28 = "0x28"
                    case zeroX38 = "0x38"
                    case zeroX09 = "0x09"
                    case zeroX0A = "0x0A"
                    case zeroX1A = "0x1A"
                    case zeroX2A = "0x2A"
                    case zeroX3A = "0x3A"
                    case zeroX0B = "0x0B"
                    case zeroX0C = "0x0C"
                    case zeroX1C = "0x1C"
                    case zeroX2C = "0x2C"
                    case zeroX3C = "0x3C"
                    case zeroX0D = "0x0D"
                    case zeroX0E = "0x0E"
                    case zeroX1E = "0x1E"
                    case zeroX2E = "0x2E"
                    case zeroX3E = "0x3E"
                    case zeroX0F = "0x0F"
                    case zeroX03 = "0x03"
                    case zeroX01 = "0x01"
                    case OscillatorCalibrationValues = "Oscillator Calibration Values"
                    case InterruptSenseControl = "Interrupt Sense Control"
                    case zeroX19 = "0x19"
                    case zeroX29 = "0x29"
                    case zeroX39 = "0x39"
                    case zeroX1B = "0x1B"
                    case zeroX2B = "0x2B"
                    case zeroX3B = "0x3B"
                    case zeroX1D = "0x1D"
                    case zeroX2D = "0x2D"
                    case zeroX3D = "0x3D"
                    case zeroX1F = "0x1F"
                    case zeroX2F = "0x2F"
                    case zeroX3F = "0x3F"
                    case zeroX13 = "0x13"
                    case zeroX23 = "0x23"
                    case zeroX33 = "0x33"
                    case zeroX11 = "0x11"
                    case zeroX21 = "0x21"
                    case zeroX35 = "0x35"
                    case zeroX34 = "0x34"
                    case zeroX36 = "0x36"
                    case zeroX37 = "0x37"
                    case AnalogChannelSelectionBitsselect = "Analog Channel Selection Bits select"
                    case zeroX0 = "0x0"
                    case zeroX1 = "0x1"
                    case zeroX2 = "0x2"
                    case zeroX3 = "0x3"
                    case zeroX4 = "0x4"
                    case zeroX5 = "0x5"
                    case zeroX6 = "0x6"
                    case zeroX7 = "0x7"
                    case zeroX8 = "0x8"
                    case zeroX9 = "0x9"
                    case zeroXA = "0xA"
                    case zeroXB = "0xB"
                    case zeroXC = "0xC"
                    case zeroXD = "0xD"
                    case zeroXE = "0xE"
                    case zeroXF = "0xF"
                    case zero = "0"
                    case zeroX0a = "0x0a"
                    case zeroX0b = "0x0b"
                    case zeroX0c = "0x0c"
                    case zeroX0d = "0x0d"
                    case zeroX0e = "0x0e"
                    case zeroX0f = "0x0f"
                    case one = "1"
                    case two = "2"
                    case three = "3"
                    case four = "4"
                    case five = "5"
                    case six = "6"
                    case seven = "7"
                    case zeroX30 = "0x30"
                    case zeroX40 = "0x40"
                    case zeroX48 = "0x48"
                    case zeroX50 = "0x50"
                    case zeroX58 = "0x58"
                    case zeroX60 = "0x60"
                    case zeroX68 = "0x68"
                    case zeroX70 = "0x70"
                    case zeroX78 = "0x78"
                    case zeroX80 = "0x80"
                    case zeroX88 = "0x88"
                    case zeroX90 = "0x90"
                    case zeroX98 = "0x98"
                    case zeroXA0 = "0xA0"
                    case zeroXA8 = "0xA8"
                    case zeroXB0 = "0xB0"
                    case zeroXB8 = "0xB8"
                    case zeroXC0 = "0xC0"
                    case zeroXC8 = "0xC8"
                    case zeroXF8 = "0xF8"
                    case eight = "8"
                    case nine = "9"
                    case ten = "10"
                    case one1 = "11"
                    case one2 = "12"
                    case one3 = "13"
                    case one4 = "14"
                    case one5 = "15"
                    case two8 = "28"
                    case zeroX54 = "0x54"
                    case zeroXFF = "0xFF"
                    case one6 = "16"
                    case one7 = "17"
                    case one8 = "18"
                    case one9 = "19"
                    case two0 = "20"
                    case two1 = "21"
                    case two2 = "22"
                    case two3 = "23"
                    case two4 = "24"
                    case two5 = "25"
                    case two6 = "26"
                    case zeroXA7 = "0xA7"
                    case zeroX83 = "0x83"
                    case zeroX93 = "0x93"
                    case zeroX94 = "0x94"
                    case zeroX1f = "0x1f"
                    case zeroXff = "0xff"
                    case zeroX7f = "0x7f"
                    case ADCVoltageReferenceSelection = "ADC Voltage Reference Selection"
                    case InputChannelSelection = "Input Channel Selection"
                    case zeroX31 = "0x31"
                    case zeroX32 = "0x32"
                    case HysteresisModeselect = "Hysteresis Mode select"
                    case InterruptModeselect = "Interrupt Mode select"
                    case LowPowerModeselect = "Low Power Mode select"
                    case NegativeInputMUXSelection = "Negative Input MUX Selection"
                    case PositiveInputMUXSelection = "Positive Input MUX Selection"
                    case DutyCycleselect = "Duty Cycle select"
                    case ADCResolutionselect = "ADC Resolution select"
                    case AccumulationSamplesselect = "Accumulation Samples select"
                    case ClockPrescalerselect = "Clock Pre-scaler select"
                    case ReferenceSelection = "Reference Selection"
                    case AutomaticSamplingDelayVariationselect = "Automatic Sampling Delay Variation select"
                    case InitialDelaySelection = "Initial Delay Selection"
                    case WindowComparatorModeselect = "Window Comparator Mode select"
                    case AnalogChannelSelectionBits = "Analog Channel Selection Bits"
                    case Operationinactivemodeselect = "Operation in active mode select"
                    case Samplefrequencyselect = "Sample frequency select"
                    case Operationinsleepmodeselect = "Operation in sleep mode select"
                    case Bodlevelselect = "Bod level select"
                    case Configurationselect = "Configuration select"
                    case voltagelevelmonitorlevelselect = "voltage level monitor level select"
                    case InterruptModeforLUT0select = "Interrupt Mode for LUT0 select"
                    case InterruptModeforLUT1select = "Interrupt Mode for LUT1 select"
                    case InterruptModeforLUT2select = "Interrupt Mode for LUT2 select"
                    case InterruptModeforLUT3select = "Interrupt Mode for LUT3 select"
                    case ClockSourceSelection = "Clock Source Selection"
                    case EdgeDetectionEnableselect = "Edge Detection Enable select"
                    case FilterSelection = "Filter Selection"
                    case LUTInput0SourceSelection = "LUT Input 0 Source Selection"
                    case LUTInput1SourceSelection = "LUT Input 1 Source Selection"
                    case LUTInput2SourceSelection = "LUT Input 2 Source Selection"
                    case SequentialSelection = "Sequential Selection"
                    case Clockselect = "Clock select"
                    case Prescalerdivisionselect = "Prescaler division select"
                    case Crystalstartuptimeselect = "Crystal startup time select"
                    case CCPsignatureselect = "CCP signature select"
                    case zeroX9D = "0x9D"
                    case zeroXD8 = "0xD8"
                    case CRCFlashAccessModeselect = "CRC Flash Access Mode select"
                    case CRCSourceselect = "CRC Source select"
                    case Generatorselector = "Generator selector"
                    case zeroX41 = "0x41"
                    case zeroX42 = "0x42"
                    case zeroX43 = "0x43"
                    case zeroX44 = "0x44"
                    case zeroX45 = "0x45"
                    case zeroX46 = "0x46"
                    case zeroX47 = "0x47"
                    case zeroX49 = "0x49"
                    case zeroX4A = "0x4A"
                    case zeroX4B = "0x4B"
                    case zeroX4C = "0x4C"
                    case zeroX4D = "0x4D"
                    case zeroX4E = "0x4E"
                    case zeroX4F = "0x4F"
                    case zeroX61 = "0x61"
                    case zeroX62 = "0x62"
                    case zeroX63 = "0x63"
                    case zeroX81 = "0x81"
                    case zeroX84 = "0x84"
                    case zeroX85 = "0x85"
                    case zeroX86 = "0x86"
                    case zeroXA2 = "0xA2"
                    case zeroXA4 = "0xA4"
                    case zeroXA6 = "0xA6"
                    case Softwareeventonchannelsselect = "Software event on channels select"
                    case Channelselector = "Channel selector"
                    case BODOperationinActiveModeselect = "BOD Operation in Active Mode select"
                    case BODLevelselect = "BOD Level select"
                    case BODSampleFrequencyselect = "BOD Sample Frequency select"
                    case BODOperationinSleepModeselect = "BOD Operation in Sleep Mode select"
                    case FrequencySelect = "Frequency Select"
                    case ResetPinConfigurationselect = "Reset Pin Configuration select"
                    case StartupTimeselect = "Startup Time select"
                    case WatchdogTimeoutPeriodselect = "Watchdog Timeout Period select"
                    case WatchdogWindowTimeoutPeriodselect = "Watchdog Window Timeout Period select"
                    case LockBitsselect = "Lock Bits select"
                    case zeroXC5 = "0xC5"
                    case Commandselect = "Command select"
                    case InputSenseConfigurationselect = "Input/Sense Configuration select"
                    case EventOutputAselect = "Event Output A select"
                    case EventOutputCselect = "Event Output C select"
                    case EventOutputDselect = "Event Output D select"
                    case EventOutputFselect = "Event Output F select"
                    case PortMultiplexerTCA0select = "Port Multiplexer TCA0 select"
                    case PortMultiplexerTCB0select = "Port Multiplexer TCB0 select"
                    case PortMultiplexerTCB1select = "Port Multiplexer TCB1 select"
                    case PortMultiplexerTCB2select = "Port Multiplexer TCB2 select"
                    case PortMultiplexerTCB3select = "Port Multiplexer TCB3 select"
                    case PortMultiplexerSPI0select = "Port Multiplexer SPI0 select"
                    case PortMultiplexerTWI0select = "Port Multiplexer TWI0 select"
                    case PortMultiplexerUSART0select = "Port Multiplexer USART0 select"
                    case PortMultiplexerUSART1select = "Port Multiplexer USART1 select"
                    case PortMultiplexerUSART2select = "Port Multiplexer USART2 select"
                    case PortMultiplexerUSART3select = "Port Multiplexer USART3 select"
                    case ClockSelect = "Clock Select"
                    case PrescalingFactorselect = "Prescaling Factor select"
                    case Periodselect = "Period select"
                    case Sleepmodeselect = "Sleep mode select"
                    case Prescalerselect = "Prescaler select"
                    case SPIModeselect = "SPI Mode select"
                    case ClockSelection = "Clock Selection"
                    case Waveformgenerationmodeselect = "Waveform generation mode select"
                    case Directionselect = "Direction select"
                    case EventActionselect = "Event Action select"
                    case TimerModeselect = "Timer Mode select"
                    case SDAHoldTimeselect = "SDA Hold Time select"
                    case SDASetupTimeselect = "SDA Setup Time select"
                    case InactiveBusTimeoutselect = "Inactive Bus Timeout select"
                    case AcknowledgeActionselect = "Acknowledge Action select"
                    case BusStateselect = "Bus State select"
                    case ClientAddressorStopselect = "Client Address or Stop select"
                    case RS485Modeinternaltransmitterselect = "RS485 Mode internal transmitter select"
                    case ReceiverModeselect = "Receiver Mode select"
                    case CommunicationModeselect = "Communication Mode select"
                    case CharacterSizeselect = "Character Size select"
                    case ParityModeselect = "Parity Mode select"
                    case StopBitModeselect = "Stop Bit Mode select"
                    case AutoBaudWindowselect = "Auto Baud Window select"
                    case AC0referenceselect = "AC0 reference select"
                    case ADC0referenceselect = "ADC0 reference select"
                    case Windowselect = "Window select"
                    case EventOutputBselect = "Event Output B select"
                    case EventOutputEselect = "Event Output E select"
                }
            }
        }
    }
}
